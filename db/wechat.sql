/*
 Navicat MySQL Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 80022
 Source Host           : localhost:3306
 Source Schema         : wechat

 Target Server Type    : MySQL
 Target Server Version : 80022
 File Encoding         : 65001

 Date: 20/03/2021 23:23:57
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for articleLike
-- ----------------------------
DROP TABLE IF EXISTS `articleLike`;
CREATE TABLE `articleLike` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `openid` varchar(28) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户openid',
  `articleID` int NOT NULL COMMENT '文章id',
  `isLike` int NOT NULL DEFAULT '1' COMMENT '是否显示(0不显示,1显示)',
  `time` datetime DEFAULT NULL COMMENT '插入时间',
  `updateTime` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of articleLike
-- ----------------------------
BEGIN;
INSERT INTO `articleLike` VALUES (1, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 21, 1, '2019-10-31 11:15:36', '2019-11-02 17:14:40');
INSERT INTO `articleLike` VALUES (2, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 18, 1, '2019-10-31 11:16:36', NULL);
INSERT INTO `articleLike` VALUES (3, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 17, 1, '2019-10-31 16:41:09', NULL);
COMMIT;

-- ----------------------------
-- Table structure for articles
-- ----------------------------
DROP TABLE IF EXISTS `articles`;
CREATE TABLE `articles` (
  `articleID` int NOT NULL AUTO_INCREMENT COMMENT '文章id',
  `typeID` int DEFAULT NULL COMMENT '文章类型和用户选择的类型关联',
  `title` longtext CHARACTER SET utf8 COLLATE utf8_general_ci COMMENT '标题',
  `author` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '作者',
  `shareCode` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '分享图片',
  `listPic` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '文章图片',
  `excerpt` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '摘录/引用',
  `read_counts` int DEFAULT '0' COMMENT '阅读计数',
  `articleTime` datetime DEFAULT NULL COMMENT '文章插入时间',
  `mdcontent` longtext CHARACTER SET utf8 COLLATE utf8_general_ci COMMENT 'md文章',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci COMMENT '文章内容',
  `isShow` int DEFAULT '0' COMMENT '文章是否显示(0不显示,1实现)',
  `telnum` char(13) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '用户id/手机号码',
  PRIMARY KEY (`articleID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of articles
-- ----------------------------
BEGIN;
INSERT INTO `articles` VALUES (1, 10, 'Git 速查表', '汪苗', 'http://oss.wangmiaozero.cn/wechat/53463546.png', 'http://oss.wangmiaozero.cn/wechat/53463546.png', 'Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 ', 350, '2019-04-17 23:19:13', '#### Git命令大致分为这几个模块:\r\n\r\n| 序号  | 模块  | 功能  |\r\n| ------------ | ------------ | ------------ |\r\n| 1  | CREATE  | 关于创建的  |\r\n| 2  | LOCAL CHANGES  | 关于本地改动方面的  |\r\n| 3  | COMMIT HISTORY  | 关于提交历史的  |\r\n| 4  | BRANCHES & TAGS  | 关于分支和标签类的  |\r\n| 5  | UPDATE & PUBLISH  | 关于更新和发布的  |\r\n| 6  | MERGE & REBASE  | 关于分支合并类的  |\r\n| 7  | UNDO  | 关于撤销类的  |\r\n| 8  | SUBMODULE  | 关于子模块  |\r\n\r\n#### CREATE\r\n* 从远程仓库获取代码\r\n\r\n``` \r\ngit clone ssh://user@domain.com/repo.git\r\n``` \r\n\r\n* 初始化本地仓库\r\n\r\n``` \r\ngit init\r\n``` \r\n\r\n#### LOCAL CHANGES\r\n\r\n* 查看仓库的状态,(显示已改动的文件)\r\n\r\n``` \r\ngit status\r\n``` \r\n\r\n* 比较工作区与最新本地版本库\r\n\r\n``` \r\ngit diff\r\ngit diff <fileName>\r\n```\r\n\r\n* 添加所有变化（新增 new、修改 modified、删除 deleted）到暂存区\r\n\r\n``` \r\ngit add -A\r\n``` \r\n\r\n* 添加所有变化（新增 new、修改 modified）到暂存区，不包括被删除(deleted)文件\r\n\r\n```\r\ngit add .\r\n```\r\n* 添加修改(modified)和被删除(deleted)文件，不包括新文件(new)也就是不是被追踪文件（untracked）\r\n\r\n```\r\ngit add -u\r\n```\r\n* 添加文件内某些改动到暂存区\r\n\r\n```\r\ngit add -p <file>\r\n```\r\n* 提交所有的放在暂存区的文件和已经修改（不在暂存区）的文件，且问件是要被追踪（tracked）的\r\n\r\n```\r\ngit commit -a\r\n```\r\n* 提交所有被在暂存区的问件\r\n\r\n```\r\ngit commit\r\n```\r\n* 修改上一次提交日志\r\n\r\n```\r\n$ git commit --amend\r\n```\r\n\r\n#### COMMIT HISTORY\r\n\r\n* 查看提交日志\r\n\r\n```\r\ngit log\r\n```\r\n* 跟踪查看某个文件的历史修改记录\r\n\r\n```\r\ngit log -p <file>\r\n```\r\n* 查看文件是谁什么时候修改什么地方\r\n\r\n```\r\ngit blame <file>\r\n```\r\n\r\n#### BRANCHES & TAGS\r\n* 查看所有分支（包括远程分支）\r\n\r\n```\r\ngit branch -a\r\n```\r\n* 查看所有分支（包括远程分支）和最后一次提交日志\r\n\r\n```\r\ngit branch -av\r\n```\r\n* 切换分支\r\n\r\n```\r\ngit checkout <branch>\r\n```\r\n* 新建分支，不带old-branch为默认在当前分支上建立新分支\r\n\r\n```\r\ngit branch <new-branch> <old-branch>\r\n```\r\n* 新建并且换分支\r\n\r\n```\r\ngit checkout -b <new-branch>\r\n```\r\n* 删除分支，先切换其他分支再删除\r\n\r\n```\r\ngit branch -d  <branch>\r\n```\r\n* 删除远程分支\r\n\r\n```\r\ngit push origin --delete <branch>\r\n```\r\n* 查看标签\r\n\r\n``` \r\ngit tag\r\n```\r\n* 新建标签\r\n\r\n```\r\ngit tag <tag-name>\r\n```\r\n* 删除标签\r\n\r\n```\r\ngit tag -d <tag-name>\r\n```\r\n* 推送标签到远程\r\n\r\n``` \r\ngit push origin tagname\r\ngit push origin --tags\r\n```\r\n\r\n#### UPDATE & PUBLISH\r\n* 列出所有的仓库地址\r\n\r\n```\r\ngit remote -v\r\n```\r\n* 查看某个仓库的信息\r\n\r\n```\r\ngit remote show <remote>\r\n```\r\n* 添加仓库地址\r\n\r\n```\r\ngit remote add <shortname> <url>\r\n```\r\n* 从远程更新代码到本地但不合并\r\n\r\n```\r\ngit fetch <remote>\r\n```\r\n* 从远程更新代码到本地且合并\r\n\r\n```\r\ngit pull <remote> <branch>\r\n```\r\n* 发布到远程地址\r\n\r\n```\r\ngit push <remote> <branch>\r\n```\r\n* 删除远程地址分支\r\n\r\n```\r\ngit branch -dr <remote/branch>\r\n```\r\n* 上传标签\r\n\r\n```\r\ngit push --tags\r\n```\r\n\r\n#### MERGE & REBASE\r\n* 合并目标分支到本地分支\r\n\r\n```\r\ngit merge <branch>\r\n```\r\n* 合并分支，但是不合并提交记录（commit），rebase合并如果有冲突则一个一个文件的去合并解决冲突\r\n\r\n```\r\n git rebase <branch>\r\n```\r\n* 合并终止\r\n\r\n```\r\ngit rebase --abort\r\n```\r\n* 继续合并\r\n\r\n```\r\ngit rebase --continue\r\n```\r\n* 使用配置的合并工具来解决冲突\r\n\r\n```\r\ngit mergetool\r\n```\r\n* 添加已手动合并的文件\r\n\r\n```\r\ngit add <resolved-file>\r\n```\r\n* 删除已手动合并的文件\r\n\r\n```\r\ngit rm <resolved-file>\r\n```\r\n\r\n#### UNDO\r\n* 回退到最近一个提交\r\n\r\n```\r\ngit reset --hard HEAD\r\n```\r\n* 回退到上一次提交（倒数第二次）\r\n\r\n```\r\ngit reset --hard HEAD^\r\n```\r\n* 回退某次提交的某个文件\r\n\r\n```\r\ngit checkout HEAD <file>\r\n```\r\n* 回退到某个提交，但是不删除commit\r\n\r\n```\r\ngit revert <commit>\r\n```\r\n* 彻底回退到某个提交（commit和代码都回退了）\r\n\r\n```\r\ngit reset --hard <commit>\r\n```\r\n* 回退到某个提交（commit回退，代码保留）\r\n\r\n```\r\ngit reset <commit>\r\n```\r\n* 回退到某个提交，并保留以更改的文件\r\n\r\n```\r\ngit reset --keep <commit>\r\n```\r\n\r\n#### SUBMODULE\r\n* 添加子模块\r\n\r\n```\r\ngit submodule add https://github.com/xxxxxx/Test\r\n```\r\n* 克隆你有子模块的项目\r\n\r\n```\r\n// 方法一\r\n git clone https://github.com/xxxxxx/MainProject    \r\n cd MainProject                //  子模块目录Test没有文件\r\n cd Test\r\n git submodule init\r\n git submodule update     // 执行完后就有子模块的代码了\r\n\r\n//方法二\r\n// 自动更新子模块中的代码\r\n git clone --recurse-submodules https://github.com/xxxxxx/MainProject\r\n```\r\n\r\n* 合并两个不同的项目\r\n\r\n```\r\n// 需使用 `--allow-unrelated-histories`\r\n// 将远程master项目合并到你本地项目\r\n git pull origin master --allow-unrelated-histories\r\n```\r\n\r\n参考文献：https://laravel-china.org/topics/8551/git-lookup-table#create', '<h4 id=\"h4-git-\"><a name=\"Git命令大致分为这几个模块:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Git命令大致分为这几个模块:</h4><table>\r\n<thead>\r\n<tr>\r\n<th>序号</th>\r\n<th>模块</th>\r\n<th>功能</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>CREATE</td>\r\n<td>关于创建的</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>LOCAL CHANGES</td>\r\n<td>关于本地改动方面的</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>COMMIT HISTORY</td>\r\n<td>关于提交历史的</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>BRANCHES &amp; TAGS</td>\r\n<td>关于分支和标签类的</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>UPDATE &amp; PUBLISH</td>\r\n<td>关于更新和发布的</td>\r\n</tr>\r\n<tr>\r\n<td>6</td>\r\n<td>MERGE &amp; REBASE</td>\r\n<td>关于分支合并类的</td>\r\n</tr>\r\n<tr>\r\n<td>7</td>\r\n<td>UNDO</td>\r\n<td>关于撤销类的</td>\r\n</tr>\r\n<tr>\r\n<td>8</td>\r\n<td>SUBMODULE</td>\r\n<td>关于子模块</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h4 id=\"h4-create\"><a name=\"CREATE\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>CREATE</h4><ul>\r\n<li>从远程仓库获取代码</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git clone ssh</span><span class=\"pun\">:</span><span class=\"com\">//user@domain.com/repo.git</span></code></li></ol></pre><ul>\r\n<li>初始化本地仓库</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git init</span></code></li></ol></pre><h4 id=\"h4-local-changes\"><a name=\"LOCAL CHANGES\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>LOCAL CHANGES</h4><ul>\r\n<li>查看仓库的状态,(显示已改动的文件)</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git status</span></code></li></ol></pre><ul>\r\n<li>比较工作区与最新本地版本库</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git diff</span></code></li><li class=\"L1\"><code><span class=\"pln\">git diff </span><span class=\"str\">&lt;fileName&gt;</span></code></li></ol></pre><ul>\r\n<li>添加所有变化（新增 new、修改 modified、删除 deleted）到暂存区</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git add </span><span class=\"pun\">-</span><span class=\"pln\">A</span></code></li></ol></pre><ul>\r\n<li>添加所有变化（新增 new、修改 modified）到暂存区，不包括被删除(deleted)文件</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git add </span><span class=\"pun\">.</span></code></li></ol></pre><ul>\r\n<li>添加修改(modified)和被删除(deleted)文件，不包括新文件(new)也就是不是被追踪文件（untracked）</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git add </span><span class=\"pun\">-</span><span class=\"pln\">u</span></code></li></ol></pre><ul>\r\n<li>添加文件内某些改动到暂存区</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git add </span><span class=\"pun\">-</span><span class=\"pln\">p </span><span class=\"str\">&lt;file&gt;</span></code></li></ol></pre><ul>\r\n<li>提交所有的放在暂存区的文件和已经修改（不在暂存区）的文件，且问件是要被追踪（tracked）的</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git commit </span><span class=\"pun\">-</span><span class=\"pln\">a</span></code></li></ol></pre><ul>\r\n<li>提交所有被在暂存区的问件</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git commit</span></code></li></ol></pre><ul>\r\n<li>修改上一次提交日志</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">$ git commit </span><span class=\"pun\">--</span><span class=\"pln\">amend</span></code></li></ol></pre><h4 id=\"h4-commit-history\"><a name=\"COMMIT HISTORY\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>COMMIT HISTORY</h4><ul>\r\n<li>查看提交日志</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git log</span></code></li></ol></pre><ul>\r\n<li>跟踪查看某个文件的历史修改记录</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git log </span><span class=\"pun\">-</span><span class=\"pln\">p </span><span class=\"str\">&lt;file&gt;</span></code></li></ol></pre><ul>\r\n<li>查看文件是谁什么时候修改什么地方</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git blame </span><span class=\"str\">&lt;file&gt;</span></code></li></ol></pre><h4 id=\"h4-branches-amp-tags\"><a name=\"BRANCHES &amp; TAGS\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>BRANCHES &amp; TAGS</h4><ul>\r\n<li>查看所有分支（包括远程分支）</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git branch </span><span class=\"pun\">-</span><span class=\"pln\">a</span></code></li></ol></pre><ul>\r\n<li>查看所有分支（包括远程分支）和最后一次提交日志</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git branch </span><span class=\"pun\">-</span><span class=\"pln\">av</span></code></li></ol></pre><ul>\r\n<li>切换分支</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git checkout </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>新建分支，不带old-branch为默认在当前分支上建立新分支</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git branch </span><span class=\"pun\">&lt;</span><span class=\"kwd\">new</span><span class=\"pun\">-</span><span class=\"pln\">branch</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">old</span><span class=\"pun\">-</span><span class=\"pln\">branch</span><span class=\"pun\">&gt;</span></code></li></ol></pre><ul>\r\n<li>新建并且换分支</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git checkout </span><span class=\"pun\">-</span><span class=\"pln\">b </span><span class=\"pun\">&lt;</span><span class=\"kwd\">new</span><span class=\"pun\">-</span><span class=\"pln\">branch</span><span class=\"pun\">&gt;</span></code></li></ol></pre><ul>\r\n<li>删除分支，先切换其他分支再删除</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git branch </span><span class=\"pun\">-</span><span class=\"pln\">d  </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>删除远程分支</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git push origin </span><span class=\"pun\">--</span><span class=\"kwd\">delete</span><span class=\"pln\"> </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>查看标签</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git tag</span></code></li></ol></pre><ul>\r\n<li>新建标签</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git tag </span><span class=\"pun\">&lt;</span><span class=\"pln\">tag</span><span class=\"pun\">-</span><span class=\"pln\">name</span><span class=\"pun\">&gt;</span></code></li></ol></pre><ul>\r\n<li>删除标签</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git tag </span><span class=\"pun\">-</span><span class=\"pln\">d </span><span class=\"pun\">&lt;</span><span class=\"pln\">tag</span><span class=\"pun\">-</span><span class=\"pln\">name</span><span class=\"pun\">&gt;</span></code></li></ol></pre><ul>\r\n<li>推送标签到远程</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git push origin tagname</span></code></li><li class=\"L1\"><code><span class=\"pln\">git push origin </span><span class=\"pun\">--</span><span class=\"pln\">tags</span></code></li></ol></pre><h4 id=\"h4-update-amp-publish\"><a name=\"UPDATE &amp; PUBLISH\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>UPDATE &amp; PUBLISH</h4><ul>\r\n<li>列出所有的仓库地址</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git remote </span><span class=\"pun\">-</span><span class=\"pln\">v</span></code></li></ol></pre><ul>\r\n<li>查看某个仓库的信息</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git remote show </span><span class=\"str\">&lt;remote&gt;</span></code></li></ol></pre><ul>\r\n<li>添加仓库地址</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git remote add </span><span class=\"str\">&lt;shortname&gt;</span><span class=\"pln\"> </span><span class=\"str\">&lt;url&gt;</span></code></li></ol></pre><ul>\r\n<li>从远程更新代码到本地但不合并</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git fetch </span><span class=\"str\">&lt;remote&gt;</span></code></li></ol></pre><ul>\r\n<li>从远程更新代码到本地且合并</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git pull </span><span class=\"str\">&lt;remote&gt;</span><span class=\"pln\"> </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>发布到远程地址</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git push </span><span class=\"str\">&lt;remote&gt;</span><span class=\"pln\"> </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>删除远程地址分支</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git branch </span><span class=\"pun\">-</span><span class=\"pln\">dr </span><span class=\"pun\">&lt;</span><span class=\"pln\">remote</span><span class=\"pun\">/</span><span class=\"pln\">branch</span><span class=\"pun\">&gt;</span></code></li></ol></pre><ul>\r\n<li>上传标签</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git push </span><span class=\"pun\">--</span><span class=\"pln\">tags</span></code></li></ol></pre><h4 id=\"h4-merge-amp-rebase\"><a name=\"MERGE &amp; REBASE\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>MERGE &amp; REBASE</h4><ul>\r\n<li>合并目标分支到本地分支</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git merge </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>合并分支，但是不合并提交记录（commit），rebase合并如果有冲突则一个一个文件的去合并解决冲突</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\"> git rebase </span><span class=\"str\">&lt;branch&gt;</span></code></li></ol></pre><ul>\r\n<li>合并终止</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git rebase </span><span class=\"pun\">--</span><span class=\"pln\">abort</span></code></li></ol></pre><ul>\r\n<li>继续合并</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git rebase </span><span class=\"pun\">--</span><span class=\"kwd\">continue</span></code></li></ol></pre><ul>\r\n<li>使用配置的合并工具来解决冲突</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git mergetool</span></code></li></ol></pre><ul>\r\n<li>添加已手动合并的文件</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git add </span><span class=\"pun\">&lt;</span><span class=\"pln\">resolved</span><span class=\"pun\">-</span><span class=\"pln\">file</span><span class=\"pun\">&gt;</span></code></li></ol></pre><ul>\r\n<li>删除已手动合并的文件</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git rm </span><span class=\"pun\">&lt;</span><span class=\"pln\">resolved</span><span class=\"pun\">-</span><span class=\"pln\">file</span><span class=\"pun\">&gt;</span></code></li></ol></pre><h4 id=\"h4-undo\"><a name=\"UNDO\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>UNDO</h4><ul>\r\n<li>回退到最近一个提交</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git reset </span><span class=\"pun\">--</span><span class=\"pln\">hard HEAD</span></code></li></ol></pre><ul>\r\n<li>回退到上一次提交（倒数第二次）</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git reset </span><span class=\"pun\">--</span><span class=\"pln\">hard HEAD</span><span class=\"pun\">^</span></code></li></ol></pre><ul>\r\n<li>回退某次提交的某个文件</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git checkout HEAD </span><span class=\"str\">&lt;file&gt;</span></code></li></ol></pre><ul>\r\n<li>回退到某个提交，但是不删除commit</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git revert </span><span class=\"str\">&lt;commit&gt;</span></code></li></ol></pre><ul>\r\n<li>彻底回退到某个提交（commit和代码都回退了）</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git reset </span><span class=\"pun\">--</span><span class=\"pln\">hard </span><span class=\"str\">&lt;commit&gt;</span></code></li></ol></pre><ul>\r\n<li>回退到某个提交（commit回退，代码保留）</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git reset </span><span class=\"str\">&lt;commit&gt;</span></code></li></ol></pre><ul>\r\n<li>回退到某个提交，并保留以更改的文件</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git reset </span><span class=\"pun\">--</span><span class=\"pln\">keep </span><span class=\"str\">&lt;commit&gt;</span></code></li></ol></pre><h4 id=\"h4-submodule\"><a name=\"SUBMODULE\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>SUBMODULE</h4><ul>\r\n<li>添加子模块</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">git submodule add https</span><span class=\"pun\">:</span><span class=\"com\">//github.com/xxxxxx/Test</span></code></li></ol></pre><ul>\r\n<li>克隆你有子模块的项目</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">// 方法一</span></code></li><li class=\"L1\"><code><span class=\"pln\"> git clone https</span><span class=\"pun\">:</span><span class=\"com\">//github.com/xxxxxx/MainProject    </span></code></li><li class=\"L2\"><code><span class=\"pln\"> cd </span><span class=\"typ\">MainProject</span><span class=\"pln\">                </span><span class=\"com\">//  子模块目录Test没有文件</span></code></li><li class=\"L3\"><code><span class=\"pln\"> cd </span><span class=\"typ\">Test</span></code></li><li class=\"L4\"><code><span class=\"pln\"> git submodule init</span></code></li><li class=\"L5\"><code><span class=\"pln\"> git submodule update     </span><span class=\"com\">// 执行完后就有子模块的代码了</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"com\">//方法二</span></code></li><li class=\"L8\"><code><span class=\"com\">// 自动更新子模块中的代码</span></code></li><li class=\"L9\"><code><span class=\"pln\"> git clone </span><span class=\"pun\">--</span><span class=\"pln\">recurse</span><span class=\"pun\">-</span><span class=\"pln\">submodules https</span><span class=\"pun\">:</span><span class=\"com\">//github.com/xxxxxx/MainProject</span></code></li></ol></pre><ul>\r\n<li>合并两个不同的项目</li></ul>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">// 需使用 `--allow-unrelated-histories`</span></code></li><li class=\"L1\"><code><span class=\"com\">// 将远程master项目合并到你本地项目</span></code></li><li class=\"L2\"><code><span class=\"pln\"> git pull origin master </span><span class=\"pun\">--</span><span class=\"pln\">allow</span><span class=\"pun\">-</span><span class=\"pln\">unrelated</span><span class=\"pun\">-</span><span class=\"pln\">histories</span></code></li></ol></pre><p>参考文献：<a href=\"https://laravel-china.org/topics/8551/git-lookup-table#create\">https://laravel-china.org/topics/8551/git-lookup-table#create</a></p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (2, 1, '前端微信授权两种方法', '汪苗', 'http://oss.wangmiaozero.cn/wechat/41324234.png', 'http://oss.wangmiaozero.cn/wechat/41324234.png', 'web前端', 1035, '2019-04-18 22:09:10', '前端微信授权两种方法\r\n\r\n	`@requires_authorization\r\n	方法一：\r\n	 wx.login({\r\n			//获取code\r\n			success: function (res) {\r\n			  var code = res.code; //返回code\r\n			  var appId = \'...\';\r\n			  var secret = \'...\';\r\n			  wx.request({\r\n				url: \'https://api.weixin.qq.com/sns/jscode2session?appid=\' + appId + \'&secret=\' + secret + \'&js_code=\' + code + \'&grant_type=authorization_code\',\r\n				data: {},\r\n				header: {\r\n				  \'content-type\': \'json\'\r\n				},\r\n				success: function (res) {\r\n				  var openid = res.data.openid\r\n				  console.log(\'openid为\' + openid);\r\n				}\r\n			  })\r\n			}\r\n		  })\r\n	方法二：\r\n	wx.login({\r\n			  success: function (res) {\r\n				if (res.code) {  //wx.login获取code。\r\n				  //发起网络请求\r\n				  wx.request({\r\n					url: \'http://eorder/weixin/start\',\r\n					data: {\r\n					  code: res.code,   //将code发送到后台服务器。\r\n					},\r\n					success: function (result) {\r\n					  console.log(result.data.openid)\r\n					}\r\n				  })\r\n				} else {\r\n				  console.log(\'获取用户登录态失败！\' + res.errMsg)\r\n				}\r\n			  }\r\n			})\r\n	`', '<p>前端微信授权两种方法</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"str\">`@requires_authorization</span></code></li><li class=\"L1\"><code><span class=\"str\">方法一：</span></code></li><li class=\"L2\"><code><span class=\"str\"> wx.login({</span></code></li><li class=\"L3\"><code><span class=\"str\">        //获取code</span></code></li><li class=\"L4\"><code><span class=\"str\">        success: function (res) {</span></code></li><li class=\"L5\"><code><span class=\"str\">          var code = res.code; //返回code</span></code></li><li class=\"L6\"><code><span class=\"str\">          var appId = \'...\';</span></code></li><li class=\"L7\"><code><span class=\"str\">          var secret = \'...\';</span></code></li><li class=\"L8\"><code><span class=\"str\">          wx.request({</span></code></li><li class=\"L9\"><code><span class=\"str\">            url: \'https://api.weixin.qq.com/sns/jscode2session?appid=\' + appId + \'&amp;secret=\' + secret + \'&amp;js_code=\' + code + \'&amp;grant_type=authorization_code\',</span></code></li><li class=\"L0\"><code><span class=\"str\">            data: {},</span></code></li><li class=\"L1\"><code><span class=\"str\">            header: {</span></code></li><li class=\"L2\"><code><span class=\"str\">              \'content-type\': \'json\'</span></code></li><li class=\"L3\"><code><span class=\"str\">            },</span></code></li><li class=\"L4\"><code><span class=\"str\">            success: function (res) {</span></code></li><li class=\"L5\"><code><span class=\"str\">              var openid = res.data.openid</span></code></li><li class=\"L6\"><code><span class=\"str\">              console.log(\'openid为\' + openid);</span></code></li><li class=\"L7\"><code><span class=\"str\">            }</span></code></li><li class=\"L8\"><code><span class=\"str\">          })</span></code></li><li class=\"L9\"><code><span class=\"str\">        }</span></code></li><li class=\"L0\"><code><span class=\"str\">      })</span></code></li><li class=\"L1\"><code><span class=\"str\">方法二：</span></code></li><li class=\"L2\"><code><span class=\"str\">wx.login({</span></code></li><li class=\"L3\"><code><span class=\"str\">          success: function (res) {</span></code></li><li class=\"L4\"><code><span class=\"str\">            if (res.code) {  //wx.login获取code。</span></code></li><li class=\"L5\"><code><span class=\"str\">              //发起网络请求</span></code></li><li class=\"L6\"><code><span class=\"str\">              wx.request({</span></code></li><li class=\"L7\"><code><span class=\"str\">                url: \'http://eorder/weixin/start\',</span></code></li><li class=\"L8\"><code><span class=\"str\">                data: {</span></code></li><li class=\"L9\"><code><span class=\"str\">                  code: res.code,   //将code发送到后台服务器。</span></code></li><li class=\"L0\"><code><span class=\"str\">                },</span></code></li><li class=\"L1\"><code><span class=\"str\">                success: function (result) {</span></code></li><li class=\"L2\"><code><span class=\"str\">                  console.log(result.data.openid)</span></code></li><li class=\"L3\"><code><span class=\"str\">                }</span></code></li><li class=\"L4\"><code><span class=\"str\">              })</span></code></li><li class=\"L5\"><code><span class=\"str\">            } else {</span></code></li><li class=\"L6\"><code><span class=\"str\">              console.log(\'获取用户登录态失败！\' + res.errMsg)</span></code></li><li class=\"L7\"><code><span class=\"str\">            }</span></code></li><li class=\"L8\"><code><span class=\"str\">          }</span></code></li><li class=\"L9\"><code><span class=\"str\">        })</span></code></li><li class=\"L0\"><code><span class=\"str\">`</span></code></li></ol></pre>', 1, '17615848207');
INSERT INTO `articles` VALUES (3, 6, '常用的正则', '汪苗', 'http://oss.wangmiaozero.cn/wechat/53453455345.png', 'http://oss.wangmiaozero.cn/wechat/53453455345.png', 'web前端', 1017, '2019-04-19 22:08:32', '```javascript\r\n正则表达式经常被用于字段或任意字符串的校验，比如下面这段校验基本日期格式的JavaScript代码：\r\nvar reg = /^(\\\\d{1,4})(-|\\\\/)(\\\\d{1,2})\\\\2(\\\\d{1,2})$/;\r\nvar r = fieldValue.match(reg);\r\nif(r==null)alert(\'Date format error!\');\r\n\r\n1、校验密码强度\r\n密码的强度必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间\r\n^(?=.\\\\d)(?=.[a-z])(?=.*[A-Z]).{8,10}$\r\n\r\n2、校验中文\r\n字符串只能是中文\r\n^[\\\\u4e00-\\\\u9fa5]{0,}$\r\n\r\n3、由数字，26个英文字母或下划线组成的字符串\r\n^\\\\w+$\r\n\r\n4、校验E-Mail 地址\r\n[\\\\w!#$%&\'+/=?^_`{|}~-]+(?:\\.[\\\\w!#$%&\'+/=?^_`{|}~-]+)@(?:[\\\\w](?:[\\\\w-][\\\\w])?\\.)+\\\\w?\r\n\r\n5、校验身份证号码\r\n15位：\r\n^[1-9]\\\\d{7}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}$\r\n18位：\r\n^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}([0-9]|X)$\r\n\r\n6、校验日期\r\n“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年\r\n^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$\r\n\r\n7、校验金额\r\n金额校验，精确到2位小数\r\n^[0-9]+(.[0-9]{2})?$\r\n\r\n8、校验手机号\r\n下面是国内 13、15、18开头的手机号正则表达式\r\n^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\\\d{8}$\r\n\r\n9、判断IE的版本\r\n^.MSIE 5-8?(?!.Trident\\\\/[5-9]\\.0).*$\r\n\r\n10、校验IP-v4地址\r\n\\\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\b\r\n\r\n11、校验IP-v6地址\r\n(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\r\n\r\n12、检查URL的前缀\r\nif (!s.match(/^[a-zA-Z]+:\\\\/\\\\//)){\r\ns = \'http://\' + s;}\r\n\r\n13、提取URL链接\r\n^(f|ht){1}(tp|tps):\\\\/\\\\/([\\\\w-]+\\.)+[\\\\w-]+(\\\\/[\\\\w- ./?%&=]*)?\r\n\r\n14、文件路径及扩展名校验\r\n^([a-zA-Z]\\\\:|\\\\\\)\\\\\\([^\\\\\\]+\\\\\\)[^\\\\/:?\"<>|]+\\.txt(l)?$\r\n\r\n15、提取Color Hex Codes\r\n^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\r\n\r\n16、提取网页图片\r\n\\\\< [img][^\\\\\\\\>][src] = [\\\\\"\\\\\']{0,1}([^\\\\\"\\\\\'\\\\ >]*)\r\n\r\n17、提取页面超链接\r\n(<a\\\\s(?!.\\\\brel=)[^>])(href=\"https?:\\\\/\\\\/)((?!(?:(?:www\\.)?\'.implode(\'|(?:www\\.)?\', $follow_list).\'))[^\"]+)\"((?!.\\\\brel=)[^>])(?:[^>])>\r\n\r\n18、查找CSS属性\r\n^\\\\s[a-zA-Z\\-]+\\\\s[:]{1}\\\\s[a-zA-Z0-9\\\\s.#]+[;]{1}\r\n\r\n19、抽取注释\r\n<!--(.*?)-->\r\n\r\n20、匹配HTML标签\r\n<\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s=\\\\s(?:\".?\"|\'.?\'|[\\\\^\'\">\\\\s]+))?)+\\\\s|\\\\s)\\\\/?>\r\n\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pun\">正则表达式经常被用于字段或任意字符串的校验，比如下面这段校验基本日期格式的</span><span class=\"typ\">JavaScript</span><span class=\"pun\">代码：</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"kwd\">var</span><span class=\"pln\"> reg </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">/^(\\\\d{1,4})(-|\\\\/</span><span class=\"pun\">)(</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">})</span><span class=\"pln\">\\\\</span><span class=\"lit\">2</span><span class=\"pun\">(</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">})</span><span class=\"pln\">$</span><span class=\"pun\">/;</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"kwd\">var</span><span class=\"pln\"> r </span><span class=\"pun\">=</span><span class=\"pln\"> fieldValue</span><span class=\"pun\">.</span><span class=\"pln\">match</span><span class=\"pun\">(</span><span class=\"pln\">reg</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">r</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\">alert</span><span class=\"pun\">(</span><span class=\"str\">\'Date format error!\'</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"lit\">1</span><span class=\"pun\">、校验密码强度</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pun\">密码的强度必须包含大小写字母和数字的组合，不能使用特殊字符，长度在</span><span class=\"lit\">8</span><span class=\"pun\">-</span><span class=\"lit\">10</span><span class=\"pun\">之间</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pun\">^(?=.</span><span class=\"pln\">\\\\d</span><span class=\"pun\">)(?=.[</span><span class=\"pln\">a</span><span class=\"pun\">-</span><span class=\"pln\">z</span><span class=\"pun\">])(?=.*[</span><span class=\"pln\">A</span><span class=\"pun\">-</span><span class=\"pln\">Z</span><span class=\"pun\">]).{</span><span class=\"lit\">8</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">}</span><span class=\"pln\">$</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"lit\">2</span><span class=\"pun\">、校验中文</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pun\">字符串只能是中文</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pun\">^[</span><span class=\"pln\">\\\\u4e00</span><span class=\"pun\">-</span><span class=\"pln\">\\\\u9fa5</span><span class=\"pun\">]{</span><span class=\"lit\">0</span><span class=\"pun\">,}</span><span class=\"pln\">$</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"lit\">3</span><span class=\"pun\">、由数字，</span><span class=\"lit\">26</span><span class=\"pun\">个英文字母或下划线组成的字符串</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pun\">^</span><span class=\"pln\">\\\\w</span><span class=\"pun\">+</span><span class=\"pln\">$</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"lit\">4</span><span class=\"pun\">、校验</span><span class=\"pln\">E</span><span class=\"pun\">-</span><span class=\"typ\">Mail</span><span class=\"pln\"> </span><span class=\"pun\">地址</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pun\">[</span><span class=\"pln\">\\\\w</span><span class=\"pun\">!#</span><span class=\"pln\">$</span><span class=\"pun\">%&amp;</span><span class=\"str\">\'+/=?^_`{|}~-]+(?:\\.[\\\\w!#$%&amp;\'</span><span class=\"pun\">+/=?^</span><span class=\"pln\">_</span><span class=\"pun\">`{|}~-]+)@(?:[</span><span class=\"pln\">\\\\w</span><span class=\"pun\">](?:[</span><span class=\"pln\">\\\\w</span><span class=\"pun\">-][</span><span class=\"pln\">\\\\w</span><span class=\"pun\">])?</span><span class=\"pln\">\\.</span><span class=\"pun\">)+</span><span class=\"pln\">\\\\w</span><span class=\"pun\">?</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"lit\">5</span><span class=\"pun\">、校验身份证号码</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"lit\">15</span><span class=\"pun\">位：</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pun\">^[</span><span class=\"lit\">1</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">7</span><span class=\"pun\">}((</span><span class=\"lit\">0</span><span class=\"pln\">\\\\d</span><span class=\"pun\">)|(</span><span class=\"lit\">1</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">]))(([</span><span class=\"lit\">0</span><span class=\"pun\">|</span><span class=\"lit\">1</span><span class=\"pun\">|</span><span class=\"lit\">2</span><span class=\"pun\">]</span><span class=\"pln\">\\\\d</span><span class=\"pun\">)|</span><span class=\"lit\">3</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">])</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">3</span><span class=\"pun\">}</span><span class=\"pln\">$</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"lit\">18</span><span class=\"pun\">位：</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pun\">^[</span><span class=\"lit\">1</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">5</span><span class=\"pun\">}[</span><span class=\"lit\">1</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">3</span><span class=\"pun\">}((</span><span class=\"lit\">0</span><span class=\"pln\">\\\\d</span><span class=\"pun\">)|(</span><span class=\"lit\">1</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">]))(([</span><span class=\"lit\">0</span><span class=\"pun\">|</span><span class=\"lit\">1</span><span class=\"pun\">|</span><span class=\"lit\">2</span><span class=\"pun\">]</span><span class=\"pln\">\\\\d</span><span class=\"pun\">)|</span><span class=\"lit\">3</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">])</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">3</span><span class=\"pun\">}([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"pln\">X</span><span class=\"pun\">)</span><span class=\"pln\">$</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"lit\">6</span><span class=\"pun\">、校验日期</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pun\">“</span><span class=\"pln\">yyyy</span><span class=\"pun\">-</span><span class=\"pln\">mm</span><span class=\"pun\">-</span><span class=\"pln\">dd</span><span class=\"pun\">“</span><span class=\"pln\"> </span><span class=\"pun\">格式的日期校验，已考虑平闰年</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pun\">^(?:(?!</span><span class=\"lit\">0000</span><span class=\"pun\">)[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]{</span><span class=\"lit\">4</span><span class=\"pun\">}-(?:(?:</span><span class=\"lit\">0</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">])-(?:</span><span class=\"lit\">0</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">8</span><span class=\"pun\">])|(?:</span><span class=\"lit\">0</span><span class=\"pun\">[</span><span class=\"lit\">13</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">])-(?:</span><span class=\"lit\">29</span><span class=\"pun\">|</span><span class=\"lit\">30</span><span class=\"pun\">)|(?:</span><span class=\"lit\">0</span><span class=\"pun\">[</span><span class=\"lit\">13578</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">[</span><span class=\"lit\">02</span><span class=\"pun\">])-</span><span class=\"lit\">31</span><span class=\"pun\">)|(?:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]{</span><span class=\"lit\">2</span><span class=\"pun\">}(?:</span><span class=\"lit\">0</span><span class=\"pun\">[</span><span class=\"lit\">48</span><span class=\"pun\">]|[</span><span class=\"lit\">2468</span><span class=\"pun\">][</span><span class=\"lit\">048</span><span class=\"pun\">]|[</span><span class=\"lit\">13579</span><span class=\"pun\">][</span><span class=\"lit\">26</span><span class=\"pun\">])|(?:</span><span class=\"lit\">0</span><span class=\"pun\">[</span><span class=\"lit\">48</span><span class=\"pun\">]|[</span><span class=\"lit\">2468</span><span class=\"pun\">][</span><span class=\"lit\">048</span><span class=\"pun\">]|[</span><span class=\"lit\">13579</span><span class=\"pun\">][</span><span class=\"lit\">26</span><span class=\"pun\">])</span><span class=\"lit\">00</span><span class=\"pun\">)-</span><span class=\"lit\">02</span><span class=\"pun\">-</span><span class=\"lit\">29</span><span class=\"pun\">)</span><span class=\"pln\">$</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"lit\">7</span><span class=\"pun\">、校验金额</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pun\">金额校验，精确到</span><span class=\"lit\">2</span><span class=\"pun\">位小数</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pun\">^[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]+(.[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]{</span><span class=\"lit\">2</span><span class=\"pun\">})?</span><span class=\"pln\">$</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"lit\">8</span><span class=\"pun\">、校验手机号</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pun\">下面是国内</span><span class=\"pln\"> </span><span class=\"lit\">13</span><span class=\"pun\">、</span><span class=\"lit\">15</span><span class=\"pun\">、</span><span class=\"lit\">18</span><span class=\"pun\">开头的手机号正则表达式</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pun\">^(</span><span class=\"lit\">13</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"lit\">14</span><span class=\"pun\">[</span><span class=\"lit\">5</span><span class=\"pun\">|</span><span class=\"lit\">7</span><span class=\"pun\">]|</span><span class=\"lit\">15</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">|</span><span class=\"lit\">1</span><span class=\"pun\">|</span><span class=\"lit\">2</span><span class=\"pun\">|</span><span class=\"lit\">3</span><span class=\"pun\">|</span><span class=\"lit\">5</span><span class=\"pun\">|</span><span class=\"lit\">6</span><span class=\"pun\">|</span><span class=\"lit\">7</span><span class=\"pun\">|</span><span class=\"lit\">8</span><span class=\"pun\">|</span><span class=\"lit\">9</span><span class=\"pun\">]|</span><span class=\"lit\">18</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">|</span><span class=\"lit\">1</span><span class=\"pun\">|</span><span class=\"lit\">2</span><span class=\"pun\">|</span><span class=\"lit\">3</span><span class=\"pun\">|</span><span class=\"lit\">5</span><span class=\"pun\">|</span><span class=\"lit\">6</span><span class=\"pun\">|</span><span class=\"lit\">7</span><span class=\"pun\">|</span><span class=\"lit\">8</span><span class=\"pun\">|</span><span class=\"lit\">9</span><span class=\"pun\">])</span><span class=\"pln\">\\\\d</span><span class=\"pun\">{</span><span class=\"lit\">8</span><span class=\"pun\">}</span><span class=\"pln\">$</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"lit\">9</span><span class=\"pun\">、判断</span><span class=\"pln\">IE</span><span class=\"pun\">的版本</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pun\">^.</span><span class=\"pln\">MSIE </span><span class=\"lit\">5</span><span class=\"pun\">-</span><span class=\"lit\">8</span><span class=\"pun\">?(?!.</span><span class=\"typ\">Trident</span><span class=\"pln\">\\\\</span><span class=\"pun\">/[</span><span class=\"lit\">5</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]</span><span class=\"pln\">\\.</span><span class=\"lit\">0</span><span class=\"pun\">).*</span><span class=\"pln\">$</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"lit\">10</span><span class=\"pun\">、校验</span><span class=\"pln\">IP</span><span class=\"pun\">-</span><span class=\"pln\">v4</span><span class=\"pun\">地址</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">\\\\b</span><span class=\"pun\">(?:(?:</span><span class=\"lit\">25</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">5</span><span class=\"pun\">]|</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">4</span><span class=\"pun\">][</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|[</span><span class=\"lit\">01</span><span class=\"pun\">]?[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">][</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]?)</span><span class=\"pln\">\\.</span><span class=\"pun\">){</span><span class=\"lit\">3</span><span class=\"pun\">}(?:</span><span class=\"lit\">25</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">5</span><span class=\"pun\">]|</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">4</span><span class=\"pun\">][</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]|[</span><span class=\"lit\">01</span><span class=\"pun\">]?[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">][</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]?)</span><span class=\"pln\">\\\\b</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"lit\">11</span><span class=\"pun\">、校验</span><span class=\"pln\">IP</span><span class=\"pun\">-</span><span class=\"pln\">v6</span><span class=\"pun\">地址</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pun\">(([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">}:|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">}:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">}(:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">}|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}(:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">}|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">}(:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">}(:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">}|[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:((:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">})|:((:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">}|:)|</span><span class=\"pln\">fe80</span><span class=\"pun\">:(:[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}%[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">zA</span><span class=\"pun\">-</span><span class=\"pln\">Z</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,}|::(</span><span class=\"pln\">ffff</span><span class=\"pun\">(:</span><span class=\"lit\">0</span><span class=\"pun\">{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}:){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}((</span><span class=\"lit\">25</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">5</span><span class=\"pun\">]|(</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">4</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">{</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">])</span><span class=\"pln\">\\.</span><span class=\"pun\">){</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">}(</span><span class=\"lit\">25</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">5</span><span class=\"pun\">]|(</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">4</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">{</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">])|([</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9a</span><span class=\"pun\">-</span><span class=\"pln\">fA</span><span class=\"pun\">-</span><span class=\"pln\">F</span><span class=\"pun\">]{</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:){</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">}:((</span><span class=\"lit\">25</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">5</span><span class=\"pun\">]|(</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">4</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">{</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">])</span><span class=\"pln\">\\.</span><span class=\"pun\">){</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">}(</span><span class=\"lit\">25</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">5</span><span class=\"pun\">]|(</span><span class=\"lit\">2</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">4</span><span class=\"pun\">]|</span><span class=\"lit\">1</span><span class=\"pun\">{</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]){</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">}[</span><span class=\"lit\">0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]))</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"lit\">12</span><span class=\"pun\">、检查</span><span class=\"pln\">URL</span><span class=\"pun\">的前缀</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(!</span><span class=\"pln\">s</span><span class=\"pun\">.</span><span class=\"pln\">match</span><span class=\"pun\">(</span><span class=\"str\">/^[a-zA-Z]+:\\\\/</span><span class=\"pln\">\\\\</span><span class=\"com\">//)){</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">s </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\'http://\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> s</span><span class=\"pun\">;}</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"lit\">13</span><span class=\"pun\">、提取</span><span class=\"pln\">URL</span><span class=\"pun\">链接</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pun\">^(</span><span class=\"pln\">f</span><span class=\"pun\">|</span><span class=\"pln\">ht</span><span class=\"pun\">){</span><span class=\"lit\">1</span><span class=\"pun\">}(</span><span class=\"pln\">tp</span><span class=\"pun\">|</span><span class=\"pln\">tps</span><span class=\"pun\">):</span><span class=\"pln\">\\\\</span><span class=\"pun\">/</span><span class=\"pln\">\\\\</span><span class=\"pun\">/([</span><span class=\"pln\">\\\\w</span><span class=\"pun\">-]+</span><span class=\"pln\">\\.</span><span class=\"pun\">)+[</span><span class=\"pln\">\\\\w</span><span class=\"pun\">-]+(</span><span class=\"pln\">\\\\</span><span class=\"pun\">/[</span><span class=\"pln\">\\\\w</span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"pun\">./?%&amp;=]*)?</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"lit\">14</span><span class=\"pun\">、文件路径及扩展名校验</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pun\">^([</span><span class=\"pln\">a</span><span class=\"pun\">-</span><span class=\"pln\">zA</span><span class=\"pun\">-</span><span class=\"pln\">Z</span><span class=\"pun\">]</span><span class=\"pln\">\\\\</span><span class=\"pun\">:|</span><span class=\"pln\">\\\\\\)\\\\\\(</span><span class=\"pun\">[^</span><span class=\"pln\">\\\\\\]</span><span class=\"pun\">+</span><span class=\"pln\">\\\\\\)</span><span class=\"pun\">[^</span><span class=\"pln\">\\\\</span><span class=\"pun\">/:?</span><span class=\"str\">\"&lt;&gt;|]+</span><span class=\"pln\">\\.txt</span><span class=\"pun\">(</span><span class=\"pln\">l</span><span class=\"pun\">)?</span><span class=\"pln\">$</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"lit\">15</span><span class=\"pun\">、提取</span><span class=\"typ\">Color</span><span class=\"pln\"> </span><span class=\"typ\">Hex</span><span class=\"pln\"> </span><span class=\"typ\">Codes</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pun\">^#([</span><span class=\"pln\">A</span><span class=\"pun\">-</span><span class=\"typ\">Fa</span><span class=\"pun\">-</span><span class=\"pln\">f0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]{</span><span class=\"lit\">6</span><span class=\"pun\">}|[</span><span class=\"pln\">A</span><span class=\"pun\">-</span><span class=\"typ\">Fa</span><span class=\"pun\">-</span><span class=\"pln\">f0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pun\">]{</span><span class=\"lit\">3</span><span class=\"pun\">})</span><span class=\"pln\">$</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"lit\">16</span><span class=\"pun\">、提取网页图片</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">\\\\</span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">img</span><span class=\"pun\">][^</span><span class=\"pln\">\\\\\\\\</span><span class=\"pun\">&gt;][</span><span class=\"pln\">src</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">\\\\</span><span class=\"str\">\"\\\\\']{0,1}([^\\\\\"</span><span class=\"pln\">\\\\</span><span class=\"str\">\'</span><span class=\"pln\">\\\\ </span><span class=\"pun\">&gt;]*)</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"lit\">17</span><span class=\"pun\">、提取页面超链接</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pun\">(&lt;</span><span class=\"pln\">a\\\\s</span><span class=\"pun\">(?!.</span><span class=\"pln\">\\\\brel</span><span class=\"pun\">=)[^&gt;])(</span><span class=\"pln\">href</span><span class=\"pun\">=</span><span class=\"str\">\"https?:\\\\/\\\\/)((?!(?:(?:www\\.)?\'.implode(\'|(?:www\\.)?\', $follow_list).\'))[^\"</span><span class=\"pun\">]+)</span><span class=\"str\">\"((?!</span><span class=\"pun\">.</span><span class=\"pln\">\\\\brel</span><span class=\"pun\">=)[^&gt;])(?:[^&gt;])&gt;</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"lit\">18</span><span class=\"pun\">、查找</span><span class=\"pln\">CSS</span><span class=\"pun\">属性</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pun\">^</span><span class=\"pln\">\\\\s</span><span class=\"pun\">[</span><span class=\"pln\">a</span><span class=\"pun\">-</span><span class=\"pln\">zA</span><span class=\"pun\">-</span><span class=\"pln\">Z\\-</span><span class=\"pun\">]+</span><span class=\"pln\">\\\\s</span><span class=\"pun\">[:]{</span><span class=\"lit\">1</span><span class=\"pun\">}</span><span class=\"pln\">\\\\s</span><span class=\"pun\">[</span><span class=\"pln\">a</span><span class=\"pun\">-</span><span class=\"pln\">zA</span><span class=\"pun\">-</span><span class=\"pln\">Z0</span><span class=\"pun\">-</span><span class=\"lit\">9</span><span class=\"pln\">\\\\s</span><span class=\"pun\">.#]+[;]{</span><span class=\"lit\">1</span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"lit\">19</span><span class=\"pun\">、抽取注释</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pun\">&lt;!--(.*?)--&gt;</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"lit\">20</span><span class=\"pun\">、匹配</span><span class=\"pln\">HTML</span><span class=\"pun\">标签</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pun\">&lt;</span><span class=\"pln\">\\\\</span><span class=\"pun\">/?</span><span class=\"pln\">\\\\w</span><span class=\"pun\">+((</span><span class=\"pln\">\\\\s</span><span class=\"pun\">+</span><span class=\"pln\">\\\\w</span><span class=\"pun\">+(</span><span class=\"pln\">\\\\s</span><span class=\"pun\">=</span><span class=\"pln\">\\\\s</span><span class=\"pun\">(?:</span><span class=\"str\">\".?\"</span><span class=\"pun\">|</span><span class=\"str\">\'.?\'</span><span class=\"pun\">|[</span><span class=\"pln\">\\\\</span><span class=\"pun\">^</span><span class=\"str\">\'\"&gt;\\\\s]+))?)+\\\\s|\\\\s)\\\\/?&gt;</span></code></li></ol></pre>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (4, 1, '小程序审核必须注意的10个坑！', '汪苗', 'http://oss.wangmiaozero.cn/wechat/5.png', 'http://oss.wangmiaozero.cn/wechat/5.png', 'web前端', 1042, '2019-04-20 21:07:51', '创建一个小程序最尴尬的场景是：好不容易开发完了，却在代码提交给官方审核时被卡住了。小程序的审核风格跟苹果的App Store很像，审核非常严格，而且时间有时快有时慢，特别是一样会有一些让人哭笑不得的拒绝理由。为了让大家摆脱这些坑，今天，天鸽君就整理了10种常见的被拒理由，大家仔细阅读，避免在小程序提交审核时掉进坑里。1、类目不完善或者是类目选择不当这是目前最普遍、也是最容易出现的坑。小程序服务类目所对应的页面中的核心内容必须与该类目一致，并且跳转不要超过2次。例如，如果你做的是，小程序里却搞起了电商。千万不能搞一些挂羊头卖狗肉的小程序，这是肯定要禁止的。建议大家提交审核前一定要仔细看区分，可以了解下竞品使用的是什么类目。下面这张类目表可以收藏一下，希望可以让大家在创建天鸽小程序时有所帮助。\r\n\r\n![](http://bmob-cdn-25822.b0.upaiyun.com/2019/05/17/ac156b314003ec1f80fcf3105f64f83d.png)\r\n2、功能不完善/功能不完整出现这个问题，一般是审核人员不会用，误以为你的小程序没开发完整，如果你确定没问题的话可以多提交一次试试。反正天鸽君遇到很多非常奇怪的现象，当一个小程序未通过审核时，天鸽君没做任何改动，再次提交竟发现神奇的通过了。当然，大家不要学天鸽君，如果你有的是时间，倒是可以试试。如果急着要用，那就把小程序的功能完善好再提交审核。\r\n\r\n3、产品的某个功能有bug\r\n如果审核人员在体验小程序时，找到了Bug，那也是不能通过审核的。审核人员还能帮忙找BUG……也真是贴心。但是能不能说清楚一点：到底BUG在哪里？！\r\n\r\n4、小程序简介没有介绍小程序功能很多人刚开始开发的时候，随便填写了一下简介，开发结束后忘记补充完整就直接提交了。将简介补充完整，重新上传就可以了。这种低级失误还是少犯才好，来回折腾很浪费时间的。\r\n\r\n5、含有声音视频类目，请补充对应类目音频和视频文件不好管理，容易出现风险，所以微信官方审核特别严格。一定要慎之又慎！\r\n\r\n6、图片被压缩体验不好这是饱汉不知饿汉饥，被压缩就是体验不好吗？那不压缩用户访问速度慢，体验岂不是更不好？再说服务器资源很贵的哟！\r\n\r\n7、不得展示和推荐第三方小程序。不能做小程序导航、小程序排行榜之类的产品或功能，真是太不合理了。其实有很多做小程序的客户都在问：我的小程序在哪展示才能获得更多流量？哪怕微信官方做一个小程序商店也好啊！\r\n\r\n8、不能含有诱导分享的内容这一条可谓教训惨痛！此前，仅 5 小时就产生了1700万PV（访问量）的「匿名聊聊」小程序，因为涉嫌诱导分享直接被封号；随后重新上线的「走心聊聊」不到一个星期，也被封号；被称为小程序版阅后即焚的「闪照」也因诱导分享被暂停服务。\r\n\r\n9、不能包含赌博、竞猜和抽奖等内容很好奇，无码科技发布的小程序「抽奖助手」是怎么通过审核的？\r\n\r\n10、慎用「附近的小程序」功能「附近的小程序」是小程序最主要的流量入口之一，特别是对于线下连锁门店而言，简直是曝光神器。不过，近期「附近的小程序」审核比较严格，一个经营资质只能添加一个地点，一个地点只能展现一个小程序，并且，一个小程序最多能开启10个附近展示的地址，每个地址都需要主体、资质证件号、地址等。如果用非常规手段实现了小程序的多地分身，也有可能会被微信永久性封禁「附近的小程序」功能。比如有些商家在「附近的小程序」中设置跨区多定位，如明明是南宁的门店，却定位到广州，而且还不是旗下分店，被用户举报后，将有可能会被微信官方永久性封禁「附近的小程序」功能。音符动态简约分割线.\r\n\r\n小程序如何快速过审？这里有一些开发者的经验：\r\n1、尽量早提交，虽然目前小程序的审核期已经比公测时短了不少，但是审核依然严格，早提交早发现问题。\r\n2、仔细阅读官方文档！！！这点非常重要！不看文档活该一直被拒。\r\n3、审核中的代码只能有一份，再次提交会覆盖原版本，并重新计算审核周期。如果提交的代码审核五六天未出结果，此时又准备好了新版本代码，建议先等待旧版本审核完成再提交，避免长时间无成果可发布。\r\n4、服务器配置每月只有3次修改机会，省着点用，小心没机会。而且没事别乱动下面的配置，一定要确定了再动，并且一次性写完整，不然你改个小标点都会浪费你的一次机会。\r\n5、可以通过邮件跟微信团队沟通。虽然天鸽君已经总结的很全面了，但是只要点击“提交”后，你的代码就将开启一段前途未卜的旅行，祝各位审核顺利吧！\r\n\r\n\r\n\r\n\r\n\r\n', '<p>创建一个小程序最尴尬的场景是：好不容易开发完了，却在代码提交给官方审核时被卡住了。小程序的审核风格跟苹果的App Store很像，审核非常严格，而且时间有时快有时慢，特别是一样会有一些让人哭笑不得的拒绝理由。为了让大家摆脱这些坑，今天，天鸽君就整理了10种常见的被拒理由，大家仔细阅读，避免在小程序提交审核时掉进坑里。1、类目不完善或者是类目选择不当这是目前最普遍、也是最容易出现的坑。小程序服务类目所对应的页面中的核心内容必须与该类目一致，并且跳转不要超过2次。例如，如果你做的是，小程序里却搞起了电商。千万不能搞一些挂羊头卖狗肉的小程序，这是肯定要禁止的。建议大家提交审核前一定要仔细看区分，可以了解下竞品使用的是什么类目。下面这张类目表可以收藏一下，希望可以让大家在创建天鸽小程序时有所帮助。</p>\r\n<p><img src=\"http://bmob-cdn-25822.b0.upaiyun.com/2019/05/17/ac156b314003ec1f80fcf3105f64f83d.png\" alt=\"\"><br>2、功能不完善/功能不完整出现这个问题，一般是审核人员不会用，误以为你的小程序没开发完整，如果你确定没问题的话可以多提交一次试试。反正天鸽君遇到很多非常奇怪的现象，当一个小程序未通过审核时，天鸽君没做任何改动，再次提交竟发现神奇的通过了。当然，大家不要学天鸽君，如果你有的是时间，倒是可以试试。如果急着要用，那就把小程序的功能完善好再提交审核。</p>\r\n<p>3、产品的某个功能有bug<br>如果审核人员在体验小程序时，找到了Bug，那也是不能通过审核的。审核人员还能帮忙找BUG……也真是贴心。但是能不能说清楚一点：到底BUG在哪里？！</p>\r\n<p>4、小程序简介没有介绍小程序功能很多人刚开始开发的时候，随便填写了一下简介，开发结束后忘记补充完整就直接提交了。将简介补充完整，重新上传就可以了。这种低级失误还是少犯才好，来回折腾很浪费时间的。</p>\r\n<p>5、含有声音视频类目，请补充对应类目音频和视频文件不好管理，容易出现风险，所以微信官方审核特别严格。一定要慎之又慎！</p>\r\n<p>6、图片被压缩体验不好这是饱汉不知饿汉饥，被压缩就是体验不好吗？那不压缩用户访问速度慢，体验岂不是更不好？再说服务器资源很贵的哟！</p>\r\n<p>7、不得展示和推荐第三方小程序。不能做小程序导航、小程序排行榜之类的产品或功能，真是太不合理了。其实有很多做小程序的客户都在问：我的小程序在哪展示才能获得更多流量？哪怕微信官方做一个小程序商店也好啊！</p>\r\n<p>8、不能含有诱导分享的内容这一条可谓教训惨痛！此前，仅 5 小时就产生了1700万PV（访问量）的「匿名聊聊」小程序，因为涉嫌诱导分享直接被封号；随后重新上线的「走心聊聊」不到一个星期，也被封号；被称为小程序版阅后即焚的「闪照」也因诱导分享被暂停服务。</p>\r\n<p>9、不能包含赌博、竞猜和抽奖等内容很好奇，无码科技发布的小程序「抽奖助手」是怎么通过审核的？</p>\r\n<p>10、慎用「附近的小程序」功能「附近的小程序」是小程序最主要的流量入口之一，特别是对于线下连锁门店而言，简直是曝光神器。不过，近期「附近的小程序」审核比较严格，一个经营资质只能添加一个地点，一个地点只能展现一个小程序，并且，一个小程序最多能开启10个附近展示的地址，每个地址都需要主体、资质证件号、地址等。如果用非常规手段实现了小程序的多地分身，也有可能会被微信永久性封禁「附近的小程序」功能。比如有些商家在「附近的小程序」中设置跨区多定位，如明明是南宁的门店，却定位到广州，而且还不是旗下分店，被用户举报后，将有可能会被微信官方永久性封禁「附近的小程序」功能。音符动态简约分割线.</p>\r\n<p>小程序如何快速过审？这里有一些开发者的经验：<br>1、尽量早提交，虽然目前小程序的审核期已经比公测时短了不少，但是审核依然严格，早提交早发现问题。<br>2、仔细阅读官方文档！！！这点非常重要！不看文档活该一直被拒。<br>3、审核中的代码只能有一份，再次提交会覆盖原版本，并重新计算审核周期。如果提交的代码审核五六天未出结果，此时又准备好了新版本代码，建议先等待旧版本审核完成再提交，避免长时间无成果可发布。<br>4、服务器配置每月只有3次修改机会，省着点用，小心没机会。而且没事别乱动下面的配置，一定要确定了再动，并且一次性写完整，不然你改个小标点都会浪费你的一次机会。<br>5、可以通过邮件跟微信团队沟通。虽然天鸽君已经总结的很全面了，但是只要点击“提交”后，你的代码就将开启一段前途未卜的旅行，祝各位审核顺利吧！</p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (5, 1, '小程序与小游戏获取用户信息接口调整，请开发者注意升级。', '汪苗', 'http://oss.wangmiaozero.cn/wechat/6.png', 'http://oss.wangmiaozero.cn/wechat/6.png', 'web前端', 1061, '2019-04-21 21:07:34', '#### 为优化用户体验，使用 wx.getUserInfo 接口直接弹出授权框的开发方式将逐步不再支持。从2018年4月30日开始，小程序与小游戏的体验版、开发版调用 wx.getUserInfo 接口，将无法弹出授权询问框，默认调用失败。正式版暂不受影响。开发者可使用以下方式获取或展示用户信息：\r\n\r\n![](http://bmob-cdn-25822.b0.upaiyun.com/2019/05/19/85fdcb5b4054a31180a451072657f653.gif)\r\n\r\n一、小程序:\r\n\r\n1、使用 button 组件，并将 open-type 指定为 getUserInfo 类型，获取用户基本信息。\r\n\r\n详情参考文档:\r\n\r\nhttps://developers.weixin.qq.com/miniprogram/dev/component/button.html\r\n\r\n\r\n\r\n2、使用 open-data 展示用户基本信息。\r\n\r\n详情参考文档:\r\n\r\nhttps://developers.weixin.qq.com/miniprogram/dev/component/open-data.html\r\n\r\n\r\n\r\n二、小游戏：\r\n\r\n1、使用用户信息按钮 UserInfoButton。\r\n\r\n详情参考文档:\r\n\r\nhttps://developers.weixin.qq.com/minigame/dev/document/open-api/user-info/wx.createUserInfoButton.html\r\n\r\n\r\n\r\n2、开放数据域下的展示用户信息。\r\n\r\n详细参考文档：\r\n\r\nhttps://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getUserInfo.html\r\n\r\n\r\n\r\n请各位开发者注意及时调整接口。\r\n只是第一次授权必须要经过button组件而已. 新手，研究了好多天，本来想根据\r\n\r\nwx.getSetting 来 wx.authorize （）,最后getUserInfo，最后发现wx.authorize 也 不弹窗！\r\n', '<h4 id=\"h4--wx-getuserinfo-2018-4-30-wx-getuserinfo-\"><a name=\"为优化用户体验，使用 wx.getUserInfo 接口直接弹出授权框的开发方式将逐步不再支持。从2018年4月30日开始，小程序与小游戏的体验版、开发版调用 wx.getUserInfo 接口，将无法弹出授权询问框，默认调用失败。正式版暂不受影响。开发者可使用以下方式获取或展示用户信息：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>为优化用户体验，使用 wx.getUserInfo 接口直接弹出授权框的开发方式将逐步不再支持。从2018年4月30日开始，小程序与小游戏的体验版、开发版调用 wx.getUserInfo 接口，将无法弹出授权询问框，默认调用失败。正式版暂不受影响。开发者可使用以下方式获取或展示用户信息：</h4><p><img src=\"http://bmob-cdn-25822.b0.upaiyun.com/2019/05/19/85fdcb5b4054a31180a451072657f653.gif\" alt=\"\"></p>\r\n<p>一、小程序:</p>\r\n<p>1、使用 button 组件，并将 open-type 指定为 getUserInfo 类型，获取用户基本信息。</p>\r\n<p>详情参考文档:</p>\r\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/button.html\">https://developers.weixin.qq.com/miniprogram/dev/component/button.html</a></p>\r\n<p>2、使用 open-data 展示用户基本信息。</p>\r\n<p>详情参考文档:</p>\r\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html\">https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html</a></p>\r\n<p>二、小游戏：</p>\r\n<p>1、使用用户信息按钮 UserInfoButton。</p>\r\n<p>详情参考文档:</p>\r\n<p><a href=\"https://developers.weixin.qq.com/minigame/dev/document/open-api/user-info/wx.createUserInfoButton.html\">https://developers.weixin.qq.com/minigame/dev/document/open-api/user-info/wx.createUserInfoButton.html</a></p>\r\n<p>2、开放数据域下的展示用户信息。</p>\r\n<p>详细参考文档：</p>\r\n<p><a href=\"https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getUserInfo.html\">https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getUserInfo.html</a></p>\r\n<p>请各位开发者注意及时调整接口。<br>只是第一次授权必须要经过button组件而已. 新手，研究了好多天，本来想根据</p>\r\n<p>wx.getSetting 来 wx.authorize （）,最后getUserInfo，最后发现wx.authorize 也 不弹窗！</p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (6, 2, 'promise封装', '汪苗', 'http://oss.wangmiaozero.cn/wechat/7.png', 'http://oss.wangmiaozero.cn/wechat/7.png', 'web前端', 1013, '2018-05-01 09:33:40', '// new 做了什么\r\n//1.创建一个新的空对象\r\n//2.将构造函数中的this指向这个新空对象\r\n//3.执行构造函数中的代码\r\n//4.返回这个对象\r\n//5.这个对象有一个__proto__指向构造函数原型\r\nvar promise= new Promise((resolve, reject) => {\r\n    var flag=1;\r\n    if(flag) return resolve()\r\n    reject()\r\n});\r\npromise.then((res)=>{\r\n    var a = \"成功回调\"\r\n    console.log(a)\r\n},(err)=>{\r\n    var b = \"失败回调\"\r\n    console.log(b)\r\n})\r\n// ---------------------------------\r\nfunction promiseTest(){\r\n   var promise= new Promise((resolve,reject)=>{\r\n        var flag=true;\r\n        if(flag) return resolve()\r\n        reject()\r\n    });\r\n    return promise\r\n};\r\npromiseTest().then((res)=>{\r\n    var a = \"成功回调\"\r\n    console.log(a)\r\n},(err)=>{\r\n    var b =\"失败回调\"\r\n    console.log(b)\r\n})\r\n//---------------------------\r\n// ## Promise \r\n// 1.Promise是一个构造函数 \r\n//  + 需要new Promise去创建一个Promise对象\r\n//  + 在new Promise(函数) 这个函数有2个参数一个是resolve(成功的回调)\r\n//  一个是reject(失败的回调)\r\n//  2.promise对象上有then()同时还有一个叫 catch方法\r\n//  + then接受2参数一个是成功的回调一个是失败的回调\r\n//  +在then接受中的分别传递成功和失败回调函数给resolve和reject\r\n//  3.为什么要使用Promise\r\n//  +解决嵌套地狱问题\r\n//  4.Promise会立即执行\r\n', '<p>// new 做了什么<br>//1.创建一个新的空对象<br>//2.将构造函数中的this指向这个新空对象<br>//3.执行构造函数中的代码<br>//4.返回这个对象<br>//5.这个对象有一个<strong>proto</strong>指向构造函数原型<br>var promise= new Promise((resolve, reject) =&gt; {<br>    var flag=1;<br>    if(flag) return resolve()<br>    reject()<br>});<br>promise.then((res)=&gt;{<br>    var a = “成功回调”<br>    console.log(a)<br>},(err)=&gt;{<br>    var b = “失败回调”<br>    console.log(b)<br>})<br>// ————————————————-<br>function promiseTest(){<br>   var promise= new Promise((resolve,reject)=&gt;{<br>        var flag=true;<br>        if(flag) return resolve()<br>        reject()<br>    });<br>    return promise<br>};<br>promiseTest().then((res)=&gt;{<br>    var a = “成功回调”<br>    console.log(a)<br>},(err)=&gt;{<br>    var b =”失败回调”<br>    console.log(b)<br>})<br>//—————————————-<br>// ## Promise<br>// 1.Promise是一个构造函数<br>//  + 需要new Promise去创建一个Promise对象<br>//  + 在new Promise(函数) 这个函数有2个参数一个是resolve(成功的回调)<br>//  一个是reject(失败的回调)<br>//  2.promise对象上有then()同时还有一个叫 catch方法<br>//  + then接受2参数一个是成功的回调一个是失败的回调<br>//  +在then接受中的分别传递成功和失败回调函数给resolve和reject<br>//  3.为什么要使用Promise<br>//  +解决嵌套地狱问题<br>//  4.Promise会立即执行</p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (7, 1, '小程序总结', '汪苗', 'http://oss.wangmiaozero.cn/wechat/39.png', 'http://oss.wangmiaozero.cn/wechat/39.png', 'web前端', 1051, '2018-05-02 19:23:28', '# OpenId  / UnioId / UserId\r\n## 微信有2种授权登录\r\n+ 1.静默登录\r\n+ 2.非静默登录\r\n### 静默登录:\r\n#### 用户登录页面毫无感知.\r\n### 非静默登录:\r\n#### 用户登录会先弹出需要授权信息的弹窗或者页面,确认授权后不仅可以拿到用户的openId(或者UnionID),还有昵称,头像等更多资料.\r\n\r\n### 1. openID:\r\n#### 每个用户针对每个公众号(或者小程序.或移动应用)会产生一个唯一的OpenID.\r\n### 2. UnionID:\r\n#### 如果需要在多公众号,移动应用之间做用户共通,则需要前往微信开发平台,将这些公众号和应用绑定到一个开放平台账号下,绑定后,一个用户虽然对多个公众号和应用有多个不同的OpenID,但他对所有这些同一开放平台账号下的公众号和应用,只有一个UnionID.\r\n### 3.userID\r\n#### userID是自己建的账户数据表的字段,用来作为用户唯一标识.一个用户只有一个userID\r\n# 举个列子:\r\n======\r\n你分别在农行,工行,建行,各办理1张银行卡,这三张银行卡号彼此毫无关联的,但绑定的都是你的身份证号.\r\n\r\n+ 身份证就是 unionID \r\n+ 银行卡号就是 OpenID\r\n\r\n# app pc, 服务号,小程序,建立userID 打通用户体系\r\n## 1.非微信体系通过绑定同一手机号;\r\n## 2.在微信体系内,将这些应用绑定在一个微信开方平台账号下,通过unionID来识别用户唯一性.\r\n![](https://i.imgur.com/N0ZAtPd.png)\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190323003922646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70)\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190520213651499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70)\r\n \r\n##### 当然有时候业务需求,需要手机号绑定.有时候会出现绑定冲突,当输入手机号已经被注册了,或者绑定了其他的微信,就会出现绑定失败的提示.\r\n##### + 1.这时可以进行把数据合并到当前账号(不推荐这种做法,因为数据比较重要)\r\n##### + 2.解除原账号绑定\r\n插件推荐:vue 2.0 微信网页授权插件 https://github.com/raychenfj/v-wechat-auth\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190520203944698.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70)\r\n1.小程序的生命周期——App.js\r\nApp() 必须在 app.js 中注册，且不能注册多个。所以App（）方法在一个小程序中有且仅有一个。\r\n\r\nApp() 函数用来注册一个小程序。接受一个 object 参数，其指定小程序的生命周期函数等。先上代码：\r\n\r\n```\r\nApp({\r\n  onLaunch: function () {\r\n      console.log(\'App onLaunch\');\r\n\r\n  },\r\n\r\n  onShow:function (){\r\n     console.log(\'App onShow\');\r\n\r\n  },\r\n\r\n  onHide:function(){\r\n      console.log(\'App onHide\');\r\n\r\n  },\r\n  onError:function(){\r\n     console.log(\'App onError\');\r\n\r\n  },\r\n\r\n  getPics: function() {\r\n      return this.globalData.picList;\r\n  },\r\n  globalData:{\r\n      picList: [] // 图片列表\r\n  },\r\n\r\n  globalName: \'tangdekun\'\r\n\r\n});\r\n```\r\n最外层的整个{ }就是一个object 参数。 \r\n通过表格的形式看App()中的object参数说明：\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190520171549412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70)\r\n将原有的app.js中替换为上面的代码，首次打开小程序，可以在Log信息中看到以下Log信息,会看到onShow（）方法会执行两次\r\n\r\nApp onLaunch\r\nApp onShow()\r\nApp onShow()\r\n注意： \r\n1.不要在定义于 App() 内的函数中调用 getApp() ，使用 this 就可以拿到 app 实例。 \r\n2.不要在 onLaunch 的时候调用 getCurrentPage()，此时 page 还没有生成。 \r\n3.通过 getApp() 获取实例之后，不要私自调用生命周期函数。\r\n\r\n2.页面的生命周期\r\n--\r\n```\r\nonLoad: 页面加载\r\n    一个页面只会调用一次。\r\n    接收页面参数   可以获取wx.navigateTo和wx.redirectTo及<navigator/>中的 query。\r\n\r\nonShow: 页面显示\r\n    每次打开页面都会调用一次。\r\n\r\nonReady: 页面初次渲染完成\r\n    一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。\r\n\r\n\r\nonHide: 页面隐藏\r\n    当navigateTo或底部tab切换时调用。\r\n\r\nonUnload: 页面卸载\r\n    当redirectTo或navigateBack的时候调用。\r\n\r\n```\r\n其中APP的生命周期和页面的生命周期是相互交叉的：举例： \r\n我们有页面Test和Test1，我们在test.js,test1.js和App.js的生命周期方法中都打印log，代码如下： \r\ntest1.js\r\n\r\n```\r\n\r\nPage({\r\n  data:{\r\n    names:\"tangdekun test1\"\r\n  },\r\n  onLoad:function(options){\r\n    // 生命周期函数--监听页面加载\r\n    console.log(\"test1 onLoad\");\r\n  },\r\n  onReady:function(){\r\n    // 生命周期函数--监听页面初次渲染完成\r\n    console.log(\"test1 onReady\");\r\n  },\r\n  onShow:function(){\r\n    // 生命周期函数--监听页面显示\r\n   console.log(\"test1 onShow\");\r\n  },\r\n  onHide:function(){\r\n    // 生命周期函数--监听页面隐藏\r\n     console.log(\"test1 onHide\");\r\n  },\r\n  onUnload:function(){\r\n    // 生命周期函数--监听页面卸载\r\n     console.log(\"test1 onUnload\");\r\n  },\r\n  onPullDownRefresh: function() {\r\n    // 页面相关事件处理函数--监听用户下拉动作\r\n     console.log(\"test1 onPullDownRefresh\");\r\n  },\r\n  onReachBottom: function() {\r\n    // 页面上拉触底事件的处理函数\r\n     console.log(\"test1 onReachBottom\");\r\n  }\r\n\r\n})\r\n```\r\n\r\n```\r\n\r\nPage({\r\n  data:{\r\n    name:\"test\"\r\n  },\r\n  onLoad:function(options){\r\n    // 生命周期函数--监听页面加载\r\n    console.log(\"test onLoad\");\r\n  },\r\n  onReady:function(){\r\n    // 生命周期函数--监听页面初次渲染完成\r\n    console.log(\"test onReady\");\r\n  },\r\n  onShow:function(){\r\n    // 生命周期函数--监听页面显示\r\n   console.log(\"test onShow\");\r\n  },\r\n  onHide:function(){\r\n    // 生命周期函数--监听页面隐藏\r\n     console.log(\"test onHide\");\r\n  },\r\n  onUnload:function(){\r\n    // 生命周期函数--监听页面卸载\r\n     console.log(\"test onUnload\");\r\n  },\r\n  onPullDownRefresh: function() {\r\n    // 页面相关事件处理函数--监听用户下拉动作\r\n     console.log(\"test onPullDownRefresh\");\r\n  },\r\n  onReachBottom: function() {\r\n    // 页面上拉触底事件的处理函数\r\n     console.log(\"test onReachBottom\");\r\n  },\r\n  onShareAppMessage: function() {\r\n    // 用户点击右上角分享\r\n    return {\r\n      title: \'分享页面\', // 分享标题\r\n      desc: \'这是一个分享的测试\', // 分享描述\r\n      path: \'pages/waimai/waimai\' // 分享路径\r\n    }\r\n  },\r\n  navigateToPageB: function() {\r\n    wx.navigateTo({\r\n      url: \'../../pages/pageB/pageB?id=3\',\r\n      success: function(res){\r\n\r\n      },\r\n      fail: function() {\r\n        // fail\r\n      },\r\n      complete: function() {\r\n        // complete\r\n      }\r\n    })\r\n  },\r\n  redirectToPageA : function(){\r\n    wx.redirectTo({\r\n      url: \'../../pages/pageA/pageA?id=4\',\r\n      success: function(res){\r\n        // success\r\n      },\r\n      fail: function() {\r\n        // fail\r\n      },\r\n      complete: function() {\r\n        // complete\r\n      }\r\n    })\r\n  },\r\n switchTabToTest1:function(){\r\n   wx.switchTab({\r\n     url: \'../../pages/test1/test1\',\r\n     success: function(res){\r\n       // success\r\n     },\r\n     fail: function() {\r\n       // fail\r\n     },\r\n     complete: function() {\r\n       // complete\r\n     }\r\n   })\r\n } \r\n\r\n})\r\n```\r\n微信\r\n\r\n	//定义全局变量 app.js\r\n	const app = getApp();\r\n	console.log(app.foo)\r\n	foo:\"bar\",\r\n	say(){\r\n		cosnole.log(\"hello\")\r\n	}\r\n\r\n----------------\r\n\r\n	//想要跳转 tab 需要配置 open-type=\"switchTab\"\r\n	<navigator class=\"\" target=\"\" url=\"\" hover-class=\"navigator-hover\" open-type=\"switchTab\">\r\n\r\n-------\r\n	data(){\r\n		mesage:1\r\n	}\r\n	<text>{{foo.addPosfix(mesage)}}</text>\r\n	//wxs 标签类似于 html中的script标签 可以定义一些行内脚本\r\n	<wxs module=\"foo\">\r\n	//这里必须遵守common js 规范\r\n		module.exports = {\r\n			addPosfix:function(input){ \r\n				return input + \'1\'\r\n			}\r\n		}\r\n	</wxs>\r\n\r\n------------------\r\n	//对于频繁需要切换显示的元素,不应该用wx:if\r\n		<view wx:if={{isLoading}}>\r\n		  <text>\r\n		    loading\r\n		  </text>\r\n		</view>\r\n		<viewe wx:elif=\"{{isLoading}}\">\r\n		  <text>\r\n		    loading\r\n		  </text>\r\n		</viewe>\r\n		<view wx:else={{isLoading}}>\r\n		  <text>\r\n		    loading\r\n		  </text>\r\n		</view>\r\n\r\n		//推荐用hidden\r\n		<view hidden={{!isLoading}}>\r\n		  <text>\r\n		    loading\r\n		  </text>\r\n		</view>\r\n		<view hidden={{isLoading}}>\r\n		  <text>\r\n		    loading\r\n		  </text>\r\n		</view>\r\n\r\n--------------\r\n	<block wx:if={{isLoading}}>\r\n		//只是一个包装元素,不会对页面结构造成任何影响\r\n	</block>\r\n	wx:for={{list}}\r\n	{{item.name}}\r\n	{{index}}//定义索引 直接写 跟vue有区别的\r\n	wx:for-item=\"s\"//指定item名字\r\n	wx:for-index=\"i\"//指定index名字\r\n	//key 写的属性的名字\r\n	wx:key=\"index\"\r\n\r\n	bindtap=\"addclick\" //事件 handle触摸\r\n	const list = this list;\r\n	//驱动视图更新 更新到页面上\r\n	this.setData({list:list})\r\n	//Page.prototype.setData()\r\n     //setData 函数用于将数据从逻辑层发送到视图层，同时改变对应的 this.data 的值。\r\n\r\n------------------------\r\n\r\n自定义属性\r\n\r\n		<view>\r\n		  <text>item 1</text>\r\n		  <button bindtap=\"removeHandle\" data-id=\"1\">remove</button>\r\n		</view>\r\n				Page({\r\n		  removeHandle (e) {\r\n		    console.log(e)\r\n		  }\r\n		})\r\n\r\n	小程序是单向数据流  可以通过e.detail.value  \r\n	`<text>{{foo}}</text>\r\n	\r\n	<input value=\"{{foo}}\" bindinput=\"inputChangeHandle\"/>`\r\n		Page({\r\n		  data: {\r\n		    foo: \'hello wechat app\'\r\n		  },\r\n		\r\n		  inputChangeHandle (e) {\r\n		    // e.target -> 当前文本框\r\n		    console.log(e.detail.value)\r\n		\r\n		    // 将界面上的数据再次同步回 数据源上\r\n		    // this.data.foo = e.detail.value\r\n		\r\n		    // setData \r\n		    // 1. 改变数据源\r\n		    // 2. 通知框架，数据源变了，需要重新渲染页面\r\n		    this.setData({ foo: e.detail.value })\r\n		  }\r\n		})\r\n\r\n---------------\r\n		\r\n		wxss 全屏750rpx\r\n	 	\r\n		 \"window\": {\r\n	    \"navigationBarBackgroundColor\": \"#037CFF\",\r\n	    \"navigationBarTextStyle\": \"white\",\r\n	    \"navigationBarTitleText\": \"锁\",\r\n	    \"backgroundColor\": \"#bcc0c9\",\r\n	    \"backgroundTextStyle\": \"light\",\r\n	    \"enablePullDownRefresh\": false //全局刷新\r\n	  },\r\n	 \"tabBar\": {\r\n	    \"color\": \"#999\",\r\n	    \"selectedColor\": \"#037CFF\",\r\n	    \"backgroundColor\": \"#fff\",\r\n	    \"borderStyle\": \"black\",\r\n	    \"list\": [\r\n	      {\r\n	        \"pagePath\": \"pages/apply/apply\",\r\n	        \"text\": \"申请\",\r\n	        \"iconPath\": \"pages/static/lcon/contact.png\",\r\n	        \"selectedIconPath\": \"pages/static/lcon/contact-active.png\"\r\n	      },\r\n	      {\r\n	        \"pagePath\": \"pages/list/list\",\r\n	        \"text\": \"门锁\",\r\n	        \"iconPath\": \"pages/static/lcon/home.png\",\r\n	        \"selectedIconPath\": \"pages/static/lcon/home-active.png\"\r\n	      }\r\n	    ]\r\n	  },\r\n\r\n\r\n小程序大小有限制  可以images优化为单标签 精简代码量等等!\r\n\r\n		小程序发送请求如下: \r\n			// wx.request({\r\n		    //     url:\'https://api.douban.com/v2/movie/coming_soon\',\r\n		    //     header:{\r\n		    //         \'Content-Type\':\'json\'\r\n		    //     },\r\n		    //     success:function(result){\r\n		    //         console.log(result)\r\n		    //     }\r\n		    // })\r\n\r\n		//小程序请求使用promise封装\r\n		module.exports=(url,data)=>{\r\n		  return new Promise ((resolve,reject) => {\r\n		    wx.request({\r\n		      url:`https://locally.uieee.com/${url}`,\r\n		      data:data,\r\n		      success:resolve,\r\n		      fail:reject\r\n		    })\r\n		  })\r\n		}\r\n		const fetch =require(\'../../utils/fetch\')\r\n		  fetch(\'slides\').then(res=>{\r\n           this.setData({slides:res.data})\r\n       })\r\n\r\n-----------------\r\n小程序跳转\r\n\r\n1. 利用小程序提供的 API 跳转：\r\n\r\n		// 关闭所有页面，打开到应用内的某个页面。\r\n		wx.reLaunch({\r\n		  url: \'page/home/home?user_id=111\'\r\n		})\r\n\r\n-------\r\n\r\n			// 保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。\r\n		// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈，但是 redirectTo \r\n		wx.navigateTo({\r\n		  url: \'page/home/home?user_id=111\'\r\n		})\r\n\r\n----\r\n\r\n		// 关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages() 获取当前的页面栈，决定需要返回几层。\r\n		\r\n		wx.navigateTo({\r\n		  url: \'page/home/home?user_id=111\'　　// 页面 A\r\n		})\r\n		wx.navigateTo({\r\n		  url: \'page/detail/detail?product_id=222\'　　// 页面 B\r\n		})\r\n		// 跳转到页面 A\r\n		wx.navigateBack({\r\n		  delta: 2\r\n		})\r\n\r\n-----------\r\n\r\n		// 关闭当前页面，跳转到应用内的某个页面。\r\n		wx.redirectTo({\r\n		  url: \'page/home/home?user_id=111\'\r\n		})\r\n\r\n-------\r\n		\r\n		// 跳转到tabBar页面（在app.json中注册过的tabBar页面），同时关闭其他非tabBar页面。\r\n		wx.switchTab({\r\n		  url: \'page/index/index\'\r\n		})\r\n\r\n---\r\n\r\n		// 关闭所有页面，打开到应用内的某个页面。\r\n		wx.reLanch({\r\n		  url: \'page/home/home?user_id=111\'\r\n		})\r\n\r\n2. wxml 页面组件跳转（可以通过设置open-type属性指明页面跳转方式）：\r\n\r\n		// navigator 组件默认的 open-type 为 navigate \r\n		<navigator url=\"/page/navigate/navigate?title=navigate\" hover-class=\"navigator-hover\">跳转到新页面</navigator>\r\n		// redirect 对应 API 中的 wx.redirect 方法\r\n		<navigator url=\"../../redirect/redirect/redirect?title=redirect\" open-type=\"redirect\" hover-class=\"other-navigator-hover\">在当前页打开</navigator>\r\n		// switchTab 对应 API 中的 wx.switchTab 方法\r\n		<navigator url=\"/page/index/index\" open-type=\"switchTab\" hover-class=\"other-navigator-hover\">切换 Tab</navigator>\r\n		// reLanch 对应 API 中的 wx.reLanch 方法\r\n		<navigator url=\"../../redirect/redirect/redirect?title=redirect\" open-type=\"redirect\" hover-class=\"other-navigator-hover\">关闭所有页面，打开到应用内的某个页面</navigator>\r\n		// navigateBack 对应 API 中的 wx.navigateBack 方法\r\n		<navigator url=\"/page/index/index\" open-type=\"navigateBack\" hover-class=\"other-navigator-hover\">关闭当前页面，返回上一级页面或多级页面</navigator>', '<h1 id=\"h1-openid-unioid-userid\"><a name=\"OpenId  / UnioId / UserId\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>OpenId  / UnioId / UserId</h1><h2 id=\"h2--2-\"><a name=\"微信有2种授权登录\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>微信有2种授权登录</h2><ul>\r\n<li>1.静默登录</li><li>2.非静默登录<h3 id=\"h3--\"><a name=\"静默登录:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>静默登录:</h3><h4 id=\"h4--\"><a name=\"用户登录页面毫无感知.\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>用户登录页面毫无感知.</h4><h3 id=\"h3--\"><a name=\"非静默登录:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>非静默登录:</h3><h4 id=\"h4--openid-unionid-\"><a name=\"用户登录会先弹出需要授权信息的弹窗或者页面,确认授权后不仅可以拿到用户的openId(或者UnionID),还有昵称,头像等更多资料.\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>用户登录会先弹出需要授权信息的弹窗或者页面,确认授权后不仅可以拿到用户的openId(或者UnionID),还有昵称,头像等更多资料.</h4></li></ul>\r\n<h3 id=\"h3-1-openid-\"><a name=\"1. openID:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1. openID:</h3><h4 id=\"h4--openid-\"><a name=\"每个用户针对每个公众号(或者小程序.或移动应用)会产生一个唯一的OpenID.\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>每个用户针对每个公众号(或者小程序.或移动应用)会产生一个唯一的OpenID.</h4><h3 id=\"h3-2-unionid-\"><a name=\"2. UnionID:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2. UnionID:</h3><h4 id=\"h4--openid-unionid-\"><a name=\"如果需要在多公众号,移动应用之间做用户共通,则需要前往微信开发平台,将这些公众号和应用绑定到一个开放平台账号下,绑定后,一个用户虽然对多个公众号和应用有多个不同的OpenID,但他对所有这些同一开放平台账号下的公众号和应用,只有一个UnionID.\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>如果需要在多公众号,移动应用之间做用户共通,则需要前往微信开发平台,将这些公众号和应用绑定到一个开放平台账号下,绑定后,一个用户虽然对多个公众号和应用有多个不同的OpenID,但他对所有这些同一开放平台账号下的公众号和应用,只有一个UnionID.</h4><h3 id=\"h3-3-userid\"><a name=\"3.userID\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.userID</h3><h4 id=\"h4-userid-userid\"><a name=\"userID是自己建的账户数据表的字段,用来作为用户唯一标识.一个用户只有一个userID\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>userID是自己建的账户数据表的字段,用来作为用户唯一标识.一个用户只有一个userID</h4><h1 id=\"h1--\"><a name=\"举个列子:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>举个列子:</h1><p>======<br>你分别在农行,工行,建行,各办理1张银行卡,这三张银行卡号彼此毫无关联的,但绑定的都是你的身份证号.</p>\r\n<ul>\r\n<li>身份证就是 unionID </li><li>银行卡号就是 OpenID</li></ul>\r\n<h1 id=\"h1-app-pc-userid-\"><a name=\"app pc, 服务号,小程序,建立userID 打通用户体系\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>app pc, 服务号,小程序,建立userID 打通用户体系</h1><h2 id=\"h2-1-\"><a name=\"1.非微信体系通过绑定同一手机号;\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.非微信体系通过绑定同一手机号;</h2><h2 id=\"h2-2-unionid-\"><a name=\"2.在微信体系内,将这些应用绑定在一个微信开方平台账号下,通过unionID来识别用户唯一性.\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.在微信体系内,将这些应用绑定在一个微信开方平台账号下,通过unionID来识别用户唯一性.</h2><p><img src=\"https://i.imgur.com/N0ZAtPd.png\" alt=\"\"><br><img src=\"https://img-blog.csdnimg.cn/20190323003922646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20190520213651499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n<h5 id=\"h5--\"><a name=\"当然有时候业务需求,需要手机号绑定.有时候会出现绑定冲突,当输入手机号已经被注册了,或者绑定了其他的微信,就会出现绑定失败的提示.\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>当然有时候业务需求,需要手机号绑定.有时候会出现绑定冲突,当输入手机号已经被注册了,或者绑定了其他的微信,就会出现绑定失败的提示.</h5><h5 id=\"h5--1-\"><a name=\"+ 1.这时可以进行把数据合并到当前账号(不推荐这种做法,因为数据比较重要)\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>+ 1.这时可以进行把数据合并到当前账号(不推荐这种做法,因为数据比较重要)</h5><h5 id=\"h5--2-\"><a name=\"+ 2.解除原账号绑定\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>+ 2.解除原账号绑定</h5><p>插件推荐:vue 2.0 微信网页授权插件 <a href=\"https://github.com/raychenfj/v-wechat-auth\">https://github.com/raychenfj/v-wechat-auth</a><br><img src=\"https://img-blog.csdnimg.cn/20190520203944698.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>1.小程序的生命周期——App.js<br>App() 必须在 app.js 中注册，且不能注册多个。所以App（）方法在一个小程序中有且仅有一个。</p>\r\n<p>App() 函数用来注册一个小程序。接受一个 object 参数，其指定小程序的生命周期函数等。先上代码：</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"typ\">App</span><span class=\"pun\">({</span></code></li><li class=\"L1\"><code><span class=\"pln\">  onLaunch</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\'App onLaunch\'</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">  onShow</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(){</span></code></li><li class=\"L7\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\'App onShow\'</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">  onHide</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L2\"><code><span class=\"pln\">      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\'App onHide\'</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  onError</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\'App onError\'</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">  getPics</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">globalData</span><span class=\"pun\">.</span><span class=\"pln\">picList</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code><span class=\"pln\">  globalData</span><span class=\"pun\">:{</span></code></li><li class=\"L4\"><code><span class=\"pln\">      picList</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[]</span><span class=\"pln\"> </span><span class=\"com\">// 图片列表</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">  globalName</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'tangdekun\'</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pun\">});</span></code></li></ol></pre><p>最外层的整个{ }就是一个object 参数。<br>通过表格的形式看App()中的object参数说明：<br><img src=\"https://img-blog.csdnimg.cn/20190520171549412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>将原有的app.js中替换为上面的代码，首次打开小程序，可以在Log信息中看到以下Log信息,会看到onShow（）方法会执行两次</p>\r\n<p>App onLaunch<br>App onShow()<br>App onShow()<br>注意：<br>1.不要在定义于 App() 内的函数中调用 getApp() ，使用 this 就可以拿到 app 实例。<br>2.不要在 onLaunch 的时候调用 getCurrentPage()，此时 page 还没有生成。<br>3.通过 getApp() 获取实例之后，不要私自调用生命周期函数。</p>\r\n<h2 id=\"h2-2-\"><a name=\"2.页面的生命周期\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.页面的生命周期</h2><pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">onLoad</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">页面加载</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">一个页面只会调用一次。</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">接收页面参数</span><span class=\"pln\">   </span><span class=\"pun\">可以获取</span><span class=\"pln\">wx</span><span class=\"pun\">.</span><span class=\"pln\">navigateTo</span><span class=\"pun\">和</span><span class=\"pln\">wx</span><span class=\"pun\">.</span><span class=\"pln\">redirectTo</span><span class=\"pun\">及&lt;</span><span class=\"pln\">navigator</span><span class=\"pun\">/&gt;中的</span><span class=\"pln\"> query</span><span class=\"pun\">。</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">onShow</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">页面显示</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">每次打开页面都会调用一次。</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">onReady</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">页面初次渲染完成</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">onHide</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">页面隐藏</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">当</span><span class=\"pln\">navigateTo</span><span class=\"pun\">或底部</span><span class=\"pln\">tab</span><span class=\"pun\">切换时调用。</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">onUnload</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">页面卸载</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">当</span><span class=\"pln\">redirectTo</span><span class=\"pun\">或</span><span class=\"pln\">navigateBack</span><span class=\"pun\">的时候调用。</span></code></li></ol></pre><p>其中APP的生命周期和页面的生命周期是相互交叉的：举例：<br>我们有页面Test和Test1，我们在test.js,test1.js和App.js的生命周期方法中都打印log，代码如下：<br>test1.js</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"typ\">Page</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code><span class=\"pln\">  data</span><span class=\"pun\">:{</span></code></li><li class=\"L3\"><code><span class=\"pln\">    names</span><span class=\"pun\">:</span><span class=\"str\">\"tangdekun test1\"</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  onLoad</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面加载</span></code></li><li class=\"L7\"><code><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onLoad\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\">  onReady</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面初次渲染完成</span></code></li><li class=\"L1\"><code><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onReady\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code><span class=\"pln\">  onShow</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面显示</span></code></li><li class=\"L5\"><code><span class=\"pln\">   console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onShow\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code><span class=\"pln\">  onHide</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面隐藏</span></code></li><li class=\"L9\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onHide\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">  onUnload</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面卸载</span></code></li><li class=\"L3\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onUnload\"</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  onPullDownRefresh</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 页面相关事件处理函数--监听用户下拉动作</span></code></li><li class=\"L7\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onPullDownRefresh\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\">  onReachBottom</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 页面上拉触底事件的处理函数</span></code></li><li class=\"L1\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test1 onReachBottom\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pun\">})</span></code></li></ol></pre><pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"typ\">Page</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code><span class=\"pln\">  data</span><span class=\"pun\">:{</span></code></li><li class=\"L3\"><code><span class=\"pln\">    name</span><span class=\"pun\">:</span><span class=\"str\">\"test\"</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  onLoad</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面加载</span></code></li><li class=\"L7\"><code><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onLoad\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\">  onReady</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面初次渲染完成</span></code></li><li class=\"L1\"><code><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onReady\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code><span class=\"pln\">  onShow</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面显示</span></code></li><li class=\"L5\"><code><span class=\"pln\">   console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onShow\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code><span class=\"pln\">  onHide</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面隐藏</span></code></li><li class=\"L9\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onHide\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">  onUnload</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 生命周期函数--监听页面卸载</span></code></li><li class=\"L3\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onUnload\"</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  onPullDownRefresh</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 页面相关事件处理函数--监听用户下拉动作</span></code></li><li class=\"L7\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onPullDownRefresh\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\">  onReachBottom</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 页面上拉触底事件的处理函数</span></code></li><li class=\"L1\"><code><span class=\"pln\">     console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"test onReachBottom\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code><span class=\"pln\">  onShareAppMessage</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 用户点击右上角分享</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">      title</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'分享页面\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// 分享标题</span></code></li><li class=\"L7\"><code><span class=\"pln\">      desc</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'这是一个分享的测试\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// 分享描述</span></code></li><li class=\"L8\"><code><span class=\"pln\">      path</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'pages/waimai/waimai\'</span><span class=\"pln\"> </span><span class=\"com\">// 分享路径</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">  navigateToPageB</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">navigateTo</span><span class=\"pun\">({</span></code></li><li class=\"L3\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'../../pages/pageB/pageB?id=3\'</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">      success</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code><span class=\"pln\">      fail</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"com\">// fail</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code><span class=\"pln\">      complete</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">// complete</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  redirectToPageA </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">redirectTo</span><span class=\"pun\">({</span></code></li><li class=\"L7\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'../../pages/pageA/pageA?id=4\'</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">      success</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"com\">// success</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">      fail</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\">// fail</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L4\"><code><span class=\"pln\">      complete</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\">// complete</span></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\"> switchTabToTest1</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">   wx</span><span class=\"pun\">.</span><span class=\"pln\">switchTab</span><span class=\"pun\">({</span></code></li><li class=\"L1\"><code><span class=\"pln\">     url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'../../pages/test1/test1\'</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">     success</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code><span class=\"pln\">       </span><span class=\"com\">// success</span></code></li><li class=\"L4\"><code><span class=\"pln\">     </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">     fail</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">       </span><span class=\"com\">// fail</span></code></li><li class=\"L7\"><code><span class=\"pln\">     </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code><span class=\"pln\">     complete</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">       </span><span class=\"com\">// complete</span></code></li><li class=\"L0\"><code><span class=\"pln\">     </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">   </span><span class=\"pun\">})</span></code></li><li class=\"L2\"><code><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pun\">})</span></code></li></ol></pre><p>微信</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">//定义全局变量 app.js</span></code></li><li class=\"L1\"><code><span class=\"kwd\">const</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> getApp</span><span class=\"pun\">();</span></code></li><li class=\"L2\"><code><span class=\"pln\">console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">foo</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">foo</span><span class=\"pun\">:</span><span class=\"str\">\"bar\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">say</span><span class=\"pun\">(){</span></code></li><li class=\"L5\"><code><span class=\"pln\">    cosnole</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"hello\"</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code><span class=\"pun\">}</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">//想要跳转 tab 需要配置 open-type=\"switchTab\"</span></code></li><li class=\"L1\"><code><span class=\"pun\">&lt;</span><span class=\"pln\">navigator </span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pln\"> target</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pln\"> url</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pln\"> hover</span><span class=\"pun\">-</span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"navigator-hover\"</span><span class=\"pln\"> open</span><span class=\"pun\">-</span><span class=\"pln\">type</span><span class=\"pun\">=</span><span class=\"str\">\"switchTab\"</span><span class=\"pun\">&gt;</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">data</span><span class=\"pun\">(){</span></code></li><li class=\"L1\"><code><span class=\"pln\">    mesage</span><span class=\"pun\">:</span><span class=\"lit\">1</span></code></li><li class=\"L2\"><code><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"str\">&lt;text&gt;</span><span class=\"pun\">{{</span><span class=\"pln\">foo</span><span class=\"pun\">.</span><span class=\"pln\">addPosfix</span><span class=\"pun\">(</span><span class=\"pln\">mesage</span><span class=\"pun\">)}}&lt;/</span><span class=\"pln\">text</span><span class=\"pun\">&gt;</span></code></li><li class=\"L4\"><code><span class=\"com\">//wxs 标签类似于 html中的script标签 可以定义一些行内脚本</span></code></li><li class=\"L5\"><code><span class=\"pun\">&lt;</span><span class=\"pln\">wxs </span><span class=\"kwd\">module</span><span class=\"pun\">=</span><span class=\"str\">\"foo\"</span><span class=\"pun\">&gt;</span></code></li><li class=\"L6\"><code><span class=\"com\">//这里必须遵守common js 规范</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"kwd\">module</span><span class=\"pun\">.</span><span class=\"pln\">exports </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">        addPosfix</span><span class=\"pun\">:</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">input</span><span class=\"pun\">){</span><span class=\"pln\"> </span></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> input </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'1\'</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pun\">&lt;/</span><span class=\"pln\">wxs</span><span class=\"pun\">&gt;</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">//对于频繁需要切换显示的元素,不应该用wx:if</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">view wx</span><span class=\"pun\">:</span><span class=\"kwd\">if</span><span class=\"pun\">={{</span><span class=\"pln\">isLoading</span><span class=\"pun\">}}&gt;</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"str\">&lt;text&gt;</span></code></li><li class=\"L3\"><code><span class=\"pln\">        loading</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"pun\">&lt;/</span><span class=\"pln\">text</span><span class=\"pun\">&gt;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;/</span><span class=\"pln\">view</span><span class=\"pun\">&gt;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">viewe wx</span><span class=\"pun\">:</span><span class=\"kwd\">elif</span><span class=\"pun\">=</span><span class=\"str\">\"{{isLoading}}\"</span><span class=\"pun\">&gt;</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"str\">&lt;text&gt;</span></code></li><li class=\"L8\"><code><span class=\"pln\">        loading</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"pun\">&lt;/</span><span class=\"pln\">text</span><span class=\"pun\">&gt;</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;/</span><span class=\"pln\">viewe</span><span class=\"pun\">&gt;</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">view wx</span><span class=\"pun\">:</span><span class=\"kwd\">else</span><span class=\"pun\">={{</span><span class=\"pln\">isLoading</span><span class=\"pun\">}}&gt;</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"str\">&lt;text&gt;</span></code></li><li class=\"L3\"><code><span class=\"pln\">        loading</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"pun\">&lt;/</span><span class=\"pln\">text</span><span class=\"pun\">&gt;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;/</span><span class=\"pln\">view</span><span class=\"pun\">&gt;</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//推荐用hidden</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">view hidden</span><span class=\"pun\">={{!</span><span class=\"pln\">isLoading</span><span class=\"pun\">}}&gt;</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">&lt;text&gt;</span></code></li><li class=\"L0\"><code><span class=\"pln\">        loading</span></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"pun\">&lt;/</span><span class=\"pln\">text</span><span class=\"pun\">&gt;</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;/</span><span class=\"pln\">view</span><span class=\"pun\">&gt;</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">view hidden</span><span class=\"pun\">={{</span><span class=\"pln\">isLoading</span><span class=\"pun\">}}&gt;</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"str\">&lt;text&gt;</span></code></li><li class=\"L5\"><code><span class=\"pln\">        loading</span></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"pun\">&lt;/</span><span class=\"pln\">text</span><span class=\"pun\">&gt;</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">&lt;/</span><span class=\"pln\">view</span><span class=\"pun\">&gt;</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"tag\">&lt;block</span><span class=\"pln\"> </span><span class=\"atn\">wx:if</span><span class=\"pun\">=</span><span class=\"atv\">{{isLoading}}</span><span class=\"tag\">&gt;</span></code></li><li class=\"L1\"><code><span class=\"pln\">    //只是一个包装元素,不会对页面结构造成任何影响</span></code></li><li class=\"L2\"><code><span class=\"tag\">&lt;/block&gt;</span></code></li><li class=\"L3\"><code><span class=\"pln\">wx:for={{list}}</span></code></li><li class=\"L4\"><code><span class=\"pln\">{{item.name}}</span></code></li><li class=\"L5\"><code><span class=\"pln\">{{index}}//定义索引 直接写 跟vue有区别的</span></code></li><li class=\"L6\"><code><span class=\"pln\">wx:for-item=\"s\"//指定item名字</span></code></li><li class=\"L7\"><code><span class=\"pln\">wx:for-index=\"i\"//指定index名字</span></code></li><li class=\"L8\"><code><span class=\"pln\">//key 写的属性的名字</span></code></li><li class=\"L9\"><code><span class=\"pln\">wx:key=\"index\"</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">bindtap=\"addclick\" //事件 handle触摸</span></code></li><li class=\"L2\"><code><span class=\"pln\">const list = this list;</span></code></li><li class=\"L3\"><code><span class=\"pln\">//驱动视图更新 更新到页面上</span></code></li><li class=\"L4\"><code><span class=\"pln\">this.setData({list:list})</span></code></li><li class=\"L5\"><code><span class=\"pln\">//Page.prototype.setData()</span></code></li><li class=\"L6\"><code><span class=\"pln\"> //setData 函数用于将数据从逻辑层发送到视图层，同时改变对应的 this.data 的值。</span></code></li></ol></pre><hr>\r\n<p>自定义属性</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"tag\">&lt;view&gt;</span></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"tag\">&lt;text&gt;</span><span class=\"pln\">item 1</span><span class=\"tag\">&lt;/text&gt;</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">bindtap</span><span class=\"pun\">=</span><span class=\"atv\">\"removeHandle\"</span><span class=\"pln\"> </span><span class=\"atn\">data-id</span><span class=\"pun\">=</span><span class=\"atv\">\"1\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">remove</span><span class=\"tag\">&lt;/button&gt;</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"tag\">&lt;/view&gt;</span></code></li><li class=\"L4\"><code><span class=\"pln\">            Page({</span></code></li><li class=\"L5\"><code><span class=\"pln\">      removeHandle (e) {</span></code></li><li class=\"L6\"><code><span class=\"pln\">        console.log(e)</span></code></li><li class=\"L7\"><code><span class=\"pln\">      }</span></code></li><li class=\"L8\"><code><span class=\"pln\">    })</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">小程序是单向数据流  可以通过e.detail.value  </span></code></li><li class=\"L1\"><code><span class=\"pln\">`</span><span class=\"tag\">&lt;text&gt;</span><span class=\"pln\">{{foo}}</span><span class=\"tag\">&lt;/text&gt;</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"tag\">&lt;input</span><span class=\"pln\"> </span><span class=\"atn\">value</span><span class=\"pun\">=</span><span class=\"atv\">\"{{foo}}\"</span><span class=\"pln\"> </span><span class=\"atn\">bindinput</span><span class=\"pun\">=</span><span class=\"atv\">\"inputChangeHandle\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\">`</span></code></li><li class=\"L4\"><code><span class=\"pln\">    Page({</span></code></li><li class=\"L5\"><code><span class=\"pln\">      data: {</span></code></li><li class=\"L6\"><code><span class=\"pln\">        foo: \'hello wechat app\'</span></code></li><li class=\"L7\"><code><span class=\"pln\">      },</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">      inputChangeHandle (e) {</span></code></li><li class=\"L0\"><code><span class=\"pln\">        // e.target -&gt; 当前文本框</span></code></li><li class=\"L1\"><code><span class=\"pln\">        console.log(e.detail.value)</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        // 将界面上的数据再次同步回 数据源上</span></code></li><li class=\"L4\"><code><span class=\"pln\">        // this.data.foo = e.detail.value</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        // setData </span></code></li><li class=\"L7\"><code><span class=\"pln\">        // 1. 改变数据源</span></code></li><li class=\"L8\"><code><span class=\"pln\">        // 2. 通知框架，数据源变了，需要重新渲染页面</span></code></li><li class=\"L9\"><code><span class=\"pln\">        this.setData({ foo: e.detail.value })</span></code></li><li class=\"L0\"><code><span class=\"pln\">      }</span></code></li><li class=\"L1\"><code><span class=\"pln\">    })</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    wxss </span><span class=\"pun\">全屏</span><span class=\"lit\">750rpx</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">     </span><span class=\"str\">\"window\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"navigationBarBackgroundColor\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"#037CFF\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"navigationBarTextStyle\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"white\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"navigationBarTitleText\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"锁\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"backgroundColor\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"#bcc0c9\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"backgroundTextStyle\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"light\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"enablePullDownRefresh\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pln\"> </span><span class=\"com\">//全局刷新</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code><span class=\"pln\"> </span><span class=\"str\">\"tabBar\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"color\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"#999\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"selectedColor\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"#037CFF\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"backgroundColor\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"#fff\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"borderStyle\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"black\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"list\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"str\">\"pagePath\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"pages/apply/apply\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"str\">\"text\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"申请\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"str\">\"iconPath\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"pages/static/lcon/contact.png\"</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"str\">\"selectedIconPath\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"pages/static/lcon/contact-active.png\"</span></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"str\">\"pagePath\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"pages/list/list\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"str\">\"text\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"门锁\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"str\">\"iconPath\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"pages/static/lcon/home.png\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"str\">\"selectedIconPath\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"pages/static/lcon/home-active.png\"</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">]</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li></ol></pre><p>小程序大小有限制  可以images优化为单标签 精简代码量等等!</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">小程序发送请求如下:</span><span class=\"pln\"> </span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">// wx.request({</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\">//     url:\'https://api.douban.com/v2/movie/coming_soon\',</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"com\">//     header:{</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"com\">//         \'Content-Type\':\'json\'</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\">//     },</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"com\">//     success:function(result){</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"com\">//         console.log(result)</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"com\">//     }</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"com\">// })</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">//小程序请求使用promise封装</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">module</span><span class=\"pun\">.</span><span class=\"pln\">exports</span><span class=\"pun\">=(</span><span class=\"pln\">url</span><span class=\"pun\">,</span><span class=\"pln\">data</span><span class=\"pun\">)=&gt;{</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"pln\">resolve</span><span class=\"pun\">,</span><span class=\"pln\">reject</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">        wx</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">({</span></code></li><li class=\"L5\"><code><span class=\"pln\">          url</span><span class=\"pun\">:</span><span class=\"str\">`https://locally.uieee.com/${url}`</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">          data</span><span class=\"pun\">:</span><span class=\"pln\">data</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">          success</span><span class=\"pun\">:</span><span class=\"pln\">resolve</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">          fail</span><span class=\"pun\">:</span><span class=\"pln\">reject</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">})</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"pun\">})</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">const</span><span class=\"pln\"> fetch </span><span class=\"pun\">=</span><span class=\"kwd\">require</span><span class=\"pun\">(</span><span class=\"str\">\'../../utils/fetch\'</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">      fetch</span><span class=\"pun\">(</span><span class=\"str\">\'slides\'</span><span class=\"pun\">).</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">=&gt;{</span></code></li><li class=\"L4\"><code><span class=\"pln\">       </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setData</span><span class=\"pun\">({</span><span class=\"pln\">slides</span><span class=\"pun\">:</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">})</span></code></li><li class=\"L5\"><code><span class=\"pln\">   </span><span class=\"pun\">})</span></code></li></ol></pre><hr>\r\n<p>小程序跳转</p>\r\n<ol>\r\n<li><p>利用小程序提供的 API 跳转：</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\"> </span><span class=\"com\">// 关闭所有页面，打开到应用内的某个页面。</span></code></li><li class=\"L1\"><code><span class=\"pln\"> wx</span><span class=\"pun\">.</span><span class=\"pln\">reLaunch</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code><span class=\"pln\">   url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/home/home?user_id=111\'</span></code></li><li class=\"L3\"><code><span class=\"pln\"> </span><span class=\"pun\">})</span></code></li></ol></pre></li></ol>\r\n<hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// 保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈，但是 redirectTo </span></code></li><li class=\"L2\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">navigateTo</span><span class=\"pun\">({</span></code></li><li class=\"L3\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/home/home?user_id=111\'</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages() 获取当前的页面栈，决定需要返回几层。</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">navigateTo</span><span class=\"pun\">({</span></code></li><li class=\"L3\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/home/home?user_id=111\'</span><span class=\"pun\">　　</span><span class=\"com\">// 页面 A</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L5\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">navigateTo</span><span class=\"pun\">({</span></code></li><li class=\"L6\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/detail/detail?product_id=222\'</span><span class=\"pun\">　　</span><span class=\"com\">// 页面 B</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 跳转到页面 A</span></code></li><li class=\"L9\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">navigateBack</span><span class=\"pun\">({</span></code></li><li class=\"L0\"><code><span class=\"pln\">      delta</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 关闭当前页面，跳转到应用内的某个页面。</span></code></li><li class=\"L1\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">redirectTo</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/home/home?user_id=111\'</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 跳转到tabBar页面（在app.json中注册过的tabBar页面），同时关闭其他非tabBar页面。</span></code></li><li class=\"L1\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">switchTab</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/index/index\'</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li></ol></pre><hr>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 关闭所有页面，打开到应用内的某个页面。</span></code></li><li class=\"L1\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">reLanch</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'page/home/home?user_id=111\'</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li></ol></pre><ol>\r\n<li><p>wxml 页面组件跳转（可以通过设置open-type属性指明页面跳转方式）：</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\"> </span><span class=\"com\">// navigator 组件默认的 open-type 为 navigate </span></code></li><li class=\"L1\"><code><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">navigator url</span><span class=\"pun\">=</span><span class=\"str\">\"/page/navigate/navigate?title=navigate\"</span><span class=\"pln\"> hover</span><span class=\"pun\">-</span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"navigator-hover\"</span><span class=\"pun\">&gt;跳转到新页面&lt;/</span><span class=\"pln\">navigator</span><span class=\"pun\">&gt;</span></code></li><li class=\"L2\"><code><span class=\"pln\"> </span><span class=\"com\">// redirect 对应 API 中的 wx.redirect 方法</span></code></li><li class=\"L3\"><code><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">navigator url</span><span class=\"pun\">=</span><span class=\"str\">\"../../redirect/redirect/redirect?title=redirect\"</span><span class=\"pln\"> open</span><span class=\"pun\">-</span><span class=\"pln\">type</span><span class=\"pun\">=</span><span class=\"str\">\"redirect\"</span><span class=\"pln\"> hover</span><span class=\"pun\">-</span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"other-navigator-hover\"</span><span class=\"pun\">&gt;在当前页打开&lt;/</span><span class=\"pln\">navigator</span><span class=\"pun\">&gt;</span></code></li><li class=\"L4\"><code><span class=\"pln\"> </span><span class=\"com\">// switchTab 对应 API 中的 wx.switchTab 方法</span></code></li><li class=\"L5\"><code><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">navigator url</span><span class=\"pun\">=</span><span class=\"str\">\"/page/index/index\"</span><span class=\"pln\"> open</span><span class=\"pun\">-</span><span class=\"pln\">type</span><span class=\"pun\">=</span><span class=\"str\">\"switchTab\"</span><span class=\"pln\"> hover</span><span class=\"pun\">-</span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"other-navigator-hover\"</span><span class=\"pun\">&gt;切换</span><span class=\"pln\"> </span><span class=\"typ\">Tab</span><span class=\"pun\">&lt;/</span><span class=\"pln\">navigator</span><span class=\"pun\">&gt;</span></code></li><li class=\"L6\"><code><span class=\"pln\"> </span><span class=\"com\">// reLanch 对应 API 中的 wx.reLanch 方法</span></code></li><li class=\"L7\"><code><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">navigator url</span><span class=\"pun\">=</span><span class=\"str\">\"../../redirect/redirect/redirect?title=redirect\"</span><span class=\"pln\"> open</span><span class=\"pun\">-</span><span class=\"pln\">type</span><span class=\"pun\">=</span><span class=\"str\">\"redirect\"</span><span class=\"pln\"> hover</span><span class=\"pun\">-</span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"other-navigator-hover\"</span><span class=\"pun\">&gt;关闭所有页面，打开到应用内的某个页面&lt;/</span><span class=\"pln\">navigator</span><span class=\"pun\">&gt;</span></code></li><li class=\"L8\"><code><span class=\"pln\"> </span><span class=\"com\">// navigateBack 对应 API 中的 wx.navigateBack 方法</span></code></li><li class=\"L9\"><code><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">navigator url</span><span class=\"pun\">=</span><span class=\"str\">\"/page/index/index\"</span><span class=\"pln\"> open</span><span class=\"pun\">-</span><span class=\"pln\">type</span><span class=\"pun\">=</span><span class=\"str\">\"navigateBack\"</span><span class=\"pln\"> hover</span><span class=\"pun\">-</span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"other-navigator-hover\"</span><span class=\"pun\">&gt;关闭当前页面，返回上一级页面或多级页面&lt;/</span><span class=\"pln\">navigator</span><span class=\"pun\">&gt;</span></code></li></ol></pre></li></ol>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (8, 2, 'HTML DOM addEventListener() 方法', '汪苗', 'http://oss.wangmiaozero.cn/wechat/40.jpg', 'http://oss.wangmiaozero.cn/wechat/40.jpg', 'web前端', 1019, '2018-05-03 19:19:43', '//为 <button> 元素添加点击事件。 当用户点击按钮时，在 id=\"demo\" 的 <p> 元素上输出 \"Hello World\" :\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", function(){\r\n    document.getElementById(\"demo\").innerHTML = \"Hello World\";\r\n});\r\n　　该实例演示了在用户点击 <button> 元素时如何执行函数:\r\n\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", myFunction);\r\n\r\nfunction myFunction() {\r\n    document.getElementById(\"demo\").innerHTML = \"Hello World\";\r\n}\r\n　　\r\n\r\n您可以在文档中添加许多事件，添加的事件不会覆盖已存在的事件。\r\n\r\n该实例演示了如何在<button>元素中添加两个点击事件：\r\n\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", myFunction);\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", someOtherFunction);\r\n　　\r\n\r\n您可以在同一个元素中添加不同类型的事件。\r\n\r\n该实例演示了如何在同一个 <button> 元素中添加多个事件：\r\n\r\ndocument.getElementById(\"myBtn\").addEventListener(\"mouseover\", myFunction);\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", someOtherFunction);\r\ndocument.getElementById(\"myBtn\").addEventListener(\"mouseout\", someOtherFunction);\r\n　　当传递参数值时，使用\"匿名函数\"调用带参数的函数：\r\n\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", function() {\r\n    myFunction(p1, p2);\r\n});\r\n　　修改 <button> 元素的背景：\r\n\r\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", function(){\r\n    this.style.backgroundColor = \"red\";\r\n});\r\n　　使用可选参数 useCapture 来演示冒泡和捕获阶段的不同:\r\n\r\ndocument.getElementById(\"myDiv\").addEventListener(\"click\", myFunction, true);\r\n　　使用 removeEventListener() 方法移除由 addEventListener() 方法添加的事件句柄:\r\n\r\n// 添加 <div> 事件句柄 \r\ndocument.getElementById(\"myDIV\").addEventListener(\"mousemove\", myFunction);\r\n\r\n// 移除 <div> 事件句柄 \r\ndocument.getElementById(\"myDIV\").removeEventListener(\"mousemove\", myFunction);\r\n　　\r\n\r\n如果浏览器不支持 addEventListener() 方法, 你可以使用 attachEvent() 方法替代。\r\n\r\n以下实例演示了跨浏览器的解决方法：\r\n\r\nvar x = document.getElementById(\"myBtn\");\r\nif (x.addEventListener) {                    //所有主流浏览器，除了 IE 8 及更早 IE版本\r\n    x.addEventListener(\"click\", myFunction);\r\n} else if (x.attachEvent) {                  // IE 8 及更早 IE 版本\r\n    x.attachEvent(\"onclick\", myFunction);\r\n}\r\n　　\r\n\r\n ', '<p>//为 &lt;button&gt; 元素添加点击事件。 当用户点击按钮时，在 id=”demo” 的 &lt;p&gt; 元素上输出 “Hello World” :<br>document.getElementById(“myBtn”).addEventListener(“click”, function(){<br>    document.getElementById(“demo”).innerHTML = “Hello World”;<br>});<br>　　该实例演示了在用户点击 &lt;button&gt; 元素时如何执行函数:</p>\r\n<p>document.getElementById(“myBtn”).addEventListener(“click”, myFunction);</p>\r\n<p>function myFunction() {<br>    document.getElementById(“demo”).innerHTML = “Hello World”;<br>}\r\n　　</p>\r\n<p>您可以在文档中添加许多事件，添加的事件不会覆盖已存在的事件。</p>\r\n<p>该实例演示了如何在&lt;button&gt;元素中添加两个点击事件：</p>\r\n<p>document.getElementById(“myBtn”).addEventListener(“click”, myFunction);<br>document.getElementById(“myBtn”).addEventListener(“click”, someOtherFunction);\r\n　　</p>\r\n<p>您可以在同一个元素中添加不同类型的事件。</p>\r\n<p>该实例演示了如何在同一个 &lt;button&gt; 元素中添加多个事件：</p>\r\n<p>document.getElementById(“myBtn”).addEventListener(“mouseover”, myFunction);<br>document.getElementById(“myBtn”).addEventListener(“click”, someOtherFunction);<br>document.getElementById(“myBtn”).addEventListener(“mouseout”, someOtherFunction);<br>　　当传递参数值时，使用”匿名函数”调用带参数的函数：</p>\r\n<p>document.getElementById(“myBtn”).addEventListener(“click”, function() {<br>    myFunction(p1, p2);<br>});<br>　　修改 &lt;button&gt; 元素的背景：</p>\r\n<p>document.getElementById(“myBtn”).addEventListener(“click”, function(){<br>    this.style.backgroundColor = “red”;<br>});<br>　　使用可选参数 useCapture 来演示冒泡和捕获阶段的不同:</p>\r\n<p>document.getElementById(“myDiv”).addEventListener(“click”, myFunction, true);<br>　　使用 removeEventListener() 方法移除由 addEventListener() 方法添加的事件句柄:</p>\r\n<p>// 添加 &lt;div&gt; 事件句柄<br>document.getElementById(“myDIV”).addEventListener(“mousemove”, myFunction);</p>\r\n<p>// 移除 &lt;div&gt; 事件句柄<br>document.getElementById(“myDIV”).removeEventListener(“mousemove”, myFunction);\r\n　　</p>\r\n<p>如果浏览器不支持 addEventListener() 方法, 你可以使用 attachEvent() 方法替代。</p>\r\n<p>以下实例演示了跨浏览器的解决方法：</p>\r\n<p>var x = document.getElementById(“myBtn”);<br>if (x.addEventListener) {                    //所有主流浏览器，除了 IE 8 及更早 IE版本<br>    x.addEventListener(“click”, myFunction);<br>} else if (x.attachEvent) {                  // IE 8 及更早 IE 版本<br>    x.attachEvent(“onclick”, myFunction);<br>}\r\n　　</p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (9, 2, '当前日期时间', '汪苗', 'http://oss.wangmiaozero.cn/wechat/12312312.png', 'http://oss.wangmiaozero.cn/wechat/12312312.png', 'web前端', 1011, '2018-05-04 19:29:31', '```\r\n//控制循环时间\r\n        setInterval(()=>{\r\n          var timestamp = Date.parse(new Date());\r\n          //返回当前时间毫秒数\r\n          timestamp = timestamp / 1000;   \r\n          //获取当前时间\r\n          var n = timestamp *1000;  \r\n          var date = new Date(n);\r\n          var Y =date.getFullYear();\r\n          var M = (date.getMonth()+ 1 < 10 ? \'0\' + (date.getMonth() + 1) : date.getMonth() + 1);\r\n          var D = date.getDate()< 10 ? \'0\' + date.getDate() :date.getDate();\r\n          //时\r\n          var h = (date.getHours()<10?\'0\'+date.getHours():date.getHours());\r\n          //分\r\n          var m = (date.getMinutes()<10?\'0\'+date.getMinutes():date.getMinutes());\r\n          //秒\r\n          var s = (date.getSeconds()<10?\'0\'+date.getSeconds():date.getSeconds());\r\n          this.data.mytime = h+\": \"+m+\":\"+s;\r\n          HTIS.setData({\r\n            mytime:HTIS.data.mytime\r\n          })\r\n        },1000)\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">//控制循环时间</span></code></li><li class=\"L1\"><code><span class=\"pln\">        setInterval</span><span class=\"pun\">(()=&gt;{</span></code></li><li class=\"L2\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> timestamp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Date</span><span class=\"pun\">.</span><span class=\"pln\">parse</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Date</span><span class=\"pun\">());</span></code></li><li class=\"L3\"><code><span class=\"pln\">          </span><span class=\"com\">//返回当前时间毫秒数</span></code></li><li class=\"L4\"><code><span class=\"pln\">          timestamp </span><span class=\"pun\">=</span><span class=\"pln\"> timestamp </span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"lit\">1000</span><span class=\"pun\">;</span><span class=\"pln\">   </span></code></li><li class=\"L5\"><code><span class=\"pln\">          </span><span class=\"com\">//获取当前时间</span></code></li><li class=\"L6\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> n </span><span class=\"pun\">=</span><span class=\"pln\"> timestamp </span><span class=\"pun\">*</span><span class=\"lit\">1000</span><span class=\"pun\">;</span><span class=\"pln\">  </span></code></li><li class=\"L7\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> date </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Date</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> Y </span><span class=\"pun\">=</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getFullYear</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> M </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getMonth</span><span class=\"pun\">()+</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"str\">\'0\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getMonth</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> date</span><span class=\"pun\">.</span><span class=\"pln\">getMonth</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> D </span><span class=\"pun\">=</span><span class=\"pln\"> date</span><span class=\"pun\">.</span><span class=\"pln\">getDate</span><span class=\"pun\">()&lt;</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"str\">\'0\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> date</span><span class=\"pun\">.</span><span class=\"pln\">getDate</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getDate</span><span class=\"pun\">();</span></code></li><li class=\"L1\"><code><span class=\"pln\">          </span><span class=\"com\">//时</span></code></li><li class=\"L2\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> h </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getHours</span><span class=\"pun\">()&lt;</span><span class=\"lit\">10</span><span class=\"pun\">?</span><span class=\"str\">\'0\'</span><span class=\"pun\">+</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getHours</span><span class=\"pun\">():</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getHours</span><span class=\"pun\">());</span></code></li><li class=\"L3\"><code><span class=\"pln\">          </span><span class=\"com\">//分</span></code></li><li class=\"L4\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> m </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getMinutes</span><span class=\"pun\">()&lt;</span><span class=\"lit\">10</span><span class=\"pun\">?</span><span class=\"str\">\'0\'</span><span class=\"pun\">+</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getMinutes</span><span class=\"pun\">():</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getMinutes</span><span class=\"pun\">());</span></code></li><li class=\"L5\"><code><span class=\"pln\">          </span><span class=\"com\">//秒</span></code></li><li class=\"L6\"><code><span class=\"pln\">          </span><span class=\"kwd\">var</span><span class=\"pln\"> s </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getSeconds</span><span class=\"pun\">()&lt;</span><span class=\"lit\">10</span><span class=\"pun\">?</span><span class=\"str\">\'0\'</span><span class=\"pun\">+</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getSeconds</span><span class=\"pun\">():</span><span class=\"pln\">date</span><span class=\"pun\">.</span><span class=\"pln\">getSeconds</span><span class=\"pun\">());</span></code></li><li class=\"L7\"><code><span class=\"pln\">          </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">mytime </span><span class=\"pun\">=</span><span class=\"pln\"> h</span><span class=\"pun\">+</span><span class=\"str\">\": \"</span><span class=\"pun\">+</span><span class=\"pln\">m</span><span class=\"pun\">+</span><span class=\"str\">\":\"</span><span class=\"pun\">+</span><span class=\"pln\">s</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code><span class=\"pln\">          HTIS</span><span class=\"pun\">.</span><span class=\"pln\">setData</span><span class=\"pun\">({</span></code></li><li class=\"L9\"><code><span class=\"pln\">            mytime</span><span class=\"pun\">:</span><span class=\"pln\">HTIS</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">mytime</span></code></li><li class=\"L0\"><code><span class=\"pln\">          </span><span class=\"pun\">})</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">},</span><span class=\"lit\">1000</span><span class=\"pun\">)</span></code></li></ol></pre>', 1, '17615848207');
INSERT INTO `articles` VALUES (10, 5, 'vscode 使用ESLint 自动检查，保存时自动格式化', '汪苗', 'http://oss.wangmiaozero.cn/wechat/23123.png', 'http://oss.wangmiaozero.cn/wechat/23123.png', 'web前端', 1012, '2018-05-05 19:26:12', '1:全局安装eslint \r\n\r\n`npm install -g eslint`\r\n2: 打开vscode 点击  “文件”-----》“首选项”----》“设置”，在右侧“用户设置/settings.json”里加入一下配置：\r\n\r\n```\r\n{\r\n    //eslint 代码自动检查相关配置\r\n \r\n    \"eslint.enable\": true,\r\n    \"eslint.autoFixOnSave\": true,\r\n    \"eslint.run\": \"onType\",\r\n    \"eslint.options\": {\r\n	    \"extensions\": [\".js\",\".vue\"]\r\n    },\r\n    \"eslint.validate\": [\r\n        \"javascriptreact\",\r\n        \"vue\",\r\n        \"javascript\", {\r\n            \"language\": \"vue\",\r\n            \"autoFix\": true\r\n        },\r\n        \"html\", {\r\n          \"language\": \"html\",\r\n          \"autoFix\": true\r\n        }\r\n  ],\r\n}\r\n```\r\n## 下面是我的配置:\r\n\r\n```\r\n{\r\n    \"team.showWelcomeMessage\": false,\r\n    \"window.zoomLevel\": 1,\r\n      //eslint 代码自动检查相关配置\r\n      \"eslint.enable\": true,\r\n      \"eslint.autoFixOnSave\": true,\r\n      \"eslint.run\": \"onType\",\r\n      \"eslint.options\": {\r\n          \"extensions\": [\".js\",\".vue\"]\r\n      },\r\n      \"eslint.validate\": [\r\n          \"javascriptreact\",\r\n          \"vue\",\r\n          \"javascript\", {\r\n              \"language\": \"vue\",\r\n              \"autoFix\": true\r\n          },\r\n          \"html\", {\r\n            \"language\": \"html\",\r\n            \"autoFix\": true\r\n          }\r\n    ],\r\n    \"explorer.confirmDelete\": false,\r\n    \"files.associations\": {\r\n        \"*.cjson\": \"jsonc\",\r\n        \"*.wxss\": \"css\",\r\n        \"*.wxs\": \"javascript\"\r\n    },\r\n    \"emmet.includeLanguages\": {\r\n        \"wxml\": \"html\"\r\n    },\r\n    \"minapp-vscode.disableAutoConfig\": true,\r\n    \"window.menuBarVisibility\": \"visible\",\r\n    \"git.enableSmartCommit\": true,\r\n    \"git.autofetch\": true,\r\n    \"liveServer.settings.donotShowInfoMsg\": true,\r\n    \"[html]\": {\r\n        \"editor.defaultFormatter\": \"vscode.html-language-features\"\r\n    },\r\n    \"javascript.updateImportsOnFileMove.enabled\": \"always\",\r\n    \"workbench.iconTheme\": \"material-icon-theme\",\r\n    \"workbench.colorTheme\": \"SynthWave \'84\",\r\n    \"editor.fontSize\": 16,\r\n    \"search.followSymlinks\": false,\r\n    \"workbench.sideBar.location\": \"right\",\r\n    \"vscode_custom_css.policy\": true,\r\n    \"vscode_custom_css.imports\":[\r\n        \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/synthwave84.css\",\r\n        \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/toolbar.css\",\r\n        \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/vscode-vibrancy-style.css\",\r\n        \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/enable-electron-vibrancy.js\",\r\n    ],\r\n    \"zenMode.restore\": true,\r\n    \"glassit.alpha\": 220,\r\n    \"breadcrumbs.enabled\": true,\r\n    \"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\"\r\n}\r\n```\r\n# 以上可以安装eslint 插件加上面配置即可,有兴趣的话你可以往下面看\r\n# “编码一时爽，重构火葬场。”\r\n实践\r\n如何上手？首先还是官方文档。我觉得不论是学什么，你得先去了解它是什么，以及它为什么出现，然后才是衡量是否要在工作或生活中使用它。\r\n\r\n官方文档：https://eslint.org/\r\n\r\n中文文档：https://cn.eslint.org/\r\n ESLint它很灵活，所有的检查都是基于规则的。\r\n\r\nESLint规则：https://cn.eslint.org/docs/rules/\r\n\r\n使用ESLint三部曲\r\n安装\r\nnpm install -g eslint\r\n初始化\r\nnpm init\r\n编写配置文件（由于ESLint配置文件支持多种文件扩展，此处以.eslintrc.js为例）\r\n\r\n```\r\nmodule.exports = {\r\n  /**\r\n   * 默认情况下，ESLint会在所有父级目录里寻找配置文件，一直到根目录。\r\n   * 为了将ESLint限制在一个特定的项目，设置root: true；\r\n   * ESLint一旦发现配置文件中有 root: true，就会停止在父级目录中寻找。\r\n   */\r\n  root: true,\r\n  // 指定解析器\r\n  // babel-ESLint: 一个对Babel解析器的包装，使其能够与ESLint兼容。\r\n  // parser: \'babel-eslint\',\r\n  // 设置解析器能帮助ESLint确定什么是解析错误。\r\n  parserOptions: {\r\n    parser: \'babel-eslint\',\r\n    // 指定js版本。语法上的支持\r\n    ecmaVersion: 6\r\n  },\r\n  // 脚本在执行期间访问的额外的全局变量\r\n  // globals: {},\r\n  // env: 指定脚本的运行环境\r\n  env: {\r\n    // 一个环境定义了一组预定义的全局变量。\r\n    browser: true,\r\n    // 会自动开启es6语法支持。\r\n    es6: true,\r\n    node: true\r\n  },\r\n  // 使用第三方插件。全局安装的 ESLint 实例只能使用全局安装的ESLint插件。本地同理，不支持混用。\r\n  plugins: [\r\n    \'html\',\r\n    \'vue\'\r\n  ],\r\n  // 配置文件从基础配置中继承已启用的规则。\r\n  /**\r\n   * eslint:recommended  启用核心规则，在规则页面中被标记为 √ 的。\r\n   */\r\n  extends: [\r\n    // plugin:(此处不能有空格)包名/配置名称。解析时plugin是解析成 eslint-plugin-vue。如果有空格会解析失败，eslint-plugin- vue。\r\n    // plugin可以省略包名的前缀 eslint-plugin-\r\n    // \'plugin:vue/essential\',\r\n    // \'@vue/standard\',\r\n    \'eslint:recommended\'\r\n    // 也可以指定另一个基本配置文件的绝对路径或相对路径\r\n  ],\r\n  \r\n \r\n  /**\r\n   * 每个规则有【3】个错误级别。\r\n   * off或0: 关闭该规则；\r\n   * warn或1: 开启规则，使用警告级别的错误，不会导致程序退出；\r\n   * error或2: 开启规则，使用错误级别的错误，当被触发的时候，程序会退出。\r\n   */\r\n  rules: {\r\n    /**\r\n     * 【================================================ Possible Errors ================================================】\r\n     * 这些规则与JavaScript代码中可能的错误或逻辑错误有关。\r\n     */\r\n    // 强制\"for\"循环中更新子句的计算器朝着正确的方向移动\r\n    \'for-direction\': 2,\r\n    // 禁止function定义中出现重名参数\r\n    \'no-dupe-args\': 2,\r\n    // 禁止对象字面量中出现重复的key\r\n    \'no-dupe-keys\': 2,\r\n    // 禁止出现重复的case标签\r\n    \'no-duplicate-case\': 2,\r\n    // 禁止对catch子句的参数重新赋值\r\n    \'no-ex-assign\': 2,\r\n    // 禁止对关系运算符的左操作数使用否定操作符\r\n    \'no-unsafe-negation\': 2,\r\n    // 禁止出现令人困惑的多行表达式\r\n    \'no-unexpected-multiline\': 2,\r\n    // 禁止在return、throw、continue、break语句之后出现不可达代码\r\n    \'no-unreachable\': 2,\r\n    // 禁止在finally语句块中出现控制流语句\r\n    \'no-unsafe-finally\': 2,\r\n    // 要求使用isNaN()检查NaN\r\n    \'use-isnan\': 2,\r\n    // 强制typeof表达式与有效的字符串进行比较\r\n    \'valid-typeof\': 2,\r\n    // 还可以写表达式，厉害了~\r\n    \'no-debugger\': process.env.NODE_ENV === \'production\' ? \'error\': \'off\',\r\n    \'no-console\': process.env.NODE_ENV === \'production\' ? \'error\': \'off\',\r\n \r\n    /**\r\n     * 【================================================ Best Practices ================================================】\r\n     * 这些规则是关于最佳实践的，帮助你避免一些问题。\r\n     */\r\n    // 强制 getter 和 setter在对象中成对出现\r\n    \'accessor-pairs\': 2,\r\n    // 强制所有控制语句使用一致的括号风格\r\n    \'curly\': [2, \'multi-line\'],\r\n    // 强制在点号之前和之后一致的换行\r\n    \'dot-location\': [2, \'property\'],\r\n    // 要求使用 ===和 !==\r\n    \'eqeqeq\': [2, \'allow-null\'],\r\n    // 禁用arguments.caller 或 arguments.callee\r\n    \'no-caller\': 2,\r\n    // 禁止使用空解构模式\r\n    \'no-empty-pattern\': 2,\r\n    // 禁止eval()\r\n    \'no-eval\': 2,\r\n    // 禁止使用类似eval()的方法\r\n    \'no-implied-eval\': 2,\r\n    // 禁止扩展原生类型\r\n    \'no-extend-native\': 2,\r\n    // 禁止不必要的.bind()调用\r\n    \'no-extra-bind\': 2,\r\n    // 禁止case语句落空\r\n    \'no-fallthrough\': 2,\r\n    // 禁止数字字面量中使用前导和末尾小数点\r\n    \'no-floating-decimal\': 2,\r\n    // 禁用__iterator__属性\r\n    \'no-iterator\': 2,\r\n    // 禁用标签语句\r\n    \'no-labels\': [2, {\r\n      \'allowLoop\'  : false,\r\n      \'allowSwitch\': false\r\n    }],\r\n    // 禁用不必要嵌套块\r\n    \'no-lone-blocks\': 2,\r\n    // 禁止使用多个空格\r\n    \'no-multi-spaces\': 2,\r\n    // 禁止使用多行字符串\r\n    \'no-multi-str\': 2,\r\n    // 禁止对String，Number 和 Boolean 使用new操作符\r\n    \'no-new-wrappers\': 2,\r\n    // 禁用八进制字面量\r\n    \'no-octal\': 2,\r\n    // 禁止在字符串中使用八进制转义序列\r\n    \'no-octal-escape\': 2,\r\n    // 禁止使用__proto__属性\r\n    \'no-proto\': 2,\r\n    // 禁止多次声明同一变量\r\n    \'no-redeclare\': 2,\r\n    // 禁止在return语句中使用赋值语句\r\n    \'no-return-assign\': [2, \'except-parens\'],\r\n    // 禁止自我赋值\r\n    \'no-self-assign\': 2,\r\n    // 禁止自我比较\r\n    \'no-self-compare\': 2,\r\n    // 禁用逗号操作符\r\n    \'no-sequences\': 2,\r\n    // 禁止抛出异常字面量\r\n    \'no-throw-literal\': 2,\r\n    // 禁止一成不变的循环条件\r\n    \'no-unmodified-loop-condition\': 2,\r\n    // 禁止不必要的.call()和.apply()\r\n    \'no-useless-call\': 2,\r\n    // 禁止不必要的转义字符\r\n    \'no-useless-escape\': 2,\r\n    // 禁用with语句\r\n    \'no-with\': 2,\r\n    // 要求IIFE使用括号括起来\r\n    \'wrap-iife\': 2,\r\n    // 要求或禁止Yoda条件。 if(\"red\" === color) { //字面量在前，变量在后 }\r\n    \'yoda\': [2, \'never\'],   //  比较绝不能是Yoda条件（需要变量在前，字面量在后）\r\n \r\n    /**\r\n     * 【================================================ ECMAScript 6 ================================================】\r\n     * 这些规则只与ES6有关，即通常所说的ES2015。\r\n     */\r\n    // 强制箭头函数前后使用一致的空格\r\n    \'arrow-spacing\': [2, {\r\n      \'before\': true,\r\n      \'after\' : true\r\n    }],\r\n    // 要求在构造函数中有super()调用\r\n    \'constructor-super\': 2,\r\n    // 强制generator函数中*号周围使用一致的空格\r\n    \'generator-star-spacing\': [2, {\r\n      \'before\': true,\r\n      \'after\' : true\r\n    }],\r\n    // 禁止修改类声明的变量\r\n    \'no-class-assign\': 2,\r\n    // 禁止修改const声明的变量\r\n    \'no-const-assign\': 2,\r\n    // 禁止类成员中出现重复的名称\r\n    \'no-dupe-class-members\': 2,\r\n    // 禁止 Symbolnew 操作符和 new 一起使用\r\n    \'no-new-symbol\': 2,\r\n    // 禁止在构造函数中，在调用super()之前使用 this 或 super\r\n    \'no-this-before-super\': 2,\r\n    // 禁止在对象中使用不必要的计算属性\r\n    \'no-useless-computed-key\': 2,\r\n    // 禁止不必要的构造函数\r\n    \'no-useless-constructor\': 2,\r\n    // 禁止模板字符串中嵌入表达式周围空格的使用\r\n    \'template-curly-spacing\': [2, \'never\'],\r\n    // 强制yield*表达式中的*周围使用空格\r\n    \'yield-star-spacing\': [2, \'both\'],\r\n    // 要求使用const声明那些声明后不再被修改的变量\r\n    \'prefer-const\': 2,\r\n \r\n    /**\r\n     * 【================================================ Stylistic Issues ================================================】\r\n     * 这些规则是关于代码风格的。\r\n     */\r\n    //  获取当前执行环境的上下文时，强制使用一致的命名（此处强制使用 \'that\'）。\r\n    \'consistent-this\': [2, \'that\'],\r\n    // 禁止或强制在代码块中开括号前和闭括号后有空格  { return 11 }\r\n    \'block-spacing\': [2, \'always\'],\r\n    // 强制在代码块中使用一致的大括号风格\r\n    \'brace-style\': [2, \'1tbs\', {\r\n      \'allowSingleLine\': true\r\n    }],\r\n    // 强制使用驼峰拼写法命名规定\r\n    \'camelcase\': [0, {\r\n      \'properties\': \'always\'\r\n    }],\r\n    // 要求或禁止末尾逗号\r\n    \'comma-dangle\': [2, \'never\'],\r\n    // 强制在逗号前后使用一致的空格\r\n    \'comma-spacing\': [2, {\r\n      \'before\': false,\r\n      \'after\' : true\r\n    }],\r\n    // 强制在逗号前后使用一致的空格\r\n    \'comma-style\': [2, \'last\'],\r\n    // 要求或禁止文件末尾存在空行\r\n    \'eol-last\': 2,\r\n    // 强制使用一致的缩进\r\n    \'indent\': [2, 2, {\r\n      \'SwitchCase\': 1\r\n    }],\r\n    // 强制在JSX属性中一致地使用双引号或单引号\r\n    \'jsx-quotes\': [2, \'prefer-single\'],\r\n    // 要求构造函数首字母大写\r\n    \'new-cap\': [2, {\r\n      \'newIsCap\': true,\r\n      \'capIsNew\': false\r\n    }],\r\n    // 要求构造无参构造函数时有圆括号\r\n    \'new-parens\': 2,\r\n    // 禁用Array构造函数\r\n    \'no-array-constructor\': 2,\r\n    // 禁止空格和tab的混合缩进\r\n    \'no-mixed-spaces-and-tabs\': 2,\r\n    // 禁止出现多行空行\r\n    \'no-multiple-empty-lines\': [2, {\r\n      // 最大连续空行数\r\n      max: 2\r\n    }],\r\n    // 禁止在函数标识符和其调用之间有空格\r\n    \'func-call-spacing\': 2,\r\n    // 禁止行尾空格\r\n    \'no-trailing-spaces\': 2,\r\n    // 禁止可以在有更简单的可替代的表达式时使用三元操作符\r\n    \'no-unneeded-ternary\': [2, {\r\n      // 允许表达式作为默认的赋值模式\r\n      \'defaultAssignment\': true\r\n    }],\r\n    // 禁止属性前有空白\r\n    \'no-whitespace-before-property\': 2,\r\n    // 强制函数中的变量要么一起声明要么分开声明\r\n    \'one-var\': [2, {\r\n      \'initialized\': \'never\'\r\n    }],\r\n    // 强制操作符使用一致的换行符\r\n    \'operator-linebreak\': [2, \'after\', {\r\n      \'overrides\': {\r\n        \'?\': \'before\',\r\n        \':\': \'before\'\r\n      }\r\n    }],\r\n    // 要求或禁止块内填充\r\n    \'padded-blocks\': [2, \'never\'],\r\n    // 强烈使用一致的反勾号``、双引号\"\"或单引号\'\'\r\n    \'quotes\': [2, \'single\', {\r\n      // 允许字符串使用单引号或者双引号，只要字符串中包含了一个其他引号，否则需要转义\r\n      \'avoidEscape\': true,\r\n      // 允许字符串使用反勾号\r\n      \'allowTemplateLiterals\': true\r\n    }],\r\n    // 禁止使用分号代替ASI(自动分号插入)\r\n    \'semi\': [2, \'never\'],\r\n    // 强制分号之前和之后使用一致的空格\r\n    \'semi-spacing\': [2, {\r\n      \'before\': false,\r\n      \'after\' : true\r\n    }],\r\n    // 强制在块之前使用一致的空格\r\n    \'space-before-blocks\': [2, \'always\'],\r\n    // 强制在圆括号内使用一致的空格\r\n    \'space-in-parens\': [2, \'never\'],\r\n    // 要求操作符周围有空格\r\n    \'space-infix-ops\': 2,\r\n    // 强制在一元操作符前后使用一致的空格\r\n    \'space-unary-ops\': [2, {\r\n      \'words\'   : true,\r\n      \'nonwords\': false\r\n    }],\r\n    // 强制在注释// 或/*使用一致的空格\r\n    \'spaced-comment\': [1, \'always\', {\r\n      \'markers\': [\'global\', \'globals\', \'eslint\', \'eslint-disable\', \'*package\', \'!\', \',\']\r\n    }],\r\n    // 强制在大括号中使用一致的空格\r\n    \'object-curly-spacing\': [2, \'always\', {\r\n      \'objectsInObjects\': false\r\n    }],\r\n    // 禁止或强制在括号内使用空格\r\n    \'array-bracket-spacing\': [2, \'never\'],\r\n    // 强制要求在对象字面量的属性中键和值之间使用一致的间距\r\n    \'key-spacing\': [2, {\r\n      \'beforeColon\': false,\r\n      \'afterColon\' : true\r\n    }],\r\n   \r\n    /**\r\n     * 【================================================ Node.js and CommonJS ================================================】\r\n     * 这些规则是关于Node.js 或 在浏览器中使用CommonJS的。\r\n     */\r\n    // 要求回调函数中有容错处理\r\n    \'handle-callback-err\': [2, \'^(err|error)$\'],\r\n    // 禁止调用 require 时使用new操作符\r\n    \'no-new-require\': 2,\r\n    // 禁止对__dirname和__filename进行字符串连接\r\n    \'no-path-concat\': 1,\r\n    // 强制在function的左括号之前使用一致的空格\r\n    \'space-before-function-paren\': [2, \'never\'], \r\n    \r\n    /**\r\n     * 【================================================ Possible Errors ================================================】\r\n     * 这些规则与JavaScript代码中可能的错误或逻辑错误有关。\r\n     */\r\n    // 禁止条件表达式中出现赋值操作符\r\n    \'no-cond-assign\': 2,\r\n    // 禁止在正则表达式中使用控制字符\r\n    \'no-control-regex\': 0,\r\n    // 禁止在正则表达式中使用空字符集\r\n    \'no-empty-character-class\': 2,\r\n    // 禁止不必要的布尔转换\r\n    \'no-extra-boolean-cast\': 2,\r\n    // 禁止不必要的括号\r\n    \'no-extra-parens\': [2, \'functions\'],\r\n    // 禁止对function声明重新赋值\r\n    \'no-func-assign\': 2,\r\n    // 禁止在嵌套块中出现变量声明或function声明\r\n    \'no-inner-declarations\': [2, \'functions\'],\r\n    // 禁止RegExp构造函数中存在无效的正则表达式字符串\r\n    \'no-invalid-regexp\': 2,\r\n    // 禁止在字符串和注释之外不规则的空白\r\n    \'no-irregular-whitespace\': 2,\r\n    // 禁止把全局对象作为函数调用\r\n    \'no-obj-calls\': 2,\r\n    // 禁止正则表达式字面量中出现多个空格\r\n    \'no-regex-spaces\': 2,\r\n    // 禁用稀疏数组\r\n    \'no-sparse-arrays\': 2,\r\n \r\n    /**\r\n     * 【================================================ Variables ================================================】\r\n     * 这些规则与变量声明有关。\r\n     */\r\n    // 禁止删除变量\r\n    \'no-delete-var\': 2,\r\n    // 不允许标签与变量同名\r\n    \'no-label-var\': 2,\r\n    // 禁止将标识符定义为受限的名字\r\n    \'no-shadow-restricted-names\': 2,\r\n    // 禁止未声明的变量，除非它们在/*global */注释中被提到\r\n    \'no-undef\': 2,\r\n    // 禁止将变量初始化为undefined\r\n    \'no-undef-init\': 2,\r\n    // 禁止出现未使用的变量\r\n    \'no-unused-vars\': [2, {\r\n      \'var\' : \'all\',\r\n      \'args\': \'none\'\r\n    }],\r\n \r\n    /**\r\n     * 【================================================ 配置定义在插件中的规则 ================================================】\r\n     * 格式： 插件名/规则ID\r\n     */\r\n    // \r\n    \'vue/no-parsing-error\': [2, { \'x-invalid-end-tag\': false }]\r\n  }\r\n}\r\n```\r\n.eslintignore：可以配置指定的目录或文件不进行ESLint检查。\r\n这个项目框架是iview-admin2.x.x的，项目本身基于vue 3.x以及webpack4.x，项目自身做了基本配置。\r\n\r\n还要安装我们的插件，\r\n\r\nnpm install eslint-plugin-html --save-dev\r\nnpm install eslint-plugin-vue --save-dev\r\n\r\n在VS Code中自动按照ESLint规则格式化代码\r\n在VS Code中安装插件（ESLint、Vurter、Prettier）\r\n文件 => 首选项 => 设置打开settings.json文件，个人配置如下\r\n--------------------- \r\n\r\n```\r\n{\r\n    // 是否允许自定义的snippet片段提示\r\n    \"editor.snippetSuggestions\"      : \"top\",\r\n    \"editor.fontSize\"                : 20,\r\n    \"editor.fontWeight\"              : \"400\",\r\n    \"editor.formatOnType\"            : true,\r\n    \"workbench.iconTheme\"            : \"material-icon-theme\",\r\n    \"workbench.colorTheme\"           : \"One Dark Pro\",\r\n    \"guides.enabled\": false,\r\n    \"editor.tabSize\": 2,\r\n    \"git.confirmSync\": false,\r\n    \"window.zoomLevel\": 0,\r\n    \"editor.renderWhitespace\": \"boundary\",\r\n    \"editor.cursorBlinking\": \"smooth\",\r\n    \"editor.minimap.enabled\": true,\r\n    \"editor.minimap.renderCharacters\": false,\r\n    \"window.title\": \"${dirty}${activeEditorMedium}${separator}${rootName}\",\r\n    \"editor.codeLens\": true,\r\n    // 配置文件关联，以便启用对应的提示\r\n    \"files.associations\": {\r\n      \"*.vue\": \"vue\",\r\n      \"*.wxss\": \"css\"\r\n    },\r\n    // 配置emmet是否启用tab展开缩写\r\n    \"emmet.triggerExpansionOnTab\": true,\r\n    // 配置emmet对文件类型的支持\r\n    \"emmet.syntaxProfiles\": {\r\n        \"javascript\": \"jsx\",\r\n        \"vue\": \"html\",\r\n        \"vue-html\": \"html\"\r\n    },\r\n    // 是否开启eslint检测\r\n    \"eslint.enable\": true,\r\n    // 文件保存时是否根据eslint进行格式化\r\n    \"eslint.autoFixOnSave\": true,\r\n    // eslint配置文件\r\n    \"eslint.options\": {\r\n      \"extensions\": [\r\n          \".js\",\r\n          \".vue\"\r\n      ]\r\n    },\r\n    // eslint能够识别的文件后缀类型\r\n    \"eslint.validate\": [\r\n        \"javascript\",{\r\n            \"language\": \"vue\",\r\n            \"autoFix\": true\r\n        },\"html\",\r\n        \"vue\"\r\n    ],\r\n    \"search.exclude\": {\r\n        \"**/node_modules\": true,\r\n        \"**/bower_components\": true,\r\n        \"**/dist\": true\r\n    },\r\n    // 格式化快捷键（默认）：Shift+Alt+F\r\n    // prettier进行格式化时，开启eslint支持\r\n    // \"prettier.eslintIntegration\": true,\r\n    // 是否使用单引号\r\n    \"prettier.singleQuote\": true,\r\n}\r\n```\r\n总结\r\n遇到的问题:\r\n\r\n未安装插件（要注意观看官网的使用规则）eslint-plugin-html和eslint-plugin-vue报错；\r\nparser的配置问题：https://github.com/vuejs/eslint-plugin-vue/issues/30\r\n前端架构师大佬QQ群:634196762    私人群不打广告 只讨论技术\r\n# 个人小程序 大家可以关注下  \r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019052122013457.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70)\r\n', '<p>1:全局安装eslint </p>\r\n<p><code>npm install -g eslint</code><br>2: 打开vscode 点击  “文件”——-》“首选项”——》“设置”，在右侧“用户设置/settings.json”里加入一下配置：</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">//eslint 代码自动检查相关配置</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.enable\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.autoFixOnSave\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.run\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"onType\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.options\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"str\">\"extensions\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\".js\"</span><span class=\"pun\">,</span><span class=\"str\">\".vue\"</span><span class=\"pun\">]</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.validate\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"str\">\"javascriptreact\"</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"str\">\"javascript\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">          </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">          </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"pun\">],</span></code></li><li class=\"L1\"><code><span class=\"pun\">}</span></code></li></ol></pre><h2 id=\"h2--\"><a name=\"下面是我的配置:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>下面是我的配置:</h2><pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"team.showWelcomeMessage\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"window.zoomLevel\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"com\">//eslint 代码自动检查相关配置</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"str\">\"eslint.enable\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">      </span><span class=\"str\">\"eslint.autoFixOnSave\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"str\">\"eslint.run\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"onType\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"str\">\"eslint.options\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">          </span><span class=\"str\">\"extensions\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\".js\"</span><span class=\"pun\">,</span><span class=\"str\">\".vue\"</span><span class=\"pun\">]</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"str\">\"eslint.validate\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L1\"><code><span class=\"pln\">          </span><span class=\"str\">\"javascriptreact\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">          </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">          </span><span class=\"str\">\"javascript\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">              </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">              </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L6\"><code><span class=\"pln\">          </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code><span class=\"pln\">          </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L0\"><code><span class=\"pln\">          </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">],</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"explorer.confirmDelete\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"files.associations\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"str\">\"*.cjson\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"jsonc\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"str\">\"*.wxss\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"css\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"str\">\"*.wxs\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"javascript\"</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"emmet.includeLanguages\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"str\">\"wxml\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"minapp-vscode.disableAutoConfig\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"window.menuBarVisibility\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"visible\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"git.enableSmartCommit\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"git.autofetch\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"liveServer.settings.donotShowInfoMsg\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"[html]\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"str\">\"editor.defaultFormatter\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vscode.html-language-features\"</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"javascript.updateImportsOnFileMove.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"always\"</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\"workbench.iconTheme\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"material-icon-theme\"</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"workbench.colorTheme\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"SynthWave \'84\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.fontSize\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">16</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"search.followSymlinks\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"workbench.sideBar.location\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"right\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"vscode_custom_css.policy\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"vscode_custom_css.imports\"</span><span class=\"pun\">:[</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/synthwave84.css\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/toolbar.css\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/vscode-vibrancy-style.css\"</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/enable-electron-vibrancy.js\"</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">],</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"zenMode.restore\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"glassit.alpha\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">220</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"breadcrumbs.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"terminal.integrated.shell.windows\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\"</span></code></li><li class=\"L6\"><code><span class=\"pun\">}</span></code></li></ol></pre><h1 id=\"h1--eslint-\"><a name=\"以上可以安装eslint 插件加上面配置即可,有兴趣的话你可以往下面看\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>以上可以安装eslint 插件加上面配置即可,有兴趣的话你可以往下面看</h1><h1 id=\"h1--\"><a name=\"“编码一时爽，重构火葬场。”\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>“编码一时爽，重构火葬场。”</h1><p>实践<br>如何上手？首先还是官方文档。我觉得不论是学什么，你得先去了解它是什么，以及它为什么出现，然后才是衡量是否要在工作或生活中使用它。</p>\r\n<p>官方文档：<a href=\"https://eslint.org/\">https://eslint.org/</a></p>\r\n<p>中文文档：<a href=\"https://cn.eslint.org/\">https://cn.eslint.org/</a><br> ESLint它很灵活，所有的检查都是基于规则的。</p>\r\n<p>ESLint规则：<a href=\"https://cn.eslint.org/docs/rules/\">https://cn.eslint.org/docs/rules/</a></p>\r\n<p>使用ESLint三部曲<br>安装<br>npm install -g eslint<br>初始化<br>npm init<br>编写配置文件（由于ESLint配置文件支持多种文件扩展，此处以.eslintrc.js为例）</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"kwd\">module</span><span class=\"pun\">.</span><span class=\"pln\">exports </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"com\">/**</span></code></li><li class=\"L2\"><code><span class=\"com\">   * 默认情况下，ESLint会在所有父级目录里寻找配置文件，一直到根目录。</span></code></li><li class=\"L3\"><code><span class=\"com\">   * 为了将ESLint限制在一个特定的项目，设置root: true；</span></code></li><li class=\"L4\"><code><span class=\"com\">   * ESLint一旦发现配置文件中有 root: true，就会停止在父级目录中寻找。</span></code></li><li class=\"L5\"><code><span class=\"com\">   */</span></code></li><li class=\"L6\"><code><span class=\"pln\">  root</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">// 指定解析器</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"com\">// babel-ESLint: 一个对Babel解析器的包装，使其能够与ESLint兼容。</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"com\">// parser: \'babel-eslint\',</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"com\">// 设置解析器能帮助ESLint确定什么是解析错误。</span></code></li><li class=\"L1\"><code><span class=\"pln\">  parserOptions</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">    parser</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'babel-eslint\'</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 指定js版本。语法上的支持</span></code></li><li class=\"L4\"><code><span class=\"pln\">    ecmaVersion</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">6</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"com\">// 脚本在执行期间访问的额外的全局变量</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">// globals: {},</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"com\">// env: 指定脚本的运行环境</span></code></li><li class=\"L9\"><code><span class=\"pln\">  env</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 一个环境定义了一组预定义的全局变量。</span></code></li><li class=\"L1\"><code><span class=\"pln\">    browser</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 会自动开启es6语法支持。</span></code></li><li class=\"L3\"><code><span class=\"pln\">    es6</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    node</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"com\">// 使用第三方插件。全局安装的 ESLint 实例只能使用全局安装的ESLint插件。本地同理，不支持混用。</span></code></li><li class=\"L7\"><code><span class=\"pln\">  plugins</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'html\'</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'vue\'</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"pun\">],</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"com\">// 配置文件从基础配置中继承已启用的规则。</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"com\">/**</span></code></li><li class=\"L3\"><code><span class=\"com\">   * eslint:recommended  启用核心规则，在规则页面中被标记为 √ 的。</span></code></li><li class=\"L4\"><code><span class=\"com\">   */</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"kwd\">extends</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// plugin:(此处不能有空格)包名/配置名称。解析时plugin是解析成 eslint-plugin-vue。如果有空格会解析失败，eslint-plugin- vue。</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// plugin可以省略包名的前缀 eslint-plugin-</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// \'plugin:vue/essential\',</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// \'@vue/standard\',</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'eslint:recommended\'</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 也可以指定另一个基本配置文件的绝对路径或相对路径</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">],</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"com\">/**</span></code></li><li class=\"L6\"><code><span class=\"com\">   * 每个规则有【3】个错误级别。</span></code></li><li class=\"L7\"><code><span class=\"com\">   * off或0: 关闭该规则；</span></code></li><li class=\"L8\"><code><span class=\"com\">   * warn或1: 开启规则，使用警告级别的错误，不会导致程序退出；</span></code></li><li class=\"L9\"><code><span class=\"com\">   * error或2: 开启规则，使用错误级别的错误，当被触发的时候，程序会退出。</span></code></li><li class=\"L0\"><code><span class=\"com\">   */</span></code></li><li class=\"L1\"><code><span class=\"pln\">  rules</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L3\"><code><span class=\"com\">     * 【================================================ Possible Errors ================================================】</span></code></li><li class=\"L4\"><code><span class=\"com\">     * 这些规则与JavaScript代码中可能的错误或逻辑错误有关。</span></code></li><li class=\"L5\"><code><span class=\"com\">     */</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制\"for\"循环中更新子句的计算器朝着正确的方向移动</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'for-direction\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止function定义中出现重名参数</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-dupe-args\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止对象字面量中出现重复的key</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-dupe-keys\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止出现重复的case标签</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-duplicate-case\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止对catch子句的参数重新赋值</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-ex-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止对关系运算符的左操作数使用否定操作符</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unsafe-negation\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止出现令人困惑的多行表达式</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unexpected-multiline\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在return、throw、continue、break语句之后出现不可达代码</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unreachable\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在finally语句块中出现控制流语句</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unsafe-finally\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求使用isNaN()检查NaN</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'use-isnan\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制typeof表达式与有效的字符串进行比较</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'valid-typeof\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 还可以写表达式，厉害了~</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-debugger\'</span><span class=\"pun\">:</span><span class=\"pln\"> process</span><span class=\"pun\">.</span><span class=\"pln\">env</span><span class=\"pun\">.</span><span class=\"pln\">NODE_ENV </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'production\'</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"str\">\'error\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'off\'</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-console\'</span><span class=\"pun\">:</span><span class=\"pln\"> process</span><span class=\"pun\">.</span><span class=\"pln\">env</span><span class=\"pun\">.</span><span class=\"pln\">NODE_ENV </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'production\'</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"str\">\'error\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'off\'</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L3\"><code><span class=\"com\">     * 【================================================ Best Practices ================================================】</span></code></li><li class=\"L4\"><code><span class=\"com\">     * 这些规则是关于最佳实践的，帮助你避免一些问题。</span></code></li><li class=\"L5\"><code><span class=\"com\">     */</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制 getter 和 setter在对象中成对出现</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'accessor-pairs\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制所有控制语句使用一致的括号风格</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'curly\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'multi-line\'</span><span class=\"pun\">],</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在点号之前和之后一致的换行</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'dot-location\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'property\'</span><span class=\"pun\">],</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求使用 ===和 !==</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'eqeqeq\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'allow-null\'</span><span class=\"pun\">],</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用arguments.caller 或 arguments.callee</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-caller\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止使用空解构模式</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-empty-pattern\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止eval()</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-eval\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止使用类似eval()的方法</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-implied-eval\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止扩展原生类型</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-extend-native\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止不必要的.bind()调用</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-extra-bind\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止case语句落空</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-fallthrough\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止数字字面量中使用前导和末尾小数点</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-floating-decimal\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用__iterator__属性</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-iterator\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用标签语句</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-labels\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"str\">\'allowLoop\'</span><span class=\"pln\">  </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">      </span><span class=\"str\">\'allowSwitch\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用不必要嵌套块</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-lone-blocks\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止使用多个空格</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-multi-spaces\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止使用多行字符串</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-multi-str\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止对String，Number 和 Boolean 使用new操作符</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-new-wrappers\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用八进制字面量</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-octal\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在字符串中使用八进制转义序列</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-octal-escape\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止使用__proto__属性</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-proto\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止多次声明同一变量</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-redeclare\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在return语句中使用赋值语句</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-return-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'except-parens\'</span><span class=\"pun\">],</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止自我赋值</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-self-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止自我比较</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-self-compare\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用逗号操作符</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-sequences\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止抛出异常字面量</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-throw-literal\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止一成不变的循环条件</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unmodified-loop-condition\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止不必要的.call()和.apply()</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-useless-call\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止不必要的转义字符</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-useless-escape\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用with语句</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-with\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求IIFE使用括号括起来</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'wrap-iife\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求或禁止Yoda条件。 if(\"red\" === color) { //字面量在前，变量在后 }</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'yoda\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span><span class=\"pln\">   </span><span class=\"com\">//  比较绝不能是Yoda条件（需要变量在前，字面量在后）</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L7\"><code><span class=\"com\">     * 【================================================ ECMAScript 6 ================================================】</span></code></li><li class=\"L8\"><code><span class=\"com\">     * 这些规则只与ES6有关，即通常所说的ES2015。</span></code></li><li class=\"L9\"><code><span class=\"com\">     */</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制箭头函数前后使用一致的空格</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'arrow-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"str\">\'before\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"str\">\'after\'</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求在构造函数中有super()调用</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'constructor-super\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制generator函数中*号周围使用一致的空格</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'generator-star-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\'before\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"str\">\'after\'</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止修改类声明的变量</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-class-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止修改const声明的变量</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-const-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止类成员中出现重复的名称</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-dupe-class-members\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止 Symbolnew 操作符和 new 一起使用</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-new-symbol\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在构造函数中，在调用super()之前使用 this 或 super</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-this-before-super\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在对象中使用不必要的计算属性</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-useless-computed-key\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止不必要的构造函数</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-useless-constructor\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止模板字符串中嵌入表达式周围空格的使用</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'template-curly-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制yield*表达式中的*周围使用空格</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'yield-star-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'both\'</span><span class=\"pun\">],</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求使用const声明那些声明后不再被修改的变量</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'prefer-const\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L4\"><code><span class=\"com\">     * 【================================================ Stylistic Issues ================================================】</span></code></li><li class=\"L5\"><code><span class=\"com\">     * 这些规则是关于代码风格的。</span></code></li><li class=\"L6\"><code><span class=\"com\">     */</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//  获取当前执行环境的上下文时，强制使用一致的命名（此处强制使用 \'that\'）。</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'consistent-this\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'that\'</span><span class=\"pun\">],</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止或强制在代码块中开括号前和闭括号后有空格  { return 11 }</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'block-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'always\'</span><span class=\"pun\">],</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在代码块中使用一致的大括号风格</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'brace-style\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'1tbs\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"str\">\'allowSingleLine\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制使用驼峰拼写法命名规定</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'camelcase\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"str\">\'properties\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'always\'</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求或禁止末尾逗号</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'comma-dangle\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在逗号前后使用一致的空格</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'comma-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"str\">\'before\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"str\">\'after\'</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在逗号前后使用一致的空格</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'comma-style\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'last\'</span><span class=\"pun\">],</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求或禁止文件末尾存在空行</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'eol-last\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制使用一致的缩进</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'indent\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"str\">\'SwitchCase\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在JSX属性中一致地使用双引号或单引号</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'jsx-quotes\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'prefer-single\'</span><span class=\"pun\">],</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求构造函数首字母大写</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'new-cap\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"str\">\'newIsCap\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\'capIsNew\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求构造无参构造函数时有圆括号</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'new-parens\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用Array构造函数</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-array-constructor\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止空格和tab的混合缩进</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-mixed-spaces-and-tabs\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止出现多行空行</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-multiple-empty-lines\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"com\">// 最大连续空行数</span></code></li><li class=\"L0\"><code><span class=\"pln\">      max</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在函数标识符和其调用之间有空格</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'func-call-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止行尾空格</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-trailing-spaces\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止可以在有更简单的可替代的表达式时使用三元操作符</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unneeded-ternary\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"com\">// 允许表达式作为默认的赋值模式</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\'defaultAssignment\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止属性前有空白</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-whitespace-before-property\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制函数中的变量要么一起声明要么分开声明</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'one-var\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">      </span><span class=\"str\">\'initialized\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制操作符使用一致的换行符</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'operator-linebreak\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'after\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\'overrides\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"str\">\'?\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'before\'</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"str\">\':\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'before\'</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求或禁止块内填充</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'padded-blocks\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 强烈使用一致的反勾号``、双引号\"\"或单引号\'\'</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'quotes\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'single\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"com\">// 允许字符串使用单引号或者双引号，只要字符串中包含了一个其他引号，否则需要转义</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\'avoidEscape\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"com\">// 允许字符串使用反勾号</span></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"str\">\'allowTemplateLiterals\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止使用分号代替ASI(自动分号插入)</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'semi\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制分号之前和之后使用一致的空格</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'semi-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"str\">\'before\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"str\">\'after\'</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在块之前使用一致的空格</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'space-before-blocks\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'always\'</span><span class=\"pun\">],</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在圆括号内使用一致的空格</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'space-in-parens\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求操作符周围有空格</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'space-infix-ops\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在一元操作符前后使用一致的空格</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'space-unary-ops\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"str\">\'words\'</span><span class=\"pln\">   </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\'nonwords\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在注释// 或/*使用一致的空格</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'spaced-comment\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'always\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"str\">\'markers\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\'global\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'globals\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'eslint\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'eslint-disable\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'*package\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'!\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\',\'</span><span class=\"pun\">]</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在大括号中使用一致的空格</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'object-curly-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'always\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"str\">\'objectsInObjects\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止或强制在括号内使用空格</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'array-bracket-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制要求在对象字面量的属性中键和值之间使用一致的间距</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'key-spacing\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"str\">\'beforeColon\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"str\">\'afterColon\'</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L8\"><code><span class=\"com\">     * 【================================================ Node.js and CommonJS ================================================】</span></code></li><li class=\"L9\"><code><span class=\"com\">     * 这些规则是关于Node.js 或 在浏览器中使用CommonJS的。</span></code></li><li class=\"L0\"><code><span class=\"com\">     */</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 要求回调函数中有容错处理</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'handle-callback-err\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'^(err|error)$\'</span><span class=\"pun\">],</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止调用 require 时使用new操作符</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-new-require\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止对__dirname和__filename进行字符串连接</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-path-concat\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 强制在function的左括号之前使用一致的空格</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'space-before-function-paren\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'never\'</span><span class=\"pun\">],</span><span class=\"pln\"> </span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L1\"><code><span class=\"com\">     * 【================================================ Possible Errors ================================================】</span></code></li><li class=\"L2\"><code><span class=\"com\">     * 这些规则与JavaScript代码中可能的错误或逻辑错误有关。</span></code></li><li class=\"L3\"><code><span class=\"com\">     */</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止条件表达式中出现赋值操作符</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-cond-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在正则表达式中使用控制字符</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-control-regex\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在正则表达式中使用空字符集</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-empty-character-class\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止不必要的布尔转换</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-extra-boolean-cast\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止不必要的括号</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-extra-parens\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'functions\'</span><span class=\"pun\">],</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止对function声明重新赋值</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-func-assign\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在嵌套块中出现变量声明或function声明</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-inner-declarations\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'functions\'</span><span class=\"pun\">],</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止RegExp构造函数中存在无效的正则表达式字符串</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-invalid-regexp\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止在字符串和注释之外不规则的空白</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-irregular-whitespace\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止把全局对象作为函数调用</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-obj-calls\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止正则表达式字面量中出现多个空格</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-regex-spaces\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁用稀疏数组</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-sparse-arrays\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L0\"><code><span class=\"com\">     * 【================================================ Variables ================================================】</span></code></li><li class=\"L1\"><code><span class=\"com\">     * 这些规则与变量声明有关。</span></code></li><li class=\"L2\"><code><span class=\"com\">     */</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止删除变量</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-delete-var\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 不允许标签与变量同名</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-label-var\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止将标识符定义为受限的名字</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-shadow-restricted-names\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止未声明的变量，除非它们在/*global */注释中被提到</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-undef\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止将变量初始化为undefined</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-undef-init\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 禁止出现未使用的变量</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'no-unused-vars\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">      </span><span class=\"str\">\'var\'</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'all\'</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"str\">\'args\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'none\'</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">}],</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L0\"><code><span class=\"com\">     * 【================================================ 配置定义在插件中的规则 ================================================】</span></code></li><li class=\"L1\"><code><span class=\"com\">     * 格式： 插件名/规则ID</span></code></li><li class=\"L2\"><code><span class=\"com\">     */</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// </span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'vue/no-parsing-error\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"str\">\'x-invalid-end-tag\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pln\"> </span><span class=\"pun\">}]</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code><span class=\"pun\">}</span></code></li></ol></pre><p>.eslintignore：可以配置指定的目录或文件不进行ESLint检查。<br>这个项目框架是iview-admin2.x.x的，项目本身基于vue 3.x以及webpack4.x，项目自身做了基本配置。</p>\r\n<p>还要安装我们的插件，</p>\r\n<p>npm install eslint-plugin-html —save-dev<br>npm install eslint-plugin-vue —save-dev</p>\r\n<p>在VS Code中自动按照ESLint规则格式化代码<br>在VS Code中安装插件（ESLint、Vurter、Prettier）</p>\r\n<h2 id=\"h2--gt-gt-settings-json-\"><a name=\"文件 => 首选项 => 设置打开settings.json文件，个人配置如下\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>文件 =&gt; 首选项 =&gt; 设置打开settings.json文件，个人配置如下</h2><pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 是否允许自定义的snippet片段提示</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.snippetSuggestions\"</span><span class=\"pln\">      </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"top\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.fontSize\"</span><span class=\"pln\">                </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">20</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.fontWeight\"</span><span class=\"pln\">              </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"400\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.formatOnType\"</span><span class=\"pln\">            </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"workbench.iconTheme\"</span><span class=\"pln\">            </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"material-icon-theme\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"workbench.colorTheme\"</span><span class=\"pln\">           </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"One Dark Pro\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"guides.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.tabSize\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\"git.confirmSync\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"window.zoomLevel\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.renderWhitespace\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"boundary\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.cursorBlinking\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"smooth\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.minimap.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.minimap.renderCharacters\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"window.title\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"${dirty}${activeEditorMedium}${separator}${rootName}\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.codeLens\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 配置文件关联，以便启用对应的提示</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"files.associations\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"str\">\"*.vue\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"str\">\"*.wxss\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"css\"</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 配置emmet是否启用tab展开缩写</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"emmet.triggerExpansionOnTab\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 配置emmet对文件类型的支持</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"emmet.syntaxProfiles\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"str\">\"javascript\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"jsx\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"str\">\"vue\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"str\">\"vue-html\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 是否开启eslint检测</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.enable\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 文件保存时是否根据eslint进行格式化</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.autoFixOnSave\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// eslint配置文件</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.options\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"str\">\"extensions\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L8\"><code><span class=\"pln\">          </span><span class=\"str\">\".js\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">          </span><span class=\"str\">\".vue\"</span></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"pun\">]</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// eslint能够识别的文件后缀类型</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"eslint.validate\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"str\">\"javascript\"</span><span class=\"pun\">,{</span></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">},</span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"str\">\"vue\"</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">],</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\"search.exclude\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"str\">\"**/node_modules\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"str\">\"**/bower_components\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"str\">\"**/dist\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">// 格式化快捷键（默认）：Shift+Alt+F</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// prettier进行格式化时，开启eslint支持</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// \"prettier.eslintIntegration\": true,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 是否使用单引号</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"prettier.singleQuote\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pun\">}</span></code></li></ol></pre><p>总结<br>遇到的问题:</p>\r\n<p>未安装插件（要注意观看官网的使用规则）eslint-plugin-html和eslint-plugin-vue报错；<br>parser的配置问题：<a href=\"https://github.com/vuejs/eslint-plugin-vue/issues/30\">https://github.com/vuejs/eslint-plugin-vue/issues/30</a><br>前端架构师大佬QQ群:634196762    私人群不打广告 只讨论技术</p>\r\n<h1 id=\"h1--\"><a name=\"个人小程序 大家可以关注下\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>个人小程序 大家可以关注下</h1><p><img src=\"https://img-blog.csdnimg.cn/2019052122013457.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (11, 11, '已开源|码上用它开始Flutter混合开发——FlutterBoost', '汪苗', 'http://oss.wangmiaozero.cn/wechat/4.png', 'http://oss.wangmiaozero.cn/wechat/4.png', 'web前端', 1013, '2018-05-06 19:56:25', '开源地址：https://github.com/alibaba/flutter_boost\r\n\r\n为什么要混合方案\r\n\r\n\r\n具有一定规模的App通常有一套成熟通用的基础库，尤其是阿里系App，一般需要依赖很多体系内的基础库。那么使用Flutter重新从头开发App的成本和风险都较高。所以在Native App进行渐进式迁移是Flutter技术在现有Native App进行应用的稳健型方式。\r\n\r\n闲鱼在实践中沉淀出一套自己的混合技术方案。在此过程中，我们跟Google Flutter团队进行着密切的沟通，听取了官方的一些建议，同时也针对我们业务具体情况进行方案的选型以及具体的实现。\r\n\r\n官方提出的混合方案\r\n\r\n\r\n1\r\n基本原理\r\nFlutter技术链主要由C++实现的Flutter Engine和Dart实现的Framework组成（其配套的编译和构建工具我们这里不参与讨论）。Flutter Engine负责线程管理，Dart VM状态管理和Dart代码加载等工作。而Dart代码所实现的Framework则是业务接触到的主要API，诸如Widget等概念就是在Dart层面Framework内容。\r\n\r\n\r\n\r\n一个进程里面最多只会初始化一个Dart VM。然而一个进程可以有多个Flutter Engine，多个Engine实例共享同一个Dart VM。\r\n\r\n\r\n\r\n我们来看具体实现，在iOS上面每初始化一个FlutterViewController就会有一个引擎随之初始化，也就意味着会有新的线程（理论上线程可以复用）去跑Dart代码。Android类似的Activity也会有类似的效果。如果你启动多个引擎实例，注意此时Dart VM依然是共享的，只是不同Engine实例加载的代码跑在各自独立的Isolate。\r\n\r\n2\r\n官方建议\r\n引擎深度共享\r\n\r\n在混合方案方面，我们跟Google讨论了可能的一些方案。Flutter官方给出的建议是从长期来看，我们应该支持在同一个引擎支持多窗口绘制的能力，至少在逻辑上做到FlutterViewController是共享同一个引擎的资源的。换句话说，我们希望所有绘制窗口共享同一个主Isolate。\r\n\r\n\r\n\r\n但官方给出的长期建议目前来说没有很好的支持。\r\n\r\n多引擎模式\r\n\r\n我们在混合方案中解决的主要问题是如何去处理交替出现的Flutter和Native页面。Google工程师给出了一个Keep It Simple的方案：对于连续的Flutter页面（Widget）只需要在当前FlutterViewController打开即可，对于间隔的Flutter页面我们初始化新的引擎。\r\n\r\n例如，我们进行下面一组导航操作：\r\n\r\nFlutter\r\n \r\nPage1\r\n \r\n->\r\n \r\nFlutter\r\n \r\nPage2\r\n \r\n->\r\n \r\nNative\r\n \r\nPage1\r\n \r\n->\r\n \r\nFlutter\r\n \r\nPage3\r\n \r\n\r\n我们只需要在Flutter Page1和Flutter Page3创建不同的Flutter实例即可。\r\n\r\n这个方案的好处就是简单易懂，逻辑清晰，但是也有潜在的问题。如果一个Native页面一个Flutter\r\n页面一直交替进行的话，Flutter Engine的数量会线性增加，而Flutter Engine本身是一个比较重的对象。\r\n\r\n多引擎模式的问题\r\n\r\n冗余的资源问题.多引擎模式下每个引擎之间的Isolate是相互独立的。在逻辑上这并没有什么坏处，但是引擎底层其实是维护了图片缓存等比较消耗内存的对象。想象一下，每个引擎都维护自己一份图片缓存，内存压力将会非常大。\r\n\r\n插件注册的问题。插件依赖Messenger去传递消息，而目前Messenger是由FlutterViewController（Activity）去实现的。如果你有多个FlutterViewController，插件的注册和通信将会变得混乱难以维护，消息的传递的源头和目标也变得不可控。\r\n\r\nFlutter Widget和Native的页面差异化问题。Flutter的页面是Widget，Native的页面是VC。逻辑上来说我们希望消除Flutter页面与Naitve页面的差异，否则在进行页面埋点和其它一些统一操作的时候都会遇到额外的复杂度。\r\n\r\n增加页面之间通信的复杂度。如果所有Dart代码都运行在同一个引擎实例，它们共享一个Isolate，可以用统一的编程框架进行Widget之间的通信，多引擎实例也让这件事情更加复杂。\r\n\r\n因此，综合多方面考虑，我们没有采用多引擎混合方案。\r\n\r\n现状及思考\r\n\r\n\r\n前面我们提到多引擎存在一些实际问题，所以闲鱼目前采用的混合方案是共享同一个引擎的方案。这个方案基于这样一个事实：任何时候我们最多只能看到一个页面，当然有些特定的场景你可以看到多个ViewController，但是这些特殊场景我们这里不讨论。\r\n\r\n我们可以这样简单去理解这个方案：我们把共享的Flutter View当成一个画布，然后用一个Native的容器作为逻辑的页面。每次在打开一个容器的时候我们通过通信机制通知Flutter View绘制成当前的逻辑页面，然后将Flutter View放到当前容器里面。\r\n\r\n这个方案无法支持同时存在多个平级逻辑页面的情况，因为你在页面切换的时候必须从栈顶去操作，无法再保持状态的同时进行平级切换。举个例子：有两个页面A，B，当前B在栈顶。切换到A需要把B从栈顶Pop出去，此时B的状态丢失，如果想切回B，我们只能重新打开B之前页面的状态无法维持住。\r\n\r\n如在pop的过程当中，可能会把Flutter 官方的Dialog进行误杀。而且基于栈的操作我们依赖对Flutter框架的一个属性修改，这让这个方案具有了侵入性的特点。\r\n\r\n\r\n\r\n具体细节，大家可以参考老方案开源项目地址：\r\n\r\nhttps://github.com/alibaba-flutter/hybridstackmanager\r\n\r\n新一代混合技术方案 FlutterBoost\r\n\r\n\r\n1\r\n重构计划\r\n在闲鱼推进Flutter化过程当中，更加复杂的页面场景逐渐暴露了老方案的局限性和一些问题。所以我们启动了代号FlutterBoost（向C++ Boost库致敬）的新混合技术方案。这次新的混合方案我们的主要目标有：\r\n\r\n可复用通用型混合方案\r\n\r\n支持更加复杂的混合模式，比如支持主页Tab这种情况\r\n\r\n无侵入性方案：不再依赖修改Flutter的方案\r\n\r\n支持通用页面生命周期\r\n\r\n统一明确的设计概念\r\n\r\n跟老方案类似，新的方案还是采用共享引擎的模式实现。主要思路是由Native容器Container通过消息驱动Flutter页面容器Container，从而达到Native Container与Flutter Container的同步目的。我们希望做到Flutter渲染的内容是由Naitve容器去驱动的。\r\n\r\n简单的理解，我们想做到把Flutter容器做成浏览器的感觉。填写一个页面地址，然后由容器去管理页面的绘制。在Native侧我们只需要关心如果初始化容器，然后设置容器对应的页面标志即可。\r\n\r\n2\r\n主要概念\r\n\r\n\r\n3\r\nNative层概念\r\nContainer：Native容器，平台Controller，Activity，ViewController\r\n\r\nContainer Manager：容器的管理者\r\n\r\nAdaptor：Flutter是适配层\r\n\r\nMessaging：基于Channel的消息通信\r\n\r\n4\r\nDart层概念\r\nContainer：Flutter用来容纳Widget的容器，具体实现为Navigator的派生类-\r\n\r\nContainer Manager：Flutter容器的管理，提供show，remove等Api\r\n\r\nCoordinator: 协调器，接受Messaging消息，负责调用Container Manager的状态管理。\r\n\r\nMessaging：基于Channel的消息通信\r\n\r\n5\r\n关于页面的理解\r\n在Native和Flutter表示页面的对象和概念是不一致的。在Native，我们对于页面的概念一般是ViewController，Activity。而对于Flutter我们对于页面的概念是Widget。我们希望可统一页面的概念，或者说弱化抽象掉Flutter本身的Widget对应的页面概念。换句话说，当一个Native的页面容器存在的时候，FlutteBoost保证一定会有一个Widget作为容器的内容。所以我们在理解和进行路由操作的时候都应该以Native的容器为准，Flutter Widget依赖于Native页面容器的状态。\r\n\r\n那么在FlutterBoost的概念里说到页面的时候，我们指的是Native容器和它所附属的Widget。所有页面路由操作，打开或者关闭页面，实际上都是对Native页面容器的直接操作。无论路由请求来自何方，最终都会转发给Native去实现路由操作。这也是接入FlutterBoost的时候需要实现Platform协议的原因。\r\n\r\n另一方面，我们无法控制业务代码通过Flutter本身的Navigator去push新的Widget。对于业务不通过FlutterBoost而直接使用Navigator操作Widget的情况，包括Dialog这种非全屏Widget，我们建议是业务自己负责管理其状态。这种类型Widget不属于FlutterBoost所定义的页面概念。\r\n\r\n理解这里的页面概念，对于理解和使用FlutterBoost至关重要。\r\n\r\n6\r\n与老方案主要差别\r\n前面我们提到老方案在Dart层维护单个Navigator栈结构用于Widget的切换。而新的方案则是在Dart侧引入了Container的概念，不再用栈的结构去维护现有的页面，而是通过扁平化key-value映射的形式去维护当前所有的页面，每个页面拥有一个唯一的id。这种结构很自然的支持了页面的查找和切换，不再受制于栈顶操作的问题，之前的一些由于pop导致的问题迎刃而解。也不需要依赖修改Flutter源码的形式去进行页面栈操作，去掉了实现的侵入性。\r\n\r\n实际上我们引入的Container就是Navigator的，也就是说一个Native的容器对应了一个Navigator。那这是如何做到的呢？\r\n\r\n7\r\n多Navigator的实现\r\nFlutter在底层提供了让你自定义Navigator的接口，我们自己实现了一个管理多个Navigator的对象。当前最多只会有一个可见的Flutter Navigator，这个Navigator所包含的页面也就是我们当前可见容器所对应的页面。\r\n\r\nNative容器与Flutter容器（Navigator）是一一对应的，生命周期也是同步的。当一个Native容器被创建的时候，Flutter的一个容器也被创建，它们通过相同的id关联起来。当Native的容器被销毁的时候，Flutter的容器也被销毁。Flutter容器的状态是跟随Native容器，这也就是我们说的Native驱动。由Manager统一管理切换当前在屏幕上展示的容器。\r\n\r\n我们用一个简单的例子描述一个新页面创建的过程：\r\n\r\n创建Native容器（iOS ViewController，Android Activity or Fragment）。\r\n\r\nNative容器通过消息机制通知Flutter Coordinator新的容器被创建。\r\n\r\nFlutter Container Manager进而得到通知，负责创建出对应的Flutter容器，并且在其中装载对应的Widget页面。\r\n\r\n当Native容器展示到屏幕上时，容器发消息给Flutter Coordinator通知要展示页面的id.\r\n\r\nFlutter Container Manager找到对应id的Flutter Container并将其设置为前台可见容器。\r\n\r\n这就是一个新页面创建的主要逻辑，销毁和进入后台等操作也类似有Native容器事件去进行驱动。\r\n\r\n总结\r\n\r\n\r\n目前FlutterBoost已经在生产环境支撑着在闲鱼客户端中所有的基于Flutter开发业务，为更加负复杂的混合场景提供了支持，稳定为亿级用户提供服务。\r\n\r\n我们在项目启动之初就希望FlutterBoost能够解决Native App混合模式接入Flutter这个通用问题。所以我们把它做成了一个可复用的Flutter插件，希望吸引更多感兴趣的朋友参与到Flutter社区的建设。在有限篇幅中，我们分享了闲鱼在Flutter混合技术方案中积累的经验和代码。欢迎兴趣的同学能够积极与我们一起交流学习。\r\n\r\n扩展补充\r\n\r\n\r\n1\r\n性能相关\r\n在两个Flutter页面进行切换的时候，因为我们只有一个Flutter View所以需要对上一个页面进行截图保存，如果Flutter页面多截图会占用大量内存。这里我们采用文件内存二级缓存策略，在内存中最多只保存2-3个截图，其余的写入文件按需加载。这样我们可以在保证用户体验的同时在内存方面也保持一个较为稳定的水平。\r\n\r\n页面渲染性能方面，Flutter的AOT优势展露无遗。在页面快速切换的时候，Flutter能够很灵敏的相应页面的切换，在逻辑上创造出一种Flutter多个页面的感觉。\r\n\r\n2\r\nRelease1.0的支持\r\n项目开始的时候我们基于闲鱼目前使用的Flutter版本进行开发，而后进行了Release 1.0兼容升级测试目前没有发现问题。\r\n\r\n3\r\n接入\r\n\r\n只要是集成了Flutter的项目都可以用官方依赖的方式非常方便的以插件形式引入FlutterBoost，只需要对工程进行少量代码接入即可完成接入。\r\n详细接入文档，请参阅GitHub主页官方项目文档。\r\n4\r\n现已开源\r\n目前，新一代混合栈已经在闲鱼全面应用。我们非常乐意将沉淀的技术回馈给社区。欢迎大家一起贡献，一起交流，携手共建Flutter社区。\r\n\r\n项目开源地址：https://github.com/alibaba/flutter_boost', '<p>开源地址：<a href=\"https://github.com/alibaba/flutter_boost\">https://github.com/alibaba/flutter_boost</a></p>\r\n<p>为什么要混合方案</p>\r\n<p>具有一定规模的App通常有一套成熟通用的基础库，尤其是阿里系App，一般需要依赖很多体系内的基础库。那么使用Flutter重新从头开发App的成本和风险都较高。所以在Native App进行渐进式迁移是Flutter技术在现有Native App进行应用的稳健型方式。</p>\r\n<p>闲鱼在实践中沉淀出一套自己的混合技术方案。在此过程中，我们跟Google Flutter团队进行着密切的沟通，听取了官方的一些建议，同时也针对我们业务具体情况进行方案的选型以及具体的实现。</p>\r\n<p>官方提出的混合方案</p>\r\n<p>1<br>基本原理<br>Flutter技术链主要由C++实现的Flutter Engine和Dart实现的Framework组成（其配套的编译和构建工具我们这里不参与讨论）。Flutter Engine负责线程管理，Dart VM状态管理和Dart代码加载等工作。而Dart代码所实现的Framework则是业务接触到的主要API，诸如Widget等概念就是在Dart层面Framework内容。</p>\r\n<p>一个进程里面最多只会初始化一个Dart VM。然而一个进程可以有多个Flutter Engine，多个Engine实例共享同一个Dart VM。</p>\r\n<p>我们来看具体实现，在iOS上面每初始化一个FlutterViewController就会有一个引擎随之初始化，也就意味着会有新的线程（理论上线程可以复用）去跑Dart代码。Android类似的Activity也会有类似的效果。如果你启动多个引擎实例，注意此时Dart VM依然是共享的，只是不同Engine实例加载的代码跑在各自独立的Isolate。</p>\r\n<p>2<br>官方建议<br>引擎深度共享</p>\r\n<p>在混合方案方面，我们跟Google讨论了可能的一些方案。Flutter官方给出的建议是从长期来看，我们应该支持在同一个引擎支持多窗口绘制的能力，至少在逻辑上做到FlutterViewController是共享同一个引擎的资源的。换句话说，我们希望所有绘制窗口共享同一个主Isolate。</p>\r\n<p>但官方给出的长期建议目前来说没有很好的支持。</p>\r\n<p>多引擎模式</p>\r\n<p>我们在混合方案中解决的主要问题是如何去处理交替出现的Flutter和Native页面。Google工程师给出了一个Keep It Simple的方案：对于连续的Flutter页面（Widget）只需要在当前FlutterViewController打开即可，对于间隔的Flutter页面我们初始化新的引擎。</p>\r\n<p>例如，我们进行下面一组导航操作：</p>\r\n<p>Flutter</p>\r\n<p>Page1</p>\r\n<p>-&gt;</p>\r\n<p>Flutter</p>\r\n<p>Page2</p>\r\n<p>-&gt;</p>\r\n<p>Native</p>\r\n<p>Page1</p>\r\n<p>-&gt;</p>\r\n<p>Flutter</p>\r\n<p>Page3</p>\r\n<p>我们只需要在Flutter Page1和Flutter Page3创建不同的Flutter实例即可。</p>\r\n<p>这个方案的好处就是简单易懂，逻辑清晰，但是也有潜在的问题。如果一个Native页面一个Flutter<br>页面一直交替进行的话，Flutter Engine的数量会线性增加，而Flutter Engine本身是一个比较重的对象。</p>\r\n<p>多引擎模式的问题</p>\r\n<p>冗余的资源问题.多引擎模式下每个引擎之间的Isolate是相互独立的。在逻辑上这并没有什么坏处，但是引擎底层其实是维护了图片缓存等比较消耗内存的对象。想象一下，每个引擎都维护自己一份图片缓存，内存压力将会非常大。</p>\r\n<p>插件注册的问题。插件依赖Messenger去传递消息，而目前Messenger是由FlutterViewController（Activity）去实现的。如果你有多个FlutterViewController，插件的注册和通信将会变得混乱难以维护，消息的传递的源头和目标也变得不可控。</p>\r\n<p>Flutter Widget和Native的页面差异化问题。Flutter的页面是Widget，Native的页面是VC。逻辑上来说我们希望消除Flutter页面与Naitve页面的差异，否则在进行页面埋点和其它一些统一操作的时候都会遇到额外的复杂度。</p>\r\n<p>增加页面之间通信的复杂度。如果所有Dart代码都运行在同一个引擎实例，它们共享一个Isolate，可以用统一的编程框架进行Widget之间的通信，多引擎实例也让这件事情更加复杂。</p>\r\n<p>因此，综合多方面考虑，我们没有采用多引擎混合方案。</p>\r\n<p>现状及思考</p>\r\n<p>前面我们提到多引擎存在一些实际问题，所以闲鱼目前采用的混合方案是共享同一个引擎的方案。这个方案基于这样一个事实：任何时候我们最多只能看到一个页面，当然有些特定的场景你可以看到多个ViewController，但是这些特殊场景我们这里不讨论。</p>\r\n<p>我们可以这样简单去理解这个方案：我们把共享的Flutter View当成一个画布，然后用一个Native的容器作为逻辑的页面。每次在打开一个容器的时候我们通过通信机制通知Flutter View绘制成当前的逻辑页面，然后将Flutter View放到当前容器里面。</p>\r\n<p>这个方案无法支持同时存在多个平级逻辑页面的情况，因为你在页面切换的时候必须从栈顶去操作，无法再保持状态的同时进行平级切换。举个例子：有两个页面A，B，当前B在栈顶。切换到A需要把B从栈顶Pop出去，此时B的状态丢失，如果想切回B，我们只能重新打开B之前页面的状态无法维持住。</p>\r\n<p>如在pop的过程当中，可能会把Flutter 官方的Dialog进行误杀。而且基于栈的操作我们依赖对Flutter框架的一个属性修改，这让这个方案具有了侵入性的特点。</p>\r\n<p>具体细节，大家可以参考老方案开源项目地址：</p>\r\n<p><a href=\"https://github.com/alibaba-flutter/hybridstackmanager\">https://github.com/alibaba-flutter/hybridstackmanager</a></p>\r\n<p>新一代混合技术方案 FlutterBoost</p>\r\n<p>1<br>重构计划<br>在闲鱼推进Flutter化过程当中，更加复杂的页面场景逐渐暴露了老方案的局限性和一些问题。所以我们启动了代号FlutterBoost（向C++ Boost库致敬）的新混合技术方案。这次新的混合方案我们的主要目标有：</p>\r\n<p>可复用通用型混合方案</p>\r\n<p>支持更加复杂的混合模式，比如支持主页Tab这种情况</p>\r\n<p>无侵入性方案：不再依赖修改Flutter的方案</p>\r\n<p>支持通用页面生命周期</p>\r\n<p>统一明确的设计概念</p>\r\n<p>跟老方案类似，新的方案还是采用共享引擎的模式实现。主要思路是由Native容器Container通过消息驱动Flutter页面容器Container，从而达到Native Container与Flutter Container的同步目的。我们希望做到Flutter渲染的内容是由Naitve容器去驱动的。</p>\r\n<p>简单的理解，我们想做到把Flutter容器做成浏览器的感觉。填写一个页面地址，然后由容器去管理页面的绘制。在Native侧我们只需要关心如果初始化容器，然后设置容器对应的页面标志即可。</p>\r\n<p>2<br>主要概念</p>\r\n<p>3<br>Native层概念<br>Container：Native容器，平台Controller，Activity，ViewController</p>\r\n<p>Container Manager：容器的管理者</p>\r\n<p>Adaptor：Flutter是适配层</p>\r\n<p>Messaging：基于Channel的消息通信</p>\r\n<p>4<br>Dart层概念<br>Container：Flutter用来容纳Widget的容器，具体实现为Navigator的派生类-</p>\r\n<p>Container Manager：Flutter容器的管理，提供show，remove等Api</p>\r\n<p>Coordinator: 协调器，接受Messaging消息，负责调用Container Manager的状态管理。</p>\r\n<p>Messaging：基于Channel的消息通信</p>\r\n<p>5<br>关于页面的理解<br>在Native和Flutter表示页面的对象和概念是不一致的。在Native，我们对于页面的概念一般是ViewController，Activity。而对于Flutter我们对于页面的概念是Widget。我们希望可统一页面的概念，或者说弱化抽象掉Flutter本身的Widget对应的页面概念。换句话说，当一个Native的页面容器存在的时候，FlutteBoost保证一定会有一个Widget作为容器的内容。所以我们在理解和进行路由操作的时候都应该以Native的容器为准，Flutter Widget依赖于Native页面容器的状态。</p>\r\n<p>那么在FlutterBoost的概念里说到页面的时候，我们指的是Native容器和它所附属的Widget。所有页面路由操作，打开或者关闭页面，实际上都是对Native页面容器的直接操作。无论路由请求来自何方，最终都会转发给Native去实现路由操作。这也是接入FlutterBoost的时候需要实现Platform协议的原因。</p>\r\n<p>另一方面，我们无法控制业务代码通过Flutter本身的Navigator去push新的Widget。对于业务不通过FlutterBoost而直接使用Navigator操作Widget的情况，包括Dialog这种非全屏Widget，我们建议是业务自己负责管理其状态。这种类型Widget不属于FlutterBoost所定义的页面概念。</p>\r\n<p>理解这里的页面概念，对于理解和使用FlutterBoost至关重要。</p>\r\n<p>6<br>与老方案主要差别<br>前面我们提到老方案在Dart层维护单个Navigator栈结构用于Widget的切换。而新的方案则是在Dart侧引入了Container的概念，不再用栈的结构去维护现有的页面，而是通过扁平化key-value映射的形式去维护当前所有的页面，每个页面拥有一个唯一的id。这种结构很自然的支持了页面的查找和切换，不再受制于栈顶操作的问题，之前的一些由于pop导致的问题迎刃而解。也不需要依赖修改Flutter源码的形式去进行页面栈操作，去掉了实现的侵入性。</p>\r\n<p>实际上我们引入的Container就是Navigator的，也就是说一个Native的容器对应了一个Navigator。那这是如何做到的呢？</p>\r\n<p>7<br>多Navigator的实现<br>Flutter在底层提供了让你自定义Navigator的接口，我们自己实现了一个管理多个Navigator的对象。当前最多只会有一个可见的Flutter Navigator，这个Navigator所包含的页面也就是我们当前可见容器所对应的页面。</p>\r\n<p>Native容器与Flutter容器（Navigator）是一一对应的，生命周期也是同步的。当一个Native容器被创建的时候，Flutter的一个容器也被创建，它们通过相同的id关联起来。当Native的容器被销毁的时候，Flutter的容器也被销毁。Flutter容器的状态是跟随Native容器，这也就是我们说的Native驱动。由Manager统一管理切换当前在屏幕上展示的容器。</p>\r\n<p>我们用一个简单的例子描述一个新页面创建的过程：</p>\r\n<p>创建Native容器（iOS ViewController，Android Activity or Fragment）。</p>\r\n<p>Native容器通过消息机制通知Flutter Coordinator新的容器被创建。</p>\r\n<p>Flutter Container Manager进而得到通知，负责创建出对应的Flutter容器，并且在其中装载对应的Widget页面。</p>\r\n<p>当Native容器展示到屏幕上时，容器发消息给Flutter Coordinator通知要展示页面的id.</p>\r\n<p>Flutter Container Manager找到对应id的Flutter Container并将其设置为前台可见容器。</p>\r\n<p>这就是一个新页面创建的主要逻辑，销毁和进入后台等操作也类似有Native容器事件去进行驱动。</p>\r\n<p>总结</p>\r\n<p>目前FlutterBoost已经在生产环境支撑着在闲鱼客户端中所有的基于Flutter开发业务，为更加负复杂的混合场景提供了支持，稳定为亿级用户提供服务。</p>\r\n<p>我们在项目启动之初就希望FlutterBoost能够解决Native App混合模式接入Flutter这个通用问题。所以我们把它做成了一个可复用的Flutter插件，希望吸引更多感兴趣的朋友参与到Flutter社区的建设。在有限篇幅中，我们分享了闲鱼在Flutter混合技术方案中积累的经验和代码。欢迎兴趣的同学能够积极与我们一起交流学习。</p>\r\n<p>扩展补充</p>\r\n<p>1<br>性能相关<br>在两个Flutter页面进行切换的时候，因为我们只有一个Flutter View所以需要对上一个页面进行截图保存，如果Flutter页面多截图会占用大量内存。这里我们采用文件内存二级缓存策略，在内存中最多只保存2-3个截图，其余的写入文件按需加载。这样我们可以在保证用户体验的同时在内存方面也保持一个较为稳定的水平。</p>\r\n<p>页面渲染性能方面，Flutter的AOT优势展露无遗。在页面快速切换的时候，Flutter能够很灵敏的相应页面的切换，在逻辑上创造出一种Flutter多个页面的感觉。</p>\r\n<p>2<br>Release1.0的支持<br>项目开始的时候我们基于闲鱼目前使用的Flutter版本进行开发，而后进行了Release 1.0兼容升级测试目前没有发现问题。</p>\r\n<p>3<br>接入</p>\r\n<p>只要是集成了Flutter的项目都可以用官方依赖的方式非常方便的以插件形式引入FlutterBoost，只需要对工程进行少量代码接入即可完成接入。<br>详细接入文档，请参阅GitHub主页官方项目文档。<br>4<br>现已开源<br>目前，新一代混合栈已经在闲鱼全面应用。我们非常乐意将沉淀的技术回馈给社区。欢迎大家一起贡献，一起交流，携手共建Flutter社区。</p>\r\n<p>项目开源地址：<a href=\"https://github.com/alibaba/flutter_boost\">https://github.com/alibaba/flutter_boost</a></p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (12, 10, 'git', '汪苗', 'http://oss.wangmiaozero.cn/wechat/3.png', 'http://oss.wangmiaozero.cn/wechat/3.png', 'web前端', 1018, '2018-05-07 19:26:11', '\r\n### 第1篇 果壳中的 Git\r\n\r\n- **第1章** [什么是 Git](https://github.com/geeeeeeeeek/git-recipes/wiki/1.1-%E6%9E%9C%E5%A3%B3%E4%B8%AD%E7%9A%84-Git)\r\n\r\n### 第2篇 从零搭建本地代码仓库\r\n\r\n本篇完全面向入门者。我假设你从零开始创建一个项目并且想用 Git 来进行版本控制，我们会讨论如何在你的个人项目中使用 Git，比如如何初始化你的项目，如何管理新的或者已有的文件，如何在远端仓库中储存你的代码。\r\n\r\n- **第1章** [快速指南](https://github.com/geeeeeeeeek/git-recipes/wiki/2.1-%E5%BF%AB%E9%80%9F%E6%8C%87%E5%8D%97)\r\n- **第2章** [创建代码仓库](https://github.com/geeeeeeeeek/git-recipes/wiki/2.2-%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93)\r\n- **第3章** [保存你的更改](https://github.com/geeeeeeeeek/git-recipes/wiki/2.3-%E4%BF%9D%E5%AD%98%E4%BD%A0%E7%9A%84%E6%9B%B4%E6%94%B9)\r\n- **第4章** [检查仓库状态](https://github.com/geeeeeeeeek/git-recipes/wiki/2.4-%E6%A3%80%E6%9F%A5%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81)\r\n- **第5章** [检出之前的提交](https://github.com/geeeeeeeeek/git-recipes/wiki/2.5-%E6%A3%80%E5%87%BA%E4%B9%8B%E5%89%8D%E7%9A%84%E6%8F%90%E4%BA%A4)\r\n- **第6章** [回滚错误的修改](https://github.com/geeeeeeeeek/git-recipes/wiki/2.6-%E5%9B%9E%E6%BB%9A%E9%94%99%E8%AF%AF%E7%9A%84%E4%BF%AE%E6%94%B9)\r\n- **第7章** [重写项目历史](https://github.com/geeeeeeeeek/git-recipes/wiki/2.7-%E9%87%8D%E5%86%99%E9%A1%B9%E7%9B%AE%E5%8E%86%E5%8F%B2)\r\n\r\n### 第3篇 远程团队协作和管理\r\n\r\n- **第1章** 快速指南\r\n- **第2章** [保持同步](https://github.com/geeeeeeeeek/git-recipes/wiki/3.2-%E4%BF%9D%E6%8C%81%E5%90%8C%E6%AD%A5)\r\n- **第3章** [创建 Pull Request](https://github.com/geeeeeeeeek/git-recipes/wiki/3.3-%E5%88%9B%E5%BB%BA-Pull-Request)\r\n- **第4章** [使用分支](https://github.com/geeeeeeeeek/git-recipes/wiki/3.4-%E4%BD%BF%E7%94%A8%E5%88%86%E6%94%AF)\r\n- **第5章** [常见工作流比较](https://github.com/geeeeeeeeek/git-recipes/wiki/3.5-%E5%B8%B8%E8%A7%81%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%AF%94%E8%BE%83)\r\n\r\n### 第4篇 Git 命令详解\r\n\r\n- **第1章** [图解 Git 命令](https://github.com/geeeeeeeeek/git-recipes/wiki/4.1-%E5%9B%BE%E8%A7%A3-Git-%E5%91%BD%E4%BB%A4)\r\n\r\n  如果你稍微理解 Git 的工作原理，这篇文章能够让你理解的更透彻。\r\n\r\n### 第5篇 Git 实用贴士\r\n\r\n- **第1章** [代码合并：Merge、Rebase 的选择](https://github.com/geeeeeeeeek/git-recipes/wiki/5.1-%E4%BB%A3%E7%A0%81%E5%90%88%E5%B9%B6%EF%BC%9AMerge%E3%80%81Rebase-%E7%9A%84%E9%80%89%E6%8B%A9)\r\n\r\n  `git rebase` 和 `git merge` 都是用来合并分支，只不过方式不太相同。`git rebase` 经常被人认为是一种 Git 巫术，初学者应该避而远之。但如果使用得当，它能省去太多烦恼。在这篇文章中，我们会通过比较找到 Git 工作流中所有可以使用 rebase 的机会。\r\n\r\n- **第2章** [代码回滚：Reset、Checkout、Revert 的选择](https://github.com/geeeeeeeeek/git-recipes/wiki/5.2-%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A%EF%BC%9AReset%E3%80%81Checkout%E3%80%81Revert-%E7%9A%84%E9%80%89%E6%8B%A9)\r\n\r\n  git reset、git checkout 和 git revert 都是用来撤销代码仓库中的某些更改，所以我们经常弄混。在这篇文章中，我们比较最常见的用法，分析在什么场景下该用哪个命令。\r\n\r\n- **第3章** [Git log 高级用法](https://github.com/geeeeeeeeek/git-recipes/wiki/5.3-Git-log-%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95)\r\n\r\n  任何一个版本控制系统设计的目的都是为了记录你代码的变化——谁贡献了什么，找出 bug 是什么时候引入的，以及撤回一些有问题的更改。`git log` 可以格式化 commit 输出的形式，或过滤输出的 commit 从而找到项目中你需要的任何信息。\r\n\r\n- **第4章** [Git 钩子：自定义你的工作流](https://github.com/geeeeeeeeek/git-recipes/wiki/5.4-Git-%E9%92%A9%E5%AD%90%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81)\r\n\r\n  Git 钩子是在 Git 仓库中特定事件发生时自动运行的脚本。它可以让你自定义 Git 内部的行为，在开始周期中的关键点触发自定义的行为，自动化或者优化你开发工作流中任意部分。\r\n\r\n- **第5章** [Git 提交引用和引用日志](https://github.com/geeeeeeeeek/git-recipes/wiki/5.5-Git-%E6%8F%90%E4%BA%A4%E5%BC%95%E7%94%A8%E5%92%8C%E5%BC%95%E7%94%A8%E6%97%A5%E5%BF%97)\r\n\r\n  提交是 Git 的精髓所在，你无时不刻不在创建和缓存提交、查看以前的提交，或者用各种 Git 命令在仓库间转移你的提交。在这章中，我们研究提交的各种引用方式，以及涉及到的 Git 命令的工作原理。我们还会学到如何使用 Git 的引用日志查看看似已经删除的提交。', '<h3 id=\"h3--1-git\"><a name=\"第1篇 果壳中的 Git\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第1篇 果壳中的 Git</h3><ul>\r\n<li><strong>第1章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/1.1-%E6%9E%9C%E5%A3%B3%E4%B8%AD%E7%9A%84-Git\">什么是 Git</a></li></ul>\r\n<h3 id=\"h3--2-\"><a name=\"第2篇 从零搭建本地代码仓库\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第2篇 从零搭建本地代码仓库</h3><p>本篇完全面向入门者。我假设你从零开始创建一个项目并且想用 Git 来进行版本控制，我们会讨论如何在你的个人项目中使用 Git，比如如何初始化你的项目，如何管理新的或者已有的文件，如何在远端仓库中储存你的代码。</p>\r\n<ul>\r\n<li><strong>第1章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.1-%E5%BF%AB%E9%80%9F%E6%8C%87%E5%8D%97\">快速指南</a></li><li><strong>第2章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.2-%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\">创建代码仓库</a></li><li><strong>第3章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.3-%E4%BF%9D%E5%AD%98%E4%BD%A0%E7%9A%84%E6%9B%B4%E6%94%B9\">保存你的更改</a></li><li><strong>第4章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.4-%E6%A3%80%E6%9F%A5%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81\">检查仓库状态</a></li><li><strong>第5章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.5-%E6%A3%80%E5%87%BA%E4%B9%8B%E5%89%8D%E7%9A%84%E6%8F%90%E4%BA%A4\">检出之前的提交</a></li><li><strong>第6章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.6-%E5%9B%9E%E6%BB%9A%E9%94%99%E8%AF%AF%E7%9A%84%E4%BF%AE%E6%94%B9\">回滚错误的修改</a></li><li><strong>第7章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/2.7-%E9%87%8D%E5%86%99%E9%A1%B9%E7%9B%AE%E5%8E%86%E5%8F%B2\">重写项目历史</a></li></ul>\r\n<h3 id=\"h3--3-\"><a name=\"第3篇 远程团队协作和管理\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第3篇 远程团队协作和管理</h3><ul>\r\n<li><strong>第1章</strong> 快速指南</li><li><strong>第2章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/3.2-%E4%BF%9D%E6%8C%81%E5%90%8C%E6%AD%A5\">保持同步</a></li><li><strong>第3章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/3.3-%E5%88%9B%E5%BB%BA-Pull-Request\">创建 Pull Request</a></li><li><strong>第4章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/3.4-%E4%BD%BF%E7%94%A8%E5%88%86%E6%94%AF\">使用分支</a></li><li><strong>第5章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/3.5-%E5%B8%B8%E8%A7%81%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%AF%94%E8%BE%83\">常见工作流比较</a></li></ul>\r\n<h3 id=\"h3--4-git-\"><a name=\"第4篇 Git 命令详解\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第4篇 Git 命令详解</h3><ul>\r\n<li><p><strong>第1章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/4.1-%E5%9B%BE%E8%A7%A3-Git-%E5%91%BD%E4%BB%A4\">图解 Git 命令</a></p>\r\n<p>如果你稍微理解 Git 的工作原理，这篇文章能够让你理解的更透彻。</p>\r\n</li></ul>\r\n<h3 id=\"h3--5-git-\"><a name=\"第5篇 Git 实用贴士\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第5篇 Git 实用贴士</h3><ul>\r\n<li><p><strong>第1章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/5.1-%E4%BB%A3%E7%A0%81%E5%90%88%E5%B9%B6%EF%BC%9AMerge%E3%80%81Rebase-%E7%9A%84%E9%80%89%E6%8B%A9\">代码合并：Merge、Rebase 的选择</a></p>\r\n<p><code>git rebase</code> 和 <code>git merge</code> 都是用来合并分支，只不过方式不太相同。<code>git rebase</code> 经常被人认为是一种 Git 巫术，初学者应该避而远之。但如果使用得当，它能省去太多烦恼。在这篇文章中，我们会通过比较找到 Git 工作流中所有可以使用 rebase 的机会。</p>\r\n</li><li><p><strong>第2章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/5.2-%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A%EF%BC%9AReset%E3%80%81Checkout%E3%80%81Revert-%E7%9A%84%E9%80%89%E6%8B%A9\">代码回滚：Reset、Checkout、Revert 的选择</a></p>\r\n<p>git reset、git checkout 和 git revert 都是用来撤销代码仓库中的某些更改，所以我们经常弄混。在这篇文章中，我们比较最常见的用法，分析在什么场景下该用哪个命令。</p>\r\n</li><li><p><strong>第3章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/5.3-Git-log-%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95\">Git log 高级用法</a></p>\r\n<p>任何一个版本控制系统设计的目的都是为了记录你代码的变化——谁贡献了什么，找出 bug 是什么时候引入的，以及撤回一些有问题的更改。<code>git log</code> 可以格式化 commit 输出的形式，或过滤输出的 commit 从而找到项目中你需要的任何信息。</p>\r\n</li><li><p><strong>第4章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/5.4-Git-%E9%92%A9%E5%AD%90%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81\">Git 钩子：自定义你的工作流</a></p>\r\n<p>Git 钩子是在 Git 仓库中特定事件发生时自动运行的脚本。它可以让你自定义 Git 内部的行为，在开始周期中的关键点触发自定义的行为，自动化或者优化你开发工作流中任意部分。</p>\r\n</li><li><p><strong>第5章</strong> <a href=\"https://github.com/geeeeeeeeek/git-recipes/wiki/5.5-Git-%E6%8F%90%E4%BA%A4%E5%BC%95%E7%94%A8%E5%92%8C%E5%BC%95%E7%94%A8%E6%97%A5%E5%BF%97\">Git 提交引用和引用日志</a></p>\r\n<p>提交是 Git 的精髓所在，你无时不刻不在创建和缓存提交、查看以前的提交，或者用各种 Git 命令在仓库间转移你的提交。在这章中，我们研究提交的各种引用方式，以及涉及到的 Git 命令的工作原理。我们还会学到如何使用 Git 的引用日志查看看似已经删除的提交。</p>\r\n</li></ul>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (13, 1, '小程序promise请求封装', '汪苗', 'http://oss.wangmiaozero.cn/wechat/2.jpg', 'http://oss.wangmiaozero.cn/wechat/2.jpg', 'web前端', 1031, '2018-05-08 19:30:01', '```\r\nconst API_URL = \"请求域名\";\r\n\r\nfunction Get(url, params) {\r\n\r\n  let promise = new Promise(function (resolve, reject) {\r\n\r\n    wx.request({\r\n\r\n      url: API_URL + url,\r\n\r\n      data: params,\r\n\r\n      method: \'GET\',\r\n\r\n      header: {\r\n        \'Content-Type\': \'application/json\'\r\n      },\r\n\r\n      success: res => {\r\n\r\n        resolve(res.data);\r\n\r\n      },\r\n\r\n      fail: res => {\r\n\r\n        reject(res.data)\r\n\r\n      }\r\n\r\n    })\r\n\r\n  });\r\n\r\n  return promise\r\n\r\n}\r\n\r\nfunction Post(url, params) {\r\n\r\n  let promise = new Promise(function (resolve, reject) {\r\n\r\n    wx.request({\r\n\r\n      url: API_URL + url,\r\n\r\n      data: params,\r\n\r\n      method: \'POST\',\r\n\r\n      header: {\r\n        \'content-Type\': \'application/x-www-form-urlencoded\'\r\n      },\r\n\r\n      success: res => {\r\n\r\n        resolve(res.data);\r\n\r\n      },\r\n\r\n      fail: res => {\r\n\r\n        reject(res.data)\r\n\r\n      }\r\n\r\n    })\r\n\r\n  });\r\n\r\n  return promise\r\n\r\n}\r\n\r\nfunction JsonPost(url, params) {\r\n\r\n  let promise = new Promise(function (resolve, reject) {\r\n\r\n    wx.request({\r\n\r\n      url: API_URL + url,\r\n\r\n      data: JSON.stringify(params),\r\n\r\n      method: \'POST\',\r\n\r\n      header: {\r\n        \'Content-Type\': \'application/json\'\r\n      },\r\n\r\n      success: res => {\r\n\r\n        resolve(res.data);\r\n\r\n      },\r\n\r\n      fail: res => {\r\n\r\n        reject(res.data);\r\n\r\n      }\r\n\r\n    })\r\n\r\n  });\r\n\r\n  return promise\r\n\r\n}\r\n\r\nmodule.exports = {\r\n\r\n  Get,\r\n\r\n  Post,\r\n\r\n  JsonPost\r\n\r\n}\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"kwd\">const</span><span class=\"pln\"> API_URL </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"请求域名\"</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"typ\">Get</span><span class=\"pun\">(</span><span class=\"pln\">url</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"kwd\">let</span><span class=\"pln\"> promise </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">resolve</span><span class=\"pun\">,</span><span class=\"pln\"> reject</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">({</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> API_URL </span><span class=\"pun\">+</span><span class=\"pln\"> url</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">      data</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">      method</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'GET\'</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      header</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"str\">\'Content-Type\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'application/json\'</span></code></li><li class=\"L6\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">      success</span><span class=\"pun\">:</span><span class=\"pln\"> res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        resolve</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      fail</span><span class=\"pun\">:</span><span class=\"pln\"> res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        reject</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">)</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> promise</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pun\">}</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"typ\">Post</span><span class=\"pun\">(</span><span class=\"pln\">url</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"kwd\">let</span><span class=\"pln\"> promise </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">resolve</span><span class=\"pun\">,</span><span class=\"pln\"> reject</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">({</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> API_URL </span><span class=\"pun\">+</span><span class=\"pln\"> url</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">      data</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">      method</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'POST\'</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">      header</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"str\">\'content-Type\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'application/x-www-form-urlencoded\'</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      success</span><span class=\"pun\">:</span><span class=\"pln\"> res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        resolve</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">      fail</span><span class=\"pun\">:</span><span class=\"pln\"> res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">        reject</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">});</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> promise</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pun\">}</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"typ\">JsonPost</span><span class=\"pun\">(</span><span class=\"pln\">url</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"kwd\">let</span><span class=\"pln\"> promise </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">resolve</span><span class=\"pun\">,</span><span class=\"pln\"> reject</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    wx</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">({</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">      url</span><span class=\"pun\">:</span><span class=\"pln\"> API_URL </span><span class=\"pun\">+</span><span class=\"pln\"> url</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">      data</span><span class=\"pun\">:</span><span class=\"pln\"> JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"kwd\">params</span><span class=\"pun\">),</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      method</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'POST\'</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">      header</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"str\">\'Content-Type\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'application/json\'</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">      success</span><span class=\"pun\">:</span><span class=\"pln\"> res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">        resolve</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">      fail</span><span class=\"pun\">:</span><span class=\"pln\"> res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">        reject</span><span class=\"pun\">(</span><span class=\"pln\">res</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">      </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">})</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">});</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> promise</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pun\">}</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"kwd\">module</span><span class=\"pun\">.</span><span class=\"pln\">exports </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"typ\">Get</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"typ\">Post</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"typ\">JsonPost</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pun\">}</span></code></li></ol></pre>', 1, '17615848207');
INSERT INTO `articles` VALUES (14, 5, '自己的vscode-settings.json配置', '汪苗', 'http://oss.wangmiaozero.cn/wechat/bachongying.jpg', 'http://oss.wangmiaozero.cn/wechat/bachongying.jpg', 'web前端', 1037, '2018-05-09 19:42:31', '```\r\n{\r\n  // 是否允许自定义的snippet片段提示\r\n  \"editor.snippetSuggestions\": \"top\",\r\n  // vscode默认启用了根据文件类型自动设置tabsize的选项\r\n  \"editor.detectIndentation\": false,\r\n  // 重新设定tabsize\r\n  \"editor.tabSize\": 2,\r\n  // #每次保存的时候自动格式化 \r\n  \"editor.formatOnSave\": true,\r\n  // #每次保存的时候将代码按eslint格式进行修复\r\n  \"eslint.autoFixOnSave\": true,\r\n  \"editor.fontWeight\": \"400\",\r\n  \"editor.formatOnType\": false,\r\n  \"workbench.iconTheme\": \"material-icon-theme\",\r\n  \"git.confirmSync\": false,\r\n  \"team.showWelcomeMessage\": false,\r\n  \"window.zoomLevel\": 0,\r\n  \"editor.renderWhitespace\": \"boundary\",\r\n  \"editor.cursorBlinking\": \"smooth\",\r\n  \"editor.minimap.enabled\": true,\r\n  \"editor.minimap.renderCharacters\": false,\r\n  \"window.title\": \"${dirty}${activeEditorMedium}${separator}${rootName}\",\r\n  \"editor.codeLens\": true,\r\n  //eslint 代码自动检查相关配置\r\n  \"eslint.enable\": true,\r\n  \"eslint.run\": \"onType\",\r\n  \"eslint.options\": {\r\n    \"extensions\": [\r\n      \".js\",\r\n      \".vue\"\r\n    ]\r\n  },\r\n  // 添加 vue 支持\r\n  \"eslint.validate\": [\r\n    \"javascriptreact\",\r\n    \"vue\",\r\n    \"javascript\",\r\n    {\r\n      \"language\": \"vue\",\r\n      \"autoFix\": true\r\n    },\r\n    \"html\",\r\n    {\r\n      \"language\": \"html\",\r\n      \"autoFix\": true\r\n    }\r\n  ],\r\n  //  #让prettier使用eslint的代码格式进行校验 \r\n  \"prettier.eslintIntegration\": true,\r\n  //  #去掉代码结尾的分号 \r\n  \"prettier.semi\": false,\r\n  //  #使用带引号替代双引号 \r\n  \"prettier.singleQuote\": true,\r\n  //  #让函数(名)和后面的括号之间加个空格\r\n  \"javascript.format.insertSpaceBeforeFunctionParenthesis\": true,\r\n  // #这个按用户自身习惯选择 \r\n  \"vetur.format.defaultFormatter.html\": \"js-beautify-html\",\r\n  // #让vue中的js按编辑器自带的ts格式进行格式化 \r\n  \"vetur.format.defaultFormatter.js\": \"vscode-typescript\",\r\n  \"explorer.confirmDelete\": false,\r\n  \"vetur.format.defaultFormatterOptions\": {\r\n    \"js-beautify-html\": {\r\n      \"wrap_attributes\": \"force-aligned\"\r\n      // #vue组件中html代码格式化样式\r\n    }\r\n  },\r\n  // 格式化stylus, 需安装Manta\'s Stylus Supremacy插件\r\n  \"stylusSupremacy.insertColons\": false, // 是否插入冒号\r\n  \"stylusSupremacy.insertSemicolons\": false, // 是否插入分好\r\n  \"stylusSupremacy.insertBraces\": false, // 是否插入大括号\r\n  \"stylusSupremacy.insertNewLineAroundImports\": false, // import之后是否换行\r\n  \"stylusSupremacy.insertNewLineAroundBlocks\": false, // 两个选择器中是否换行\r\n  \"files.associations\": {\r\n    \"*.cjson\": \"jsonc\",\r\n    \"*.wxss\": \"css\",\r\n    \"*.wxs\": \"javascript\"\r\n  },\r\n  \"emmet.includeLanguages\": {\r\n    \"wxml\": \"html\"\r\n  },\r\n  \"minapp-vscode.disableAutoConfig\": true,\r\n  \"window.menuBarVisibility\": \"visible\",\r\n  \"git.enableSmartCommit\": true,\r\n  \"git.autofetch\": true,\r\n  \"liveServer.settings.donotShowInfoMsg\": true,\r\n  \"[html]\": {\r\n    \"editor.defaultFormatter\": \"vscode.html-language-features\"\r\n  },\r\n  \"javascript.updateImportsOnFileMove.enabled\": \"always\",\r\n  \"workbench.colorTheme\": \"SynthWave \'84\",\r\n  \"editor.fontSize\": 18,\r\n  \"search.followSymlinks\": false,\r\n  \"workbench.sideBar.location\": \"right\",\r\n  \"vscode_custom_css.policy\": true,\r\n  \"vscode_custom_css.imports\": [\r\n    \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/synthwave84.css\",\r\n    \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/toolbar.css\",\r\n    \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/vscode-vibrancy-style.css\",\r\n    \"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/enable-electron-vibrancy.js\",\r\n  ],\r\n  // 高亮的颜色，emm暂时只支持这样写\r\n  \"wxmlConfig.activeColor\": {\r\n    \"color\": \"#e5c07b\"\r\n  },\r\n\r\n  // 是否禁用高亮组件\r\n  \"wxmlConfig.activeDisable\": false,\r\n  // 是否开启保存自动格式化\r\n  \"wxmlConfig.onSaveFormat\": false,\r\n\r\n  \"wxmlConfig.format\": {\r\n    \"brace_style\": \"collapse\",\r\n    \"end_with_newline\": false,\r\n    \"indent_char\": \"\",\r\n    \"indent_handlebars\": false,\r\n    \"indent_inner_html\": false,\r\n    \"indent_scripts\": \"keep\",\r\n    \"indent_size\": 2,\r\n    \"indent_with_tabs\": true,\r\n    \"max_preserve_newlines\": 1,\r\n    \"preserve_newlines\": true,\r\n    \"wrap_attributes\": \"force-expand-multiline\"\r\n  },\r\n\r\n  // 高亮所忽略的组件数组\r\n  \"wxmlConfig.tagNoActiveArr\": [\r\n    \"view\",\r\n    \"button\",\r\n    \"text\",\r\n    \"icon\",\r\n    \"image\",\r\n    \"navigator\",\r\n    \"block\",\r\n    \"input\",\r\n    \"template\",\r\n    \"form\",\r\n    \"camera\",\r\n    \"textarea\"\r\n  ],\r\n  \"zenMode.restore\": true,\r\n  \"breadcrumbs.enabled\": true,\r\n  \"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\",\r\n  \"[wxml]\": {\r\n    \"editor.defaultFormatter\": \"qiu8310.minapp-vscode\"\r\n  },\r\n  \"gitlens.advanced.messages\": {\r\n    \"suppressLineUncommittedWarning\": true\r\n  },\r\n  \"javascript.format.placeOpenBraceOnNewLineForControlBlocks\": true,\r\n  \"editor.formatOnPaste\": true\r\n}\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"com\">// 是否允许自定义的snippet片段提示</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.snippetSuggestions\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"top\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"com\">// vscode默认启用了根据文件类型自动设置tabsize的选项</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.detectIndentation\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"com\">// 重新设定tabsize</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.tabSize\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">// #每次保存的时候自动格式化 </span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.formatOnSave\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"com\">// #每次保存的时候将代码按eslint格式进行修复</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"eslint.autoFixOnSave\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.fontWeight\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"400\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.formatOnType\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"str\">\"workbench.iconTheme\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"material-icon-theme\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"str\">\"git.confirmSync\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"str\">\"team.showWelcomeMessage\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"str\">\"window.zoomLevel\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.renderWhitespace\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"boundary\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.cursorBlinking\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"smooth\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.minimap.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.minimap.renderCharacters\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"window.title\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"${dirty}${activeEditorMedium}${separator}${rootName}\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.codeLens\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"com\">//eslint 代码自动检查相关配置</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"str\">\"eslint.enable\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"str\">\"eslint.run\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"onType\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"str\">\"eslint.options\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"extensions\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"str\">\".js\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\".vue\"</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">]</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"com\">// 添加 vue 支持</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"str\">\"eslint.validate\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"javascriptreact\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"javascript\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vue\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">      </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"str\">\"language\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"str\">\"autoFix\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"pun\">],</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">//  #让prettier使用eslint的代码格式进行校验 </span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"prettier.eslintIntegration\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"com\">//  #去掉代码结尾的分号 </span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"prettier.semi\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"com\">//  #使用带引号替代双引号 </span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"prettier.singleQuote\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"com\">//  #让函数(名)和后面的括号之间加个空格</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"str\">\"javascript.format.insertSpaceBeforeFunctionParenthesis\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"com\">// #这个按用户自身习惯选择 </span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"str\">\"vetur.format.defaultFormatter.html\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"js-beautify-html\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">// #让vue中的js按编辑器自带的ts格式进行格式化 </span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"vetur.format.defaultFormatter.js\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vscode-typescript\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"str\">\"explorer.confirmDelete\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"vetur.format.defaultFormatterOptions\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"js-beautify-html\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"str\">\"wrap_attributes\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"force-aligned\"</span></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"com\">// #vue组件中html代码格式化样式</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"com\">// 格式化stylus, 需安装Manta\'s Stylus Supremacy插件</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"str\">\"stylusSupremacy.insertColons\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// 是否插入冒号</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"stylusSupremacy.insertSemicolons\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// 是否插入分好</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"str\">\"stylusSupremacy.insertBraces\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// 是否插入大括号</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"stylusSupremacy.insertNewLineAroundImports\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// import之后是否换行</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"stylusSupremacy.insertNewLineAroundBlocks\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"com\">// 两个选择器中是否换行</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"files.associations\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"*.cjson\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"jsonc\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"*.wxss\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"css\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"*.wxs\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"javascript\"</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"str\">\"emmet.includeLanguages\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"wxml\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"html\"</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"minapp-vscode.disableAutoConfig\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"window.menuBarVisibility\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"visible\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"git.enableSmartCommit\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"str\">\"git.autofetch\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"str\">\"liveServer.settings.donotShowInfoMsg\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"str\">\"[html]\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.defaultFormatter\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"vscode.html-language-features\"</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"javascript.updateImportsOnFileMove.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"always\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"str\">\"workbench.colorTheme\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"SynthWave \'84\"</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.fontSize\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">18</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"search.followSymlinks\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"workbench.sideBar.location\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"right\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"str\">\"vscode_custom_css.policy\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"str\">\"vscode_custom_css.imports\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/synthwave84.css\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/toolbar.css\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/vscode-vibrancy-style.css\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"file:///C:/Users/wongseedling/Desktop/vscode-transparent-glow/enable-electron-vibrancy.js\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"pun\">],</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"com\">// 高亮的颜色，emm暂时只支持这样写</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"wxmlConfig.activeColor\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"color\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"#e5c07b\"</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"com\">// 是否禁用高亮组件</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"str\">\"wxmlConfig.activeDisable\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">// 是否开启保存自动格式化</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"wxmlConfig.onSaveFormat\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"wxmlConfig.format\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"brace_style\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"collapse\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"end_with_newline\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"indent_char\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"indent_handlebars\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"indent_inner_html\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"indent_scripts\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"keep\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"indent_size\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"indent_with_tabs\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"max_preserve_newlines\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\"preserve_newlines\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"wrap_attributes\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"force-expand-multiline\"</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"com\">// 高亮所忽略的组件数组</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"str\">\"wxmlConfig.tagNoActiveArr\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"view\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"button\"</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"str\">\"text\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"str\">\"icon\"</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"str\">\"image\"</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\"navigator\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\"block\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"input\"</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\"template\"</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\"form\"</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"camera\"</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\"textarea\"</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"pun\">],</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"str\">\"zenMode.restore\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">  </span><span class=\"str\">\"breadcrumbs.enabled\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"str\">\"terminal.integrated.shell.windows\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\"</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"str\">\"[wxml]\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\"editor.defaultFormatter\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"qiu8310.minapp-vscode\"</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"str\">\"gitlens.advanced.messages\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\"suppressLineUncommittedWarning\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code><span class=\"pln\">  </span><span class=\"str\">\"javascript.format.placeOpenBraceOnNewLineForControlBlocks\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code><span class=\"pln\">  </span><span class=\"str\">\"editor.formatOnPaste\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span></code></li><li class=\"L0\"><code><span class=\"pun\">}</span></code></li></ol></pre>', 1, '17615848207');
INSERT INTO `articles` VALUES (15, 11, 'JavaScriptES2019学习', '汪苗', 'http://oss.wangmiaozero.cn/wechat/1.jpg', 'http://oss.wangmiaozero.cn/wechat/1.jpg', 'web前端', 1002, '2018-06-26 19:10:45', '```\r\n// Array.flat () 该方法不修改原始数组，而是创建一个新的数组,可以改变递归数组嵌套深度\r\nconst arr1 = [1, 2, [3, 4]];\r\narr1.flat(); //[1, 2, 3, 4]   // 浏览器支持 node 不支持\r\nconst arr2 = [1, 2, [3, 4, [5, 6]]];\r\narr2.flat(2); // [1, 2, 3, 4, 5, 6]\r\nconst arr3 = [1, 2, [3, 4, [5, 6, [7, 8]]]]; //多个可以用无限大\r\narr3.flat(Infinity); // [1, 2, 3, 4, 5, 6, 7, 8]\r\n// 可以用来处理多个`,`\r\nconst arr4 = [1, 2, , 4, 5];\r\narr4.flat(); // [1, 2, 4, 5]\r\n\r\n// 一个新的方法，结合了基本的map函数，然后使用新的Array.flat()方法\r\n\r\n//Array.flatMap()\r\n\r\nconst arr1 = [1,2,3];\r\narr1.map(i => [i * 4]) // [[4],[8],[12]]  由此可见map 可以的到这样的数组\r\narr1.flatMap(x => [x * 4]); // [4, 8, 12] 而flatMap 可以数组中的值相乘不增加嵌套\r\n\r\n// String.trimStart() and String.trimEnd() 相信很多人用过 来进行正则处理空格\r\n// 没有想到还可以选择处理空格 哈哈哈啊哈\r\nconst test = \" hello \";\r\n\r\ntest.trim(); // \"hello\";\r\ntest.trimStart(); // \"hello \";\r\ntest.trimEnd(); // \" hello\";\r\n\r\n//Object.fromEntries 把对象变为二维数组\r\nconst obj = { prop1: 2, prop2: 10, prop3: 15 };                                   \r\nlet array = Object.entries(obj); // [[\"prop1\", 2], [\"prop2\", 10], [\"prop3\", 15]]\r\narray = array.map(([key, value]) => [key, Math.pow(value, 2)]); // [[\"prop1\", 4], [\"prop2\", 100], [\"prop3\", 225]]\r\n\r\n// Function.toString()\r\n\r\nfunction /* foo comment */ foo() {}\r\n\r\nfoo.toString(); // \"function foo() {}\" JSON.parse() 给他转换回来\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">// Array.flat () 该方法不修改原始数组，而是创建一个新的数组,可以改变递归数组嵌套深度</span></code></li><li class=\"L1\"><code><span class=\"kwd\">const</span><span class=\"pln\"> arr1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">]];</span></code></li><li class=\"L2\"><code><span class=\"pln\">arr1</span><span class=\"pun\">.</span><span class=\"pln\">flat</span><span class=\"pun\">();</span><span class=\"pln\"> </span><span class=\"com\">//[1, 2, 3, 4]   // 浏览器支持 node 不支持</span></code></li><li class=\"L3\"><code><span class=\"kwd\">const</span><span class=\"pln\"> arr2 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">6</span><span class=\"pun\">]]];</span></code></li><li class=\"L4\"><code><span class=\"pln\">arr2</span><span class=\"pun\">.</span><span class=\"pln\">flat</span><span class=\"pun\">(</span><span class=\"lit\">2</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// [1, 2, 3, 4, 5, 6]</span></code></li><li class=\"L5\"><code><span class=\"kwd\">const</span><span class=\"pln\"> arr3 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">6</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">8</span><span class=\"pun\">]]]];</span><span class=\"pln\"> </span><span class=\"com\">//多个可以用无限大</span></code></li><li class=\"L6\"><code><span class=\"pln\">arr3</span><span class=\"pun\">.</span><span class=\"pln\">flat</span><span class=\"pun\">(</span><span class=\"kwd\">Infinity</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// [1, 2, 3, 4, 5, 6, 7, 8]</span></code></li><li class=\"L7\"><code><span class=\"com\">// 可以用来处理多个`,`</span></code></li><li class=\"L8\"><code><span class=\"kwd\">const</span><span class=\"pln\"> arr4 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">];</span></code></li><li class=\"L9\"><code><span class=\"pln\">arr4</span><span class=\"pun\">.</span><span class=\"pln\">flat</span><span class=\"pun\">();</span><span class=\"pln\"> </span><span class=\"com\">// [1, 2, 4, 5]</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"com\">// 一个新的方法，结合了基本的map函数，然后使用新的Array.flat()方法</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"com\">//Array.flatMap()</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"kwd\">const</span><span class=\"pln\"> arr1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">];</span></code></li><li class=\"L6\"><code><span class=\"pln\">arr1</span><span class=\"pun\">.</span><span class=\"pln\">map</span><span class=\"pun\">(</span><span class=\"pln\">i </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">i </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">])</span><span class=\"pln\"> </span><span class=\"com\">// [[4],[8],[12]]  由此可见map 可以的到这样的数组</span></code></li><li class=\"L7\"><code><span class=\"pln\">arr1</span><span class=\"pun\">.</span><span class=\"pln\">flatMap</span><span class=\"pun\">(</span><span class=\"pln\">x </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">x </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">]);</span><span class=\"pln\"> </span><span class=\"com\">// [4, 8, 12] 而flatMap 可以数组中的值相乘不增加嵌套</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"com\">// String.trimStart() and String.trimEnd() 相信很多人用过 来进行正则处理空格</span></code></li><li class=\"L0\"><code><span class=\"com\">// 没有想到还可以选择处理空格 哈哈哈啊哈</span></code></li><li class=\"L1\"><code><span class=\"kwd\">const</span><span class=\"pln\"> test </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\" hello \"</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">test</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">();</span><span class=\"pln\"> </span><span class=\"com\">// \"hello\";</span></code></li><li class=\"L4\"><code><span class=\"pln\">test</span><span class=\"pun\">.</span><span class=\"pln\">trimStart</span><span class=\"pun\">();</span><span class=\"pln\"> </span><span class=\"com\">// \"hello \";</span></code></li><li class=\"L5\"><code><span class=\"pln\">test</span><span class=\"pun\">.</span><span class=\"pln\">trimEnd</span><span class=\"pun\">();</span><span class=\"pln\"> </span><span class=\"com\">// \" hello\";</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"com\">//Object.fromEntries 把对象变为二维数组</span></code></li><li class=\"L8\"><code><span class=\"kwd\">const</span><span class=\"pln\"> obj </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> prop1</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> prop2</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"pln\"> prop3</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">15</span><span class=\"pln\"> </span><span class=\"pun\">};</span><span class=\"pln\">                                   </span></code></li><li class=\"L9\"><code><span class=\"kwd\">let</span><span class=\"pln\"> array </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">.</span><span class=\"pln\">entries</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// [[\"prop1\", 2], [\"prop2\", 10], [\"prop3\", 15]]</span></code></li><li class=\"L0\"><code><span class=\"pln\">array </span><span class=\"pun\">=</span><span class=\"pln\"> array</span><span class=\"pun\">.</span><span class=\"pln\">map</span><span class=\"pun\">(([</span><span class=\"pln\">key</span><span class=\"pun\">,</span><span class=\"pln\"> value</span><span class=\"pun\">])</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">key</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">pow</span><span class=\"pun\">(</span><span class=\"pln\">value</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">)]);</span><span class=\"pln\"> </span><span class=\"com\">// [[\"prop1\", 4], [\"prop2\", 100], [\"prop3\", 225]]</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"com\">// Function.toString()</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"com\">/* foo comment */</span><span class=\"pln\"> foo</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">foo</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">();</span><span class=\"pln\"> </span><span class=\"com\">// \"function foo() {}\" JSON.parse() 给他转换回来</span></code></li></ol></pre>', 1, '17615848207');
INSERT INTO `articles` VALUES (16, 10, '访问助手', '汪苗', 'http://oss.wangmiaozero.cn/wechat/38.png', 'http://oss.wangmiaozero.cn/wechat/38.png', 'web前端', 1014, '2018-06-25 19:26:11', '下载和安装（针对Chrome浏览器）\r\n谷歌访问助手是由haotian-wang分享在GitHub上的，进入链接https://github.com/haotian-wang/google-access-helper，即可进入谷歌访问助手的下载页面，如下图所示。\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190730090421167.png)\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190730090605820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70)', '<p>下载和安装（针对Chrome浏览器）<br>谷歌访问助手是由haotian-wang分享在GitHub上的，进入链接<a href=\"https://github.com/haotian-wang/google-access-helper，即可进入谷歌访问助手的下载页面，如下图所示。\">https://github.com/haotian-wang/google-access-helper，即可进入谷歌访问助手的下载页面，如下图所示。</a><br><img src=\"https://img-blog.csdnimg.cn/20190730090421167.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20190730090605820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc2NDgxNA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (17, 3, 'vue拦截', '汪苗', 'http://oss.wangmiaozero.cn/wechat/12312312.png', 'http://oss.wangmiaozero.cn/wechat/12312312.png', 'web前端', 1013, '2018-06-24 09:46:13', '```javascript\r\nimport Vue from \'vue\'\r\nimport App from \'./App.vue\'\r\nimport router from \'./router\'\r\nimport store from \'./store\'\r\nimport ElementUI from \'element-ui\';\r\nimport \'element-ui/lib/theme-chalk/index.css\'\r\nVue.use(ElementUI)\r\n//清除默认样式\r\nimport axios from \'axios\'\r\n\r\n//因为Vue的底层原理也是往js原型上挂载方法,所以我们可以把axios挂载在全局\r\nVue.prototype.$http = axios;\r\n// 全局配置baseURL\r\naxios.defaults.baseURL = \'http://www.litc.pro:9999/v1\';\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(function (config) {\r\n  // 在发送请求之前做些什么\r\n  let token = localStorage.getItem(\'token\')||\'\'\r\n  config.headers.Authorization = token\r\n  return config;\r\n}, function (error) {\r\n  // 对请求错误做些什么\r\n  return Promise.reject(error);\r\n});\r\n\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(function (response) {\r\n  // 对响应数据做点什么\r\n  //console.log(response.data)\r\n  response = response.data\r\n  return response;\r\n}, function (error) {\r\n  // 对响应错误做点什么\r\n  Vue.prototype.$message({\r\n    showClonse:true,\r\n    type:\'error\',\r\n    message:error.response.data.errMsg\r\n  })\r\n  return Promise.reject(error);\r\n});\r\n//导航守卫\r\nrouter.beforeEach((to,from,next)=>{\r\nlet token = localStorage.getItem(\'token\') || \'\'\r\n//拦截已登录的状态\r\n//console.log(to.path)\r\n//如果你没有token 并且去的不是signin页面\r\nif(token && to.path === \'/signIn\'){\r\n  return next(\'/home\')\r\n}\r\nif(token || to.path === \'/signIn\'){\r\n  next()\r\n}else{\r\n  //如果没有登录,就跳转回 /\r\n  next(\'/\')\r\n}\r\n})\r\nVue.config.productionTip = false\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount(\'#app\')\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">Vue</span><span class=\"pln\"> from </span><span class=\"str\">\'vue\'</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> from </span><span class=\"str\">\'./App.vue\'</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> router from </span><span class=\"str\">\'./router\'</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> store from </span><span class=\"str\">\'./store\'</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">ElementUI</span><span class=\"pln\"> from </span><span class=\"str\">\'element-ui\'</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"str\">\'element-ui/lib/theme-chalk/index.css\'</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"typ\">Vue</span><span class=\"pun\">.</span><span class=\"pln\">use</span><span class=\"pun\">(</span><span class=\"typ\">ElementUI</span><span class=\"pun\">)</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"com\">//清除默认样式</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"kwd\">import</span><span class=\"pln\"> axios from </span><span class=\"str\">\'axios\'</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"com\">//因为Vue的底层原理也是往js原型上挂载方法,所以我们可以把axios挂载在全局</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"typ\">Vue</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">$http </span><span class=\"pun\">=</span><span class=\"pln\"> axios</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"com\">// 全局配置baseURL</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">axios</span><span class=\"pun\">.</span><span class=\"pln\">defaults</span><span class=\"pun\">.</span><span class=\"pln\">baseURL </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\'http://www.litc.pro:9999/v1\'</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"com\">// 添加请求拦截器</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">axios</span><span class=\"pun\">.</span><span class=\"pln\">interceptors</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">.</span><span class=\"pln\">use</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">config</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"com\">// 在发送请求之前做些什么</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">  let token </span><span class=\"pun\">=</span><span class=\"pln\"> localStorage</span><span class=\"pun\">.</span><span class=\"pln\">getItem</span><span class=\"pun\">(</span><span class=\"str\">\'token\'</span><span class=\"pun\">)||</span><span class=\"str\">\'\'</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">  config</span><span class=\"pun\">.</span><span class=\"pln\">headers</span><span class=\"pun\">.</span><span class=\"typ\">Authorization</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> token</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> config</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"com\">// 对请求错误做些什么</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pun\">.</span><span class=\"pln\">reject</span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pun\">});</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"com\">// 添加响应拦截器</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">axios</span><span class=\"pun\">.</span><span class=\"pln\">interceptors</span><span class=\"pun\">.</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">use</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"com\">// 对响应数据做点什么</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"com\">//console.log(response.data)</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">  response </span><span class=\"pun\">=</span><span class=\"pln\"> response</span><span class=\"pun\">.</span><span class=\"pln\">data</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> response</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"com\">// 对响应错误做点什么</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"typ\">Vue</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">$message</span><span class=\"pun\">({</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">    showClonse</span><span class=\"pun\">:</span><span class=\"kwd\">true</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">    type</span><span class=\"pun\">:</span><span class=\"str\">\'error\'</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">    message</span><span class=\"pun\">:</span><span class=\"pln\">error</span><span class=\"pun\">.</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">errMsg</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"pun\">})</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pun\">.</span><span class=\"pln\">reject</span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pun\">});</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"com\">//导航守卫</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">router</span><span class=\"pun\">.</span><span class=\"pln\">beforeEach</span><span class=\"pun\">((</span><span class=\"pln\">to</span><span class=\"pun\">,</span><span class=\"pln\">from</span><span class=\"pun\">,</span><span class=\"pln\">next</span><span class=\"pun\">)=&gt;{</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">let token </span><span class=\"pun\">=</span><span class=\"pln\"> localStorage</span><span class=\"pun\">.</span><span class=\"pln\">getItem</span><span class=\"pun\">(</span><span class=\"str\">\'token\'</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"str\">\'\'</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"com\">//拦截已登录的状态</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"com\">//console.log(to.path)</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"com\">//如果你没有token 并且去的不是signin页面</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">token </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> to</span><span class=\"pun\">.</span><span class=\"pln\">path </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'/signIn\'</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"kwd\">return</span><span class=\"pln\"> next</span><span class=\"pun\">(</span><span class=\"str\">\'/home\'</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">token </span><span class=\"pun\">||</span><span class=\"pln\"> to</span><span class=\"pun\">.</span><span class=\"pln\">path </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'/signIn\'</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">  next</span><span class=\"pun\">()</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">  </span><span class=\"com\">//如果没有登录,就跳转回 /</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">  next</span><span class=\"pun\">(</span><span class=\"str\">\'/\'</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pun\">})</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"typ\">Vue</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">.</span><span class=\"pln\">productionTip </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">false</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"></code></li><li class=\"L8\"><code class=\"lang-javascript\"></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Vue</span><span class=\"pun\">({</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">  router</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">  store</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">  render</span><span class=\"pun\">:</span><span class=\"pln\"> h </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> h</span><span class=\"pun\">(</span><span class=\"typ\">App</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pun\">}).</span><span class=\"pln\">$mount</span><span class=\"pun\">(</span><span class=\"str\">\'#app\'</span><span class=\"pun\">)</span></code></li></ol></pre>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (18, 2, 'fetch请求', '汪苗', 'http://oss.wangmiaozero.cn/wechat/bachongying1.jpg', 'http://oss.wangmiaozero.cn/wechat/bachongying1.jpg', 'web前端', 1012, '2018-06-23 19:16:56', '```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n  <title>Document</title>\r\n</head>\r\n\r\n<body>\r\n  <button id=\"btnGet\">Fetch发起Get请求</button>\r\n  <button id=\"btnPost\">Fetch发起Post请求</button>\r\n  <button id=\"btnDB\">请求豆瓣API</button>\r\n\r\n  <script>\r\n    document.getElementById(\'btnGet\').onclick = function () {\r\n      // 发起Ajax\r\n      /* const res = fetch(\'http://39.106.32.91:3000/api/getlunbo\')\r\n      console.log(res) */\r\n\r\n      // 默认 fetch(\'url\') 的话，发起的是 Get 请求\r\n      fetch(\'http://39.106.32.91:3000/api/getlunbo\')\r\n        .then(response => {\r\n          // 这个 response 就是 服务器返回的可读数据流，内部存储的是二进制数据；\r\n          // .json() 的作用，就是 读取 response 这个二进制数据流，并把 读取到的数据，转为 JSON 格式的 Promise对象\r\n          return response.json()\r\n        })\r\n        .then(data => {\r\n          // 这里，第二个.then 中，拿到的 data，就是最终的数据\r\n          console.log(data)\r\n        })\r\n    }\r\n\r\n\r\n    document.getElementById(\'btnPost\').onclick = function () {\r\n\r\n      // 创建一个表单数据，这个 form 所对应的数据，会以 Post 形式的 请求体 发送出去；\r\n      /* var form = new FormData()\r\n      form.append(\'name\', \'zs\')\r\n      form.append(\'age\', 20) */\r\n\r\n\r\n      // 这是 查询参数   name=zs&age=20\r\n      var sendData = new URLSearchParams()\r\n      sendData.append(\'name\', \'ls\')\r\n      sendData.append(\'age\', 30)\r\n  // 注意: fetch和axios 都不支持跨域请求\r\n      // 这是我自己的服务器，接口在运行的时候，启用了 CORS 跨域，所以支持 直接 发送 post 和 get 请求\r\n      fetch(\'http://39.106.32.91:3000/api/post\', {\r\n        method: \'POST\',\r\n        body: sendData // 要发送给服务器的数据\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n\r\n\r\n    document.getElementById(\'btnDB\').onclick = function () {\r\n      fetch(\'https://api.douban.com/v2/movie/in_theaters\')\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n    }\r\n  </script>\r\n</body>\r\n\r\n</html>\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"dec\">&lt;!DOCTYPE html&gt;</span></code></li><li class=\"L1\"><code><span class=\"tag\">&lt;html</span><span class=\"pln\"> </span><span class=\"atn\">lang</span><span class=\"pun\">=</span><span class=\"atv\">\"en\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"tag\">&lt;head&gt;</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;meta</span><span class=\"pln\"> </span><span class=\"atn\">charset</span><span class=\"pun\">=</span><span class=\"atv\">\"UTF-8\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;meta</span><span class=\"pln\"> </span><span class=\"atn\">name</span><span class=\"pun\">=</span><span class=\"atv\">\"viewport\"</span><span class=\"pln\"> </span><span class=\"atn\">content</span><span class=\"pun\">=</span><span class=\"atv\">\"width=device-width, initial-scale=1.0\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L6\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;meta</span><span class=\"pln\"> </span><span class=\"atn\">http-equiv</span><span class=\"pun\">=</span><span class=\"atv\">\"X-UA-Compatible\"</span><span class=\"pln\"> </span><span class=\"atn\">content</span><span class=\"pun\">=</span><span class=\"atv\">\"ie=edge\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;title&gt;</span><span class=\"pln\">Document</span><span class=\"tag\">&lt;/title&gt;</span></code></li><li class=\"L8\"><code><span class=\"tag\">&lt;/head&gt;</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"tag\">&lt;body&gt;</span></code></li><li class=\"L1\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pun\">=</span><span class=\"atv\">\"btnGet\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">Fetch发起Get请求</span><span class=\"tag\">&lt;/button&gt;</span></code></li><li class=\"L2\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pun\">=</span><span class=\"atv\">\"btnPost\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">Fetch发起Post请求</span><span class=\"tag\">&lt;/button&gt;</span></code></li><li class=\"L3\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pun\">=</span><span class=\"atv\">\"btnDB\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">请求豆瓣API</span><span class=\"tag\">&lt;/button&gt;</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;script&gt;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    document</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\'btnGet\'</span><span class=\"pun\">).</span><span class=\"pln\">onclick </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"com\">// 发起Ajax</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"com\">/* const res = fetch(\'http://39.106.32.91:3000/api/getlunbo\')</span></code></li><li class=\"L9\"><code><span class=\"com\">      console.log(res) */</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"com\">// 默认 fetch(\'url\') 的话，发起的是 Get 请求</span></code></li><li class=\"L2\"><code><span class=\"pln\">      fetch</span><span class=\"pun\">(</span><span class=\"str\">\'http://39.106.32.91:3000/api/getlunbo\'</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">.</span><span class=\"pln\">then</span><span class=\"pun\">(</span><span class=\"pln\">response </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">          </span><span class=\"com\">// 这个 response 就是 服务器返回的可读数据流，内部存储的是二进制数据；</span></code></li><li class=\"L5\"><code><span class=\"pln\">          </span><span class=\"com\">// .json() 的作用，就是 读取 response 这个二进制数据流，并把 读取到的数据，转为 JSON 格式的 Promise对象</span></code></li><li class=\"L6\"><code><span class=\"pln\">          </span><span class=\"kwd\">return</span><span class=\"pln\"> response</span><span class=\"pun\">.</span><span class=\"pln\">json</span><span class=\"pun\">()</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">})</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">.</span><span class=\"pln\">then</span><span class=\"pun\">(</span><span class=\"pln\">data </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">          </span><span class=\"com\">// 这里，第二个.then 中，拿到的 data，就是最终的数据</span></code></li><li class=\"L0\"><code><span class=\"pln\">          console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">})</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">    document</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\'btnPost\'</span><span class=\"pun\">).</span><span class=\"pln\">onclick </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">      </span><span class=\"com\">// 创建一个表单数据，这个 form 所对应的数据，会以 Post 形式的 请求体 发送出去；</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"com\">/* var form = new FormData()</span></code></li><li class=\"L9\"><code><span class=\"com\">      form.append(\'name\', \'zs\')</span></code></li><li class=\"L0\"><code><span class=\"com\">      form.append(\'age\', 20) */</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">      </span><span class=\"com\">// 这是 查询参数   name=zs&amp;age=20</span></code></li><li class=\"L4\"><code><span class=\"pln\">      </span><span class=\"kwd\">var</span><span class=\"pln\"> sendData </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">URLSearchParams</span><span class=\"pun\">()</span></code></li><li class=\"L5\"><code><span class=\"pln\">      sendData</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"str\">\'name\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'ls\'</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code><span class=\"pln\">      sendData</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"str\">\'age\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">30</span><span class=\"pun\">)</span></code></li><li class=\"L7\"><code><span class=\"pln\">  </span><span class=\"com\">// 注意: fetch和axios 都不支持跨域请求</span></code></li><li class=\"L8\"><code><span class=\"pln\">      </span><span class=\"com\">// 这是我自己的服务器，接口在运行的时候，启用了 CORS 跨域，所以支持 直接 发送 post 和 get 请求</span></code></li><li class=\"L9\"><code><span class=\"pln\">      fetch</span><span class=\"pun\">(</span><span class=\"str\">\'http://39.106.32.91:3000/api/post\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">        method</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'POST\'</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">        body</span><span class=\"pun\">:</span><span class=\"pln\"> sendData </span><span class=\"com\">// 要发送给服务器的数据</span></code></li><li class=\"L2\"><code><span class=\"pln\">      </span><span class=\"pun\">})</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">.</span><span class=\"pln\">then</span><span class=\"pun\">(</span><span class=\"pln\">response </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> response</span><span class=\"pun\">.</span><span class=\"pln\">json</span><span class=\"pun\">())</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">.</span><span class=\"pln\">then</span><span class=\"pun\">(</span><span class=\"pln\">data </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">))</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    document</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\'btnDB\'</span><span class=\"pun\">).</span><span class=\"pln\">onclick </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">      fetch</span><span class=\"pun\">(</span><span class=\"str\">\'https://api.douban.com/v2/movie/in_theaters\'</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">.</span><span class=\"pln\">then</span><span class=\"pun\">(</span><span class=\"pln\">res </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> res</span><span class=\"pun\">.</span><span class=\"pln\">json</span><span class=\"pun\">())</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">.</span><span class=\"pln\">then</span><span class=\"pun\">(</span><span class=\"pln\">data </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">))</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code><span class=\"pln\">  </span><span class=\"tag\">&lt;/script&gt;</span></code></li><li class=\"L5\"><code><span class=\"tag\">&lt;/body&gt;</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"tag\">&lt;/html&gt;</span></code></li></ol></pre>', 1, '17615848207');
INSERT INTO `articles` VALUES (19, 2, 'js封装', '汪苗', 'http://oss.wangmiaozero.cn/wechat/925f3eb140864c25803be543efcf320b.jpg', 'http://oss.wangmiaozero.cn/wechat/925f3eb140864c25803be543efcf320b.jpg', 'web前端', 1013, '2018-06-22 19:23:55', '\n\n```javascript\n(function( w ) {\n    // jQuery工厂\n    function jQuery( selector ) {\n        return new App( selector );\n    };    \n\n    // 这是真正的构造函数，同时把构造函数放在了原型中\n    function App( selector ) {\n        // null、undefined、NaN、0、false、\'\'\n        if ( !selector ) {            \n\n            return this;\n        }        \n\n        // function\n        if ( $.isFunction( selector ) ) {            \n\n            // 打包给ready静态方法处理\n            $.ready( selector );\n        }        // string ==> ( html || selector )\n        else if( $.isString( selector ) ) {            \n\n            // 为了用户友好体验，先去掉首尾空白字符\n            selector = $.trim( selector );            \n\n            // html\n            if( $.isHTML( selector ) ) {                \n\n                // 利用一个临时的div来创建DOM，\n                // 然后把创建好的DOM依次push给实例。\n                var tempDiv = document.createElement( \'div\' );\n                tempDiv.innerHTML = selector;\n                [].push.apply( this, tempDiv.childNodes );\n            }            // selector\n            else {                \n\n                try {\n                    [].push.apply( this, document.querySelectorAll( selector ) );\n                }catch(e) {                    \n\n                    // 如果报错了，那么手动补一个length属性，代表没有获取到任何元素\n                    this.length = 0;\n                }\n            }\n        }        \n\n        // array || likeArray\n        else if( $.isLikeArray( selector ) ) {\n            [].push.apply( this, [].slice.call( selector ) );\n        }        // 其它\n        else {\n\n            this[0] = selector;\n\n            this.length = 1;\n        }\n    };\n\n    // 替换原型 + 原型简称\n    // 替换App的原型为工厂的原型，这样外界就可以通过工厂给实例扩展方法\n    App.prototype = jQuery.prototype = {\n        constructor: jQuery,\n\n        // 获取版本号\n        version: \"1.0.0\",\n\n        // 代表所有实例默认的选择器，也代表实例是一个jQuery类型的对象\n        selector: \'\',\n\n        // 代表所有实例默认的长度\n        length: 0\n    };\n\n    // 给jQuery和原型分别添加extend方法\n    jQuery.extend = jQuery.prototype.extend = function( obj ) {\n        for ( var key in obj ) {\n\n            this[ key ] = obj[ key ];\n        }\n    };    // 暴露工厂和工厂的简称\n    w.jQuery = w.$ = jQuery;\n\n    /**\n            jQuery    \n    ***/\n\n    // 给jQuery添加一些静态方法(兼容ie8)\n    $.extend({\n\n        //获取样式\n        getStyle: function(dom,style){\n            if(window.getComputedStyle){\n\n                return window.getComputedStyle(dom)[style];\n            }else{//ie8\n                return dom.currentStyle[style];\n            }\n        },\n\n        // 去掉首尾空白字符\n        trim: function( str ) {\n            return str.trim ? str.trim() : str.replace( /^\\s+|\\s+$/g, \'\');\n        },\n    });\n\n    // 给jQuery添加一些静态方法(is)\n    $.extend({\n\n        // 判断是不是html片段\n        isHTML: function( html ) {\n\n            // <.>\n            if( html.charAt(0) === \'<\' &&\n                    html.charAt( html.length - 1 ) === \'>\' &&\n                    html.length >= 3 ) {                return true;\n            }            return false;\n        },\n\n        // 判断是不是函数\n        isFunction: function( fn ) {\n\n            return typeof fn === \'function\';\n        },\n\n        // 判断是不是window\n        isWindow: function( w ) {\n\n            return  w.window === w;\n        },\n\n        // 判断是不是对象\n        isObject: function( obj ) {\n\n            // 如果是object或function，那就是对象\n            if ( typeof obj === \'object\' || typeof obj === \'function\' ) {\n\n                return true;\n            }\n\n            return false;\n        },\n\n        // 判断是不是字符串\n        isString: function( str ) {\n\n            return typeof str === \'string\';\n        },\n\n        // 判断是不是真数组或伪数组\n        isLikeArray: function( arr ) {\n            // Function、window、!Object\n            if ( $.isFunction( arr ) || $.isWindow( arr ) || !$.isObject( arr ) ) {\n\n                return false;\n            }\n\n            // 判断是不是真数组\n            if ( ({}).toString.call( arr ) === \'[object Array]\' ) {\n\n                return true;\n            }\n\n            // 判断是不是伪数组\n            if ( \'length\' in arr && ( arr.length === 0 || arr.length - 1 in arr ) ) {\n\n                return true;\n            }\n\n            return false;\n        }\n    });    // 给jQuery添加一些静态方法\n    $.extend({\n\n        ready: function( fn ) {\n\n            // 先统一判断DOMContentloaded有没有触发，\n            // 通过document.readyState === \'complete\'判断\n            // 如果为true，fn可以直接调用。\n\n            // 如果为false，那么判断支不支持addEventListener，\n            // 如果支持，绑定DOMContentLoaded事件\n\n            // 如果不支持，使用attchEvent绑定onreadystatechang事件,\n            // 注意，需要在里面判断document.readyState === \'complete\'才执行fn。\n            // 防止fn多次执行。\n\n            // DOM已经构造完毕，fn可以直接执行\n            if ( document.readyState === \'complete\' ) {\n                fn();\n            }\n\n            // 如果DOM没有构造完毕，那么判断addEventListener是否兼容\n            else if( document.addEventListener ) {\n                document.addEventListener( \'DOMContentLoaded\', fn );\n            }\n\n            // 如果不兼容addEventListener，那么采取attachEvent的方式，\n            // 同时事件变为了onreadystatechange，为了防止这个事件多次触发造成的fn多次执行，\n            // 所以需要一个包装函数来进行过滤。\n            else {\n                document.attachEvent( \'onreadystatechange\', function() {\n                    if( document.readyState === \'complete\' ) {\n                        fn();\n                    }\n                } );\n            }\n        },\n\n        //遍历每一个元素\n        each: function(obj,fn){\n            if($.isLikeArray(obj)){\n\n                for(let i=0;i<obj.length;i++){\n\n                    if(fn.call(obj[i],i,obj[i]) === false){\n\n                        break;\n                    }\n                }\n            }else{\n\n                for(let key in obj){\n\n                    if(fn.call(obj[key],key,obj[key]) === false){\n\n                        break;\n                    }\n                }\n            }\n\n            return obj;\n        },\n\n        //遍历每一个元素,返回新数组\n        map: function(obj,fn){\n            let arr = [];\n\n            if($.isLikeArray(obj)){\n\n                for(let i=0;i<obj.length;i++){\n                    arr.push(fn.call(obj[i],obj[i],i));\n                }\n            }else{\n\n                for(let key in obj){\n                    arr.push(fn.call(obj[key],obj[key],key));\n                }\n            }\n\n            return arr;\n        }\n    });\n\n    // 给jQuery添加事件方法\n    $.extend({\n\n        //添加一个事件\n        addEvent: function(dom,type,fn){\n            if(dom.addEventListener)\n                dom.addEventListener(type,fn);\n\n            else\n                dom.attachEvent(\'on\'+type,fn);\n        },\n\n        //删除一个事件\n        removeEvent: function(dom,type,fn){\n            if(dom.removeEventListener)\n                dom.removeEventListener(type,fn);\n\n            else\n                dom.detachEvent(\'on\'+type, fn);\n        } \n    });\n\n     // 给jQuery添加Ajax方法\n     $.extend({\n        ajax: function(data){\n            //第一步：创建xhr对象\n            var xhr = null;\n\n            if(window.XMLHttpRequest)\n                xhr = new XMLHttpRequest();\n\n            else\n                xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n\n            //第二步：准备发送前的一些配置参数\n            xhr.open(data.type,data.url,true);\n\n            //第三步：执行发送的动作\n            if(data.type == \'get\'){\n                    xhr.send(null);\n            }else if(data.type == \'post\'){\n                    xhr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n                    xhr.send(data.data);\n            }\n\n            //第四步：指定回调函数\n            xhr.onreadystatechange = function(){\n                if(xhr.readyState == 4 ){\n\n                    if(xhr.status == 200)//执行成功\n                        data.success(xhr.responseText);\n\n                    else\n                        data.failure();\n                }\n            }\n        }\n     });\n\n    /**\n            jQuery实例    \n    ***/\n\n    // 给jQuery实例添加元素操作方法\n    $.prototype.extend({\n\n        // 把实例(伪数组)转换为数组返回 \n        toArray: function() {\n            return [].slice.call( this );\n        },\n\n        // 获取指定下标的元素，获取的是原生DOM\n        get: function( i ) {\n            /*\n            * 1、如果传入null或undefined，那么转换为数组返回\n            * 2、如果传入的是正数，按照指定的下标获取元素返回\n            * 3、如果传入的是负数，按照下标倒着( this.length + 负数 )获取元素返回\n            * */\n            // null、undeinfed\n            if ( i == null ) {\n\n                return this.toArray();\n            }\n\n            // 其他\n            if ( i >= 0 ) {\n\n                return this[ i ];\n            }else {\n\n                return this[ this.length + i ];\n            }\n        },\n\n        // 截取实例的部分元素，构成一个新的jQuery实例返回\n        slice: function() {\n            /*\n            * 1、通过数组的slice截取部分元素(slice返回的是数组)，\n            * 2、把截取到的元素转换为实例对象返回。\n            * */\n\n            // 因为slice的参数会有变化，所以需要是arguments，\n            // 我们要把arguments中的每一项传给数组的slice，所以需要借用apply平铺传递过去，\n            // 最后把slice返回数组，通过jQuery工厂保证成实例返回。\n            return $( [].slice.apply( this, arguments ) );\n        },        // 获取指定下标的元素，获取的是jQuery类型的实例对象。\n        eq: function( i ) {\n            /*\n             * 1、如果传入null或undefined，返回一个新实例，\n             * 2、如果传入的是正数，按照指定的下标获取元素，再包装成新实例返回\n             * 3、如果传入的是负数，按照下标倒着( this.length + 负数 )获取元素，再包装成新实例返回\n             * */\n\n            // null、undefined得到新实例\n           return i == null? $() : $( this.get( i ) );\n        },\n\n        // 获取实例中的第一个元素，是jQuery类型的实例对象。\n        first: function() {\n            return this.eq( 0 );\n        },\n\n        // 获取实例中的最后一个元素，是jQuery类型的实例对象。\n        last: function() {\n            return this.eq( -1 );\n        },\n\n        //清空所有元素的内容\n        empty: function(){\n            this.each(function(){\n                this.innerHTML = \"\";\n            });\n\n            return this;\n        },\n\n        //删除所有元素\n        remove: function(){\n            this.each(function(){\n                this.parentNode.removeChild(this);\n            });\n\n            return this;\n        },\n\n        //获取第一个元素的内容；设置所有元素的内容\n        html: function(ctx){\n            //获取第一个元素的内容\n            if(arguments.length === 0){\n\n                return this[0].innerHTML;   \n            }\n\n            //设置所有元素的内容\n            this.each(function(){\n                this.innerHTML = ctx;\n            });\n\n            return this;\n        },\n\n        //获取所有元素的文本内容；设置所有元素的文本内容\n        text: function(ctx){\n            //获取所有元素的文本内容\n            if(!ctx){\n\n                return this[0].innerText;   \n            }\n\n            //设置所有元素的文本内容\n            this.each(function(){\n                this.innerText = ctx;\n            });\n\n            return this;\n        },\n\n        //遍历实例中的每一个元素\n        each: function(fn){\n            for(let i=0;i<this.length;i++){\n\n                if(fn.call(this[i],i,this[i]) === false){\n\n                    break;\n                }\n            }\n\n            return this;\n        },\n\n        //遍历每一个元素,返回新数组\n        map: function(fn) {\n            let arr = [];\n\n            for(let i=0;i<this.length;i++){\n                arr.push(fn.call(this[i],this[i],i));\n            }            return arr;\n        },  \n\n        // 原型上的方法供实例调用，\n        // 即实例.push，在调用过程中，push内的this就指向了实例，\n        // 所以这里不需要通过call和apply改变this指向即可借用数组的方法\n        push: [].push,\n        sort: [].sort,\n        splice: [].splice\n    });\n\n    // 给jQuery实例添加Dom方法\n    $.prototype.extend({\n\n        __operDom: function(selector,fn){\n            let self = this;\n            selector.each(function(){\n                let dom = this;\n                self.each(function(key){\n                    if(key !== 0)\n                        dom = dom.cloneNode(true);\n                    fn.call(this,dom);\n                });\n            });\n        },\n\n        //把B加到A内的最后\n        append: function(selector){\n            this.__operDom($(selector),function(dom){\n                this.appendChild(dom);\n            });\n\n            return this;\n        },\n\n        //把B加到A内的最前\n        prepend: function(selector){\n            this.__operDom($(selector),function(dom){\n                this.insertBefore(dom,this.firstChild);\n            });\n\n            return this;\n        },\n\n        //把A加到B内的最后\n        appendTo: function(selector){\n            this.__operDom.call($(selector),this,function(dom){\n                this.appendChild(dom);\n            });            return this;\n        },\n\n        //把A加到B内的最前\n        prependTo: function(selector){\n            this.__operDom.call($(selector),this,function(dom){\n                this.insertBefore(dom,this.firstChild);\n            });            return this;\n        },\n\n        //把B加到A外的前面\n        before: function(selector){\n            this.__operDom($(selector),function(dom){\n                this.parentNode.insertBefore(dom,this);\n            });            return this;\n        },\n\n        //把B加到A外的后面\n        after: function(selector){\n            this.__operDom($(selector),function(dom){\n                this.parentNode.insertBefore(dom,this.nextSibling);\n            });            return this;\n        },\n\n        __append: function(selector){\n            selector = $(selector);\n\n            let self = this;\n            selector.each(function(){\n                let dom = this;\n                self.each(function(key){\n                    if(key !== 0)\n                        dom = dom.cloneNode(true);\n\n                    this.appendChild(dom);\n                });\n            });\n\n        },\n\n        __prepend: function(selector){\n            selector = $(selector);\n\n            let self = this;\n            selector.each(function(){\n                let dom = this;\n                self.each(function(key){\n                    if(key !== 0)\n                        dom = dom.cloneNode(true);\n\n                    this.insertBefore(dom,this.firstChild);\n                });\n            });\n        },\n\n        __appendTo: function(selector){\n           selector = $(selector);\n\n           let self = this;\n\n           this.each(function(){\n                let dom = this;\n                selector.each(function(key){\n                    if(key !== 0)\n                        dom = dom.cloneNode(true);\n\n                    this.appendChild(dom);\n                });\n           });\n        },\n\n        __prependTo: function(selector){\n            selector = $(selector);\n\n            this.each(function(){\n                 let dom = this;\n                 selector.each(function(key){\n                     if(key !== 0)\n                         dom = dom.cloneNode(true);\n\n                     this.insertBefore(dom,this.firstChild);\n                 });\n            });\n        },\n\n        __before: function(selector){\n            selector = $(selector); //要插入的内容\n            let self = this;\n            selector.each(function(){\n                let dom = this;\n                self.each(function(key){\n                    if(key !== 0)\n                        dom = dom.cloneNode(true);\n\n                    this.parentNode.insertBefore(dom,this);\n                });\n            });\n        },\n\n        __after: function(selector){\n            selector = $(selector); //要插入的内容\n            let self = this;\n            selector.each(function(){\n                let dom = this;\n                self.each(function(key){\n                    if(key !== 0)\n                        dom = dom.cloneNode(true);\n\n                    this.parentNode.insertBefore(dom,this.nextSibling);\n                });\n            });\n        }\n    });\n\n    // 给jQuery实例添加Class方法\n    $.prototype.extend({\n\n        __add: function(className){\n            this.each(function(){\n                this.className += \' \' + className; \n            });\n        },\n\n        __remove: function(className){\n            this.each(function(){\n                this.className = (\' \' + this.className + \' \')\n                .replace(\' \' + className + \' \',\' \');\n            });\n        },\n\n        //操作class\n        __operClass: function(className,action){\n            if($.isString(className))\n                className = $.trim(className).split(\" \");\n\n            let self;\n\n            this.each(function(){\n                self = this;\n                $.each(className,function(){\n                    self.classList[action](this);\n                });\n            });            return this;\n        },\n\n        //给所有元素添加新的class\n        addClass: function(className){\n            if(arguments.length === 0)\n\n                return this;\n\n            return this.__operClass(className,\"add\");\n        },\n\n        //删除所有元素指定的class\n        removeClass: function(className){\n            if(arguments.length === 0){\n\n                this.each(function(){\n                    this.className = \"\";\n                });\n\n                return this;\n            }\n\n            return this.__operClass(className,\"remove\");\n        },\n\n        //有则删除，没有则添加\n        toggleClass: function(className){\n            if(arguments.length === 0)\n\n                return this;\n\n            return this.__operClass(className,\"toggle\");\n        }, \n\n        //判断元素有没有指定的class(只要有一个)\n        hasClass: function(className){\n            let flag = false;\n\n            if(arguments.length === 0)\n\n                return flag;\n\n            this.each(function(){\n                if(this.classList.contains(className)){\n                    flag = true;\n\n                    return;\n                }\n            });\n\n            return flag;\n        }\n    });\n\n    // 给jQuery实例添加属性方法\n    $.prototype.extend({\n\n        //获取或者设置属性节点\n        attr: function(attrName,attrVal){\n            if(!$.isString(attrName) && !$.isObject(attrName))\n\n                return this;\n\n            if($.isString(attrName)){\n\n                if(arguments.length === 1)\n\n                    return this[0].getAttribute(attrName);\n\n                else{\n\n                    this.each(function(){\n                        this.setAttribute(attrName, attrVal);\n                    });\n\n                    return this;\n                }\n            }else{\n\n                for(attr in attrName){\n\n                    this.each(function(){\n                        this.setAttribute(attr, attrName[attr]);\n                    });\n                }\n\n                return this;\n            }\n        },\n\n        //获取或者设置属性\n        prop: function(propName,propVal){\n            if(!$.isString(propName) && !$.isObject(propName))\n\n                return this;\n\n            if($.isString(propName)){\n\n                if(arguments.length === 1)\n\n                    return this[0][propName];\n\n                else{\n\n                    this.each(function(){\n                        this[propName] = propVal;\n                    });\n\n                    return this;\n                }\n            }else{\n\n                for(prop in propName){\n\n                    this.each(function(){\n                        this[prop] = propName[prop];\n                    });\n                }\n\n                return this;\n            }\n        },\n\n        //获取或者设置value\n        val: function(val){\n            if(arguments.length === 0)\n\n                return this[0].value;\n\n            else {\n\n                this.each(function(){\n                    this.value = val;\n                });\n\n                return this;\n            }\n        },\n\n        //获取或者设置样式\n        css: function(cssName,cssVal){\n            if(!$.isString(cssName) && !$.isObject(cssName))\n\n                return this;\n\n            if($.isString(cssName)){\n\n                if(arguments.length === 1){\n\n                    return $.getStyle(this[0],cssName);\n                }\n\n                else{\n\n                    this.each(function(){\n                        this.style[cssName] = cssVal;\n                    });\n\n                    return this;\n                }\n            }else{\n\n                for(css in cssName){\n\n                    this.each(function(){\n                        this.style[css] = attrName[css];\n                    });\n                }\n\n                return this;\n            }\n        },\n\n        //获取或者设置自定义属性\n        data: function(dataName,dataVal){\n            if(arguments.length === 0)\n\n                return this[0].dataset;\n\n            else if(arguments.length === 1){\n\n                return this[0].dataset[dataName];\n            }else{\n\n                this[0].dataset[dataName] = dataVal;\n\n                return this;\n            }\n        }\n    });\n\n    // 给jQuery实例添加事件方法\n    $.prototype.extend({\n\n        //添加一个事件\n        on: function(type,fn){\n            this.each(function(){\n                $.addEvent(this,type,fn);\n            });\n\n            return this;\n        },\n\n        //删除一个事件\n        off: function(type,fn){\n            this.each(function(){\n                $.removeEvent(this,type,fn);\n            });\n\n            return this;\n        }\n    });\n\n}( window ));\n```\n', '<p>`<br>(function( w ) {<br>    // jQuery工厂<br>    function jQuery( selector ) {<br>        return new App( selector );<br>    };    </p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\">// 这是真正的构造函数，同时把构造函数放在了原型中</span></code></li><li class=\"L1\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// null、undefined、NaN、0、false、\'\'</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"pun\">!</span><span class=\"pln\">selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">            </span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span><span class=\"pln\">        </span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// function</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">isFunction</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">            </span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">// 打包给ready静态方法处理</span></code></li><li class=\"L2\"><code><span class=\"pln\">        $</span><span class=\"pun\">.</span><span class=\"pln\">ready</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span><span class=\"pln\">        </span><span class=\"com\">// string ==&gt; ( html || selector )</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">            </span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"com\">// 为了用户友好体验，先去掉首尾空白字符</span></code></li><li class=\"L7\"><code><span class=\"pln\">        selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">);</span><span class=\"pln\">            </span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"com\">// html</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">isHTML</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">                </span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"com\">// 利用一个临时的div来创建DOM，</span></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"com\">// 然后把创建好的DOM依次push给实例。</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">var</span><span class=\"pln\"> tempDiv </span><span class=\"pun\">=</span><span class=\"pln\"> document</span><span class=\"pun\">.</span><span class=\"pln\">createElement</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"str\">\'div\'</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code><span class=\"pln\">            tempDiv</span><span class=\"pun\">.</span><span class=\"pln\">innerHTML </span><span class=\"pun\">=</span><span class=\"pln\"> selector</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"pun\">[].</span><span class=\"pln\">push</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> tempDiv</span><span class=\"pun\">.</span><span class=\"pln\">childNodes </span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\">            </span><span class=\"com\">// selector</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">                </span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"pun\">[].</span><span class=\"pln\">push</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> document</span><span class=\"pun\">.</span><span class=\"pln\">querySelectorAll</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">catch</span><span class=\"pun\">(</span><span class=\"pln\">e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">                    </span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"com\">// 如果报错了，那么手动补一个length属性，代表没有获取到任何元素</span></code></li><li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span><span class=\"pln\">        </span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// array || likeArray</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">isLikeArray</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">[].</span><span class=\"pln\">push</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[].</span><span class=\"pln\">slice</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\"> selector </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span><span class=\"pln\">        </span><span class=\"com\">// 其它</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> selector</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code><span class=\"pun\">};</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"com\">// 替换原型 + 原型简称</span></code></li><li class=\"L3\"><code><span class=\"com\">// 替换App的原型为工厂的原型，这样外界就可以通过工厂给实例扩展方法</span></code></li><li class=\"L4\"><code><span class=\"typ\">App</span><span class=\"pun\">.</span><span class=\"pln\">prototype </span><span class=\"pun\">=</span><span class=\"pln\"> jQuery</span><span class=\"pun\">.</span><span class=\"pln\">prototype </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">    constructor</span><span class=\"pun\">:</span><span class=\"pln\"> jQuery</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 获取版本号</span></code></li><li class=\"L8\"><code><span class=\"pln\">    version</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"1.0.0\"</span><span class=\"pun\">,</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">// 代表所有实例默认的选择器，也代表实例是一个jQuery类型的对象</span></code></li><li class=\"L1\"><code><span class=\"pln\">    selector</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'\'</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 代表所有实例默认的长度</span></code></li><li class=\"L4\"><code><span class=\"pln\">    length</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">0</span></code></li><li class=\"L5\"><code><span class=\"pun\">};</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"com\">// 给jQuery和原型分别添加extend方法</span></code></li><li class=\"L8\"><code><span class=\"pln\">jQuery</span><span class=\"pun\">.</span><span class=\"pln\">extend </span><span class=\"pun\">=</span><span class=\"pln\"> jQuery</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">extend </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> obj </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> key </span><span class=\"kwd\">in</span><span class=\"pln\"> obj </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\"> key </span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> obj</span><span class=\"pun\">[</span><span class=\"pln\"> key </span><span class=\"pun\">];</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pun\">};</span><span class=\"pln\">    </span><span class=\"com\">// 暴露工厂和工厂的简称</span></code></li><li class=\"L4\"><code><span class=\"pln\">w</span><span class=\"pun\">.</span><span class=\"pln\">jQuery </span><span class=\"pun\">=</span><span class=\"pln\"> w</span><span class=\"pun\">.</span><span class=\"pln\">$ </span><span class=\"pun\">=</span><span class=\"pln\"> jQuery</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"com\">/**</span></code></li><li class=\"L7\"><code><span class=\"com\">        jQuery    </span></code></li><li class=\"L8\"><code><span class=\"com\">***/</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"com\">// 给jQuery添加一些静态方法(兼容ie8)</span></code></li><li class=\"L1\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">//获取样式</span></code></li><li class=\"L4\"><code><span class=\"pln\">    getStyle</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"pln\">style</span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">window</span><span class=\"pun\">.</span><span class=\"pln\">getComputedStyle</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> window</span><span class=\"pun\">.</span><span class=\"pln\">getComputedStyle</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">)[</span><span class=\"pln\">style</span><span class=\"pun\">];</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span><span class=\"com\">//ie8</span></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">currentStyle</span><span class=\"pun\">[</span><span class=\"pln\">style</span><span class=\"pun\">];</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 去掉首尾空白字符</span></code></li><li class=\"L4\"><code><span class=\"pln\">    trim</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> str </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">trim </span><span class=\"pun\">?</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"str\">/^\\s+|\\s+$/</span><span class=\"pln\">g</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'\'</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code><span class=\"pun\">});</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"com\">// 给jQuery添加一些静态方法(is)</span></code></li><li class=\"L0\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 判断是不是html片段</span></code></li><li class=\"L3\"><code><span class=\"pln\">    isHTML</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> html </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\">// &lt;.&gt;</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> html</span><span class=\"pun\">.</span><span class=\"pln\">charAt</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'&lt;\'</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span></code></li><li class=\"L7\"><code><span class=\"pln\">                html</span><span class=\"pun\">.</span><span class=\"pln\">charAt</span><span class=\"pun\">(</span><span class=\"pln\"> html</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'&gt;\'</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span></code></li><li class=\"L8\"><code><span class=\"pln\">                html</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">&gt;=</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 判断是不是函数</span></code></li><li class=\"L3\"><code><span class=\"pln\">    isFunction</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> fn </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">typeof</span><span class=\"pln\"> fn </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'function\'</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 判断是不是window</span></code></li><li class=\"L9\"><code><span class=\"pln\">    isWindow</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> w </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\">  w</span><span class=\"pun\">.</span><span class=\"pln\">window </span><span class=\"pun\">===</span><span class=\"pln\"> w</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 判断是不是对象</span></code></li><li class=\"L5\"><code><span class=\"pln\">    isObject</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> obj </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果是object或function，那就是对象</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">typeof</span><span class=\"pln\"> obj </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'object\'</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"kwd\">typeof</span><span class=\"pln\"> obj </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'function\'</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 判断是不是字符串</span></code></li><li class=\"L7\"><code><span class=\"pln\">    isString</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> str </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">typeof</span><span class=\"pln\"> str </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'string\'</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">// 判断是不是真数组或伪数组</span></code></li><li class=\"L3\"><code><span class=\"pln\">    isLikeArray</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> arr </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"com\">// Function、window、!Object</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">isFunction</span><span class=\"pun\">(</span><span class=\"pln\"> arr </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">isWindow</span><span class=\"pun\">(</span><span class=\"pln\"> arr </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">(</span><span class=\"pln\"> arr </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// 判断是不是真数组</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"pun\">({}).</span><span class=\"pln\">toString</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\"> arr </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'[object Array]\'</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"com\">// 判断是不是伪数组</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"str\">\'length\'</span><span class=\"pln\"> </span><span class=\"kwd\">in</span><span class=\"pln\"> arr </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> arr</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> arr</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"kwd\">in</span><span class=\"pln\"> arr </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code><span class=\"pun\">});</span><span class=\"pln\">    </span><span class=\"com\">// 给jQuery添加一些静态方法</span></code></li><li class=\"L5\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    ready</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> fn </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"com\">// 先统一判断DOMContentloaded有没有触发，</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// 通过document.readyState === \'complete\'判断</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果为true，fn可以直接调用。</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果为false，那么判断支不支持addEventListener，</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果支持，绑定DOMContentLoaded事件</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果不支持，使用attchEvent绑定onreadystatechang事件,</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"com\">// 注意，需要在里面判断document.readyState === \'complete\'才执行fn。</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"com\">// 防止fn多次执行。</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// DOM已经构造完毕，fn可以直接执行</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> document</span><span class=\"pun\">.</span><span class=\"pln\">readyState </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'complete\'</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code><span class=\"pln\">            fn</span><span class=\"pun\">();</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果DOM没有构造完毕，那么判断addEventListener是否兼容</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> document</span><span class=\"pun\">.</span><span class=\"pln\">addEventListener </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code><span class=\"pln\">            document</span><span class=\"pun\">.</span><span class=\"pln\">addEventListener</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"str\">\'DOMContentLoaded\'</span><span class=\"pun\">,</span><span class=\"pln\"> fn </span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// 如果不兼容addEventListener，那么采取attachEvent的方式，</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">// 同时事件变为了onreadystatechange，为了防止这个事件多次触发造成的fn多次执行，</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\">// 所以需要一个包装函数来进行过滤。</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">            document</span><span class=\"pun\">.</span><span class=\"pln\">attachEvent</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"str\">\'onreadystatechange\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> document</span><span class=\"pun\">.</span><span class=\"pln\">readyState </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\'complete\'</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">                    fn</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">//遍历每一个元素</span></code></li><li class=\"L3\"><code><span class=\"pln\">    each</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isLikeArray</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">)){</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">let</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">&lt;</span><span class=\"pln\">obj</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">++){</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"pln\">i</span><span class=\"pun\">,</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">])</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">                    </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">let</span><span class=\"pln\"> key </span><span class=\"kwd\">in</span><span class=\"pln\"> obj</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">key</span><span class=\"pun\">],</span><span class=\"pln\">key</span><span class=\"pun\">,</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">key</span><span class=\"pun\">])</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> obj</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//遍历每一个元素,返回新数组</span></code></li><li class=\"L8\"><code><span class=\"pln\">    map</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> arr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[];</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isLikeArray</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">)){</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">let</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">&lt;</span><span class=\"pln\">obj</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">++){</span></code></li><li class=\"L4\"><code><span class=\"pln\">                arr</span><span class=\"pun\">.</span><span class=\"pln\">push</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"pln\">i</span><span class=\"pun\">));</span></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">let</span><span class=\"pln\"> key </span><span class=\"kwd\">in</span><span class=\"pln\"> obj</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">                arr</span><span class=\"pun\">.</span><span class=\"pln\">push</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">key</span><span class=\"pun\">],</span><span class=\"pln\">obj</span><span class=\"pun\">[</span><span class=\"pln\">key</span><span class=\"pun\">],</span><span class=\"pln\">key</span><span class=\"pun\">));</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> arr</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code><span class=\"pun\">});</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"com\">// 给jQuery添加事件方法</span></code></li><li class=\"L8\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"com\">//添加一个事件</span></code></li><li class=\"L1\"><code><span class=\"pln\">    addEvent</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">.</span><span class=\"pln\">addEventListener</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">            dom</span><span class=\"pun\">.</span><span class=\"pln\">addEventListener</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span></code></li><li class=\"L6\"><code><span class=\"pln\">            dom</span><span class=\"pun\">.</span><span class=\"pln\">attachEvent</span><span class=\"pun\">(</span><span class=\"str\">\'on\'</span><span class=\"pun\">+</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">//删除一个事件</span></code></li><li class=\"L0\"><code><span class=\"pln\">    removeEvent</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">.</span><span class=\"pln\">removeEventListener</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code><span class=\"pln\">            dom</span><span class=\"pun\">.</span><span class=\"pln\">removeEventListener</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span></code></li><li class=\"L5\"><code><span class=\"pln\">            dom</span><span class=\"pun\">.</span><span class=\"pln\">detachEvent</span><span class=\"pun\">(</span><span class=\"str\">\'on\'</span><span class=\"pun\">+</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\"> fn</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span><span class=\"pln\"> </span></code></li><li class=\"L7\"><code><span class=\"pun\">});</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\"> </span><span class=\"com\">// 给jQuery添加Ajax方法</span></code></li><li class=\"L0\"><code><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L1\"><code><span class=\"pln\">    ajax</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\">//第一步：创建xhr对象</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">var</span><span class=\"pln\"> xhr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">window</span><span class=\"pun\">.</span><span class=\"typ\">XMLHttpRequest</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code><span class=\"pln\">            xhr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">XMLHttpRequest</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span></code></li><li class=\"L9\"><code><span class=\"pln\">            xhr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ActiveXObject</span><span class=\"pun\">(</span><span class=\"str\">\"Microsoft.XMLHTTP\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">//第二步：准备发送前的一些配置参数</span></code></li><li class=\"L2\"><code><span class=\"pln\">        xhr</span><span class=\"pun\">.</span><span class=\"pln\">open</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">url</span><span class=\"pun\">,</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"com\">//第三步：执行发送的动作</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">type </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"str\">\'get\'</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">                xhr</span><span class=\"pun\">.</span><span class=\"pln\">send</span><span class=\"pun\">(</span><span class=\"kwd\">null</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">type </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"str\">\'post\'</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code><span class=\"pln\">                xhr</span><span class=\"pun\">.</span><span class=\"pln\">setRequestHeader</span><span class=\"pun\">(</span><span class=\"str\">\"Content-Type\"</span><span class=\"pun\">,</span><span class=\"str\">\"application/x-www-form-urlencoded\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code><span class=\"pln\">                xhr</span><span class=\"pun\">.</span><span class=\"pln\">send</span><span class=\"pun\">(</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\">//第四步：指定回调函数</span></code></li><li class=\"L3\"><code><span class=\"pln\">        xhr</span><span class=\"pun\">.</span><span class=\"pln\">onreadystatechange </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">xhr</span><span class=\"pun\">.</span><span class=\"pln\">readyState </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pln\"> </span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">xhr</span><span class=\"pun\">.</span><span class=\"pln\">status </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">200</span><span class=\"pun\">)</span><span class=\"com\">//执行成功</span></code></li><li class=\"L7\"><code><span class=\"pln\">                    data</span><span class=\"pun\">.</span><span class=\"pln\">success</span><span class=\"pun\">(</span><span class=\"pln\">xhr</span><span class=\"pun\">.</span><span class=\"pln\">responseText</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">else</span></code></li><li class=\"L0\"><code><span class=\"pln\">                    data</span><span class=\"pun\">.</span><span class=\"pln\">failure</span><span class=\"pun\">();</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code><span class=\"pln\"> </span><span class=\"pun\">});</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"com\">/**</span></code></li><li class=\"L7\"><code><span class=\"com\">        jQuery实例    </span></code></li><li class=\"L8\"><code><span class=\"com\">***/</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"com\">// 给jQuery实例添加元素操作方法</span></code></li><li class=\"L1\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">// 把实例(伪数组)转换为数组返回 </span></code></li><li class=\"L4\"><code><span class=\"pln\">    toArray</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">[].</span><span class=\"pln\">slice</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 获取指定下标的元素，获取的是原生DOM</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">get</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> i </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">/*</span></code></li><li class=\"L1\"><code><span class=\"com\">        * 1、如果传入null或undefined，那么转换为数组返回</span></code></li><li class=\"L2\"><code><span class=\"com\">        * 2、如果传入的是正数，按照指定的下标获取元素返回</span></code></li><li class=\"L3\"><code><span class=\"com\">        * 3、如果传入的是负数，按照下标倒着( this.length + 负数 )获取元素返回</span></code></li><li class=\"L4\"><code><span class=\"com\">        * */</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\">// null、undeinfed</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> i </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">toArray</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">// 其他</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\"> i </span><span class=\"pun\">&gt;=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\"> i </span><span class=\"pun\">];</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">+</span><span class=\"pln\"> i </span><span class=\"pun\">];</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">// 截取实例的部分元素，构成一个新的jQuery实例返回</span></code></li><li class=\"L2\"><code><span class=\"pln\">    slice</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"com\">/*</span></code></li><li class=\"L4\"><code><span class=\"com\">        * 1、通过数组的slice截取部分元素(slice返回的是数组)，</span></code></li><li class=\"L5\"><code><span class=\"com\">        * 2、把截取到的元素转换为实例对象返回。</span></code></li><li class=\"L6\"><code><span class=\"com\">        * */</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"com\">// 因为slice的参数会有变化，所以需要是arguments，</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"com\">// 我们要把arguments中的每一项传给数组的slice，所以需要借用apply平铺传递过去，</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// 最后把slice返回数组，通过jQuery工厂保证成实例返回。</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"pun\">[].</span><span class=\"pln\">slice</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> arguments </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span><span class=\"pln\">        </span><span class=\"com\">// 获取指定下标的元素，获取的是jQuery类型的实例对象。</span></code></li><li class=\"L3\"><code><span class=\"pln\">    eq</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> i </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"com\">/*</span></code></li><li class=\"L5\"><code><span class=\"com\">         * 1、如果传入null或undefined，返回一个新实例，</span></code></li><li class=\"L6\"><code><span class=\"com\">         * 2、如果传入的是正数，按照指定的下标获取元素，再包装成新实例返回</span></code></li><li class=\"L7\"><code><span class=\"com\">         * 3、如果传入的是负数，按照下标倒着( this.length + 负数 )获取元素，再包装成新实例返回</span></code></li><li class=\"L8\"><code><span class=\"com\">         * */</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">// null、undefined得到新实例</span></code></li><li class=\"L1\"><code><span class=\"pln\">       </span><span class=\"kwd\">return</span><span class=\"pln\"> i </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">?</span><span class=\"pln\"> $</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\"> i </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">// 获取实例中的第一个元素，是jQuery类型的实例对象。</span></code></li><li class=\"L5\"><code><span class=\"pln\">    first</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">eq</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">// 获取实例中的最后一个元素，是jQuery类型的实例对象。</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">last</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">eq</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">//清空所有元素的内容</span></code></li><li class=\"L5\"><code><span class=\"pln\">    empty</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">innerHTML </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">//删除所有元素</span></code></li><li class=\"L4\"><code><span class=\"pln\">    remove</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">parentNode</span><span class=\"pun\">.</span><span class=\"pln\">removeChild</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"com\">//获取第一个元素的内容；设置所有元素的内容</span></code></li><li class=\"L3\"><code><span class=\"pln\">    html</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">ctx</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"com\">//获取第一个元素的内容</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">innerHTML</span><span class=\"pun\">;</span><span class=\"pln\">   </span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">//设置所有元素的内容</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">innerHTML </span><span class=\"pun\">=</span><span class=\"pln\"> ctx</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">//获取所有元素的文本内容；设置所有元素的文本内容</span></code></li><li class=\"L9\"><code><span class=\"pln\">    text</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">ctx</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\">//获取所有元素的文本内容</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">ctx</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">innerText</span><span class=\"pun\">;</span><span class=\"pln\">   </span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"com\">//设置所有元素的文本内容</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">innerText </span><span class=\"pun\">=</span><span class=\"pln\"> ctx</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">//遍历实例中的每一个元素</span></code></li><li class=\"L5\"><code><span class=\"pln\">    each</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">let</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">&lt;</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">++){</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"pln\">i</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">])</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//遍历每一个元素,返回新数组</span></code></li><li class=\"L8\"><code><span class=\"pln\">    map</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> arr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[];</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">let</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">&lt;</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\">i</span><span class=\"pun\">++){</span></code></li><li class=\"L2\"><code><span class=\"pln\">            arr</span><span class=\"pun\">.</span><span class=\"pln\">push</span><span class=\"pun\">(</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"pln\">i</span><span class=\"pun\">));</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> arr</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span><span class=\"pln\">  </span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">// 原型上的方法供实例调用，</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">// 即实例.push，在调用过程中，push内的this就指向了实例，</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">// 所以这里不需要通过call和apply改变this指向即可借用数组的方法</span></code></li><li class=\"L9\"><code><span class=\"pln\">    push</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[].</span><span class=\"pln\">push</span><span class=\"pun\">,</span></code></li><li class=\"L0\"><code><span class=\"pln\">    sort</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[].</span><span class=\"pln\">sort</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    splice</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[].</span><span class=\"pln\">splice</span></code></li><li class=\"L2\"><code><span class=\"pun\">});</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"com\">// 给jQuery实例添加Dom方法</span></code></li><li class=\"L5\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    __operDom</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">        selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">                    dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code><span class=\"pln\">                fn</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\">dom</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">//把B加到A内的最后</span></code></li><li class=\"L0\"><code><span class=\"pln\">    append</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operDom</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">),</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">appendChild</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">//把B加到A内的最前</span></code></li><li class=\"L9\"><code><span class=\"pln\">    prepend</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operDom</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">),</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">){</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">firstChild</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//把A加到B内的最后</span></code></li><li class=\"L8\"><code><span class=\"pln\">    appendTo</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operDom</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">),</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">appendChild</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">//把A加到B内的最前</span></code></li><li class=\"L5\"><code><span class=\"pln\">    prependTo</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operDom</span><span class=\"pun\">.</span><span class=\"pln\">call</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">),</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">firstChild</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">//把B加到A外的前面</span></code></li><li class=\"L2\"><code><span class=\"pln\">    before</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operDom</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">),</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">parentNode</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">//把B加到A外的后面</span></code></li><li class=\"L9\"><code><span class=\"pln\">    after</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operDom</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">),</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">){</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">parentNode</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">nextSibling</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">    __append</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">        selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">        selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">                    dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">appendChild</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">    __prepend</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">        selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">        selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code><span class=\"pln\">                    dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">firstChild</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    __appendTo</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code><span class=\"pln\">       selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">       </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">       </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">            selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code><span class=\"pln\">                    dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">appendChild</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L9\"><code><span class=\"pln\">       </span><span class=\"pun\">});</span></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">    __prependTo</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code><span class=\"pln\">        selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">             </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code><span class=\"pln\">             selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code><span class=\"pln\">                 </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code><span class=\"pln\">                     dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">                 </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">firstChild</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">             </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    __before</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code><span class=\"pln\">        selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">//要插入的内容</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code><span class=\"pln\">        selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code><span class=\"pln\">                    dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">parentNode</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    __after</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">){</span></code></li><li class=\"L1\"><code><span class=\"pln\">        selector </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">selector</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">//要插入的内容</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">        selector</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">let</span><span class=\"pln\"> dom </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">key </span><span class=\"pun\">!==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L7\"><code><span class=\"pln\">                    dom </span><span class=\"pun\">=</span><span class=\"pln\"> dom</span><span class=\"pun\">.</span><span class=\"pln\">cloneNode</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">parentNode</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">dom</span><span class=\"pun\">,</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">nextSibling</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pun\">});</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"com\">// 给jQuery实例添加Class方法</span></code></li><li class=\"L6\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    __add</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">className </span><span class=\"pun\">+=</span><span class=\"pln\"> </span><span class=\"str\">\' \'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> className</span><span class=\"pun\">;</span><span class=\"pln\"> </span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    __remove</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">className </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"str\">\' \'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">className </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\' \'</span><span class=\"pun\">)</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">\' \'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> className </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\' \'</span><span class=\"pun\">,</span><span class=\"str\">\' \'</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">//操作class</span></code></li><li class=\"L2\"><code><span class=\"pln\">    __operClass</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">,</span><span class=\"pln\">action</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">))</span></code></li><li class=\"L4\"><code><span class=\"pln\">            className </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">).</span><span class=\"pln\">split</span><span class=\"pun\">(</span><span class=\"str\">\" \"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">            $</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">,</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">classList</span><span class=\"pun\">[</span><span class=\"pln\">action</span><span class=\"pun\">](</span><span class=\"kwd\">this</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">//给所有元素添加新的class</span></code></li><li class=\"L7\"><code><span class=\"pln\">    addClass</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operClass</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">,</span><span class=\"str\">\"add\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"com\">//删除所有元素指定的class</span></code></li><li class=\"L6\"><code><span class=\"pln\">    removeClass</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">className </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operClass</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">,</span><span class=\"str\">\"remove\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"com\">//有则删除，没有则添加</span></code></li><li class=\"L0\"><code><span class=\"pln\">    toggleClass</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">){</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">__operClass</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">,</span><span class=\"str\">\"toggle\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span><span class=\"pln\"> </span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">//判断元素有没有指定的class(只要有一个)</span></code></li><li class=\"L9\"><code><span class=\"pln\">    hasClass</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">let</span><span class=\"pln\"> flag </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> flag</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">classList</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">)){</span></code></li><li class=\"L8\"><code><span class=\"pln\">                flag </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> flag</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code><span class=\"pun\">});</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"com\">// 给jQuery实例添加属性方法</span></code></li><li class=\"L9\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">//获取或者设置属性节点</span></code></li><li class=\"L2\"><code><span class=\"pln\">    attr</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">attrName</span><span class=\"pun\">,</span><span class=\"pln\">attrVal</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">attrName</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> </span><span class=\"pun\">!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">(</span><span class=\"pln\">attrName</span><span class=\"pun\">))</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">attrName</span><span class=\"pun\">)){</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">getAttribute</span><span class=\"pun\">(</span><span class=\"pln\">attrName</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setAttribute</span><span class=\"pun\">(</span><span class=\"pln\">attrName</span><span class=\"pun\">,</span><span class=\"pln\"> attrVal</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"pln\">attr </span><span class=\"kwd\">in</span><span class=\"pln\"> attrName</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setAttribute</span><span class=\"pun\">(</span><span class=\"pln\">attr</span><span class=\"pun\">,</span><span class=\"pln\"> attrName</span><span class=\"pun\">[</span><span class=\"pln\">attr</span><span class=\"pun\">]);</span></code></li><li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"com\">//获取或者设置属性</span></code></li><li class=\"L5\"><code><span class=\"pln\">    prop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">propName</span><span class=\"pun\">,</span><span class=\"pln\">propVal</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">propName</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> </span><span class=\"pun\">!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">(</span><span class=\"pln\">propName</span><span class=\"pun\">))</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">propName</span><span class=\"pun\">)){</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">][</span><span class=\"pln\">propName</span><span class=\"pun\">];</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\">propName</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> propVal</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"pln\">prop </span><span class=\"kwd\">in</span><span class=\"pln\"> propName</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"pln\">prop</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> propName</span><span class=\"pun\">[</span><span class=\"pln\">prop</span><span class=\"pun\">];</span></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//获取或者设置value</span></code></li><li class=\"L8\"><code><span class=\"pln\">    val</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">val</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">value</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">value </span><span class=\"pun\">=</span><span class=\"pln\"> val</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"com\">//获取或者设置样式</span></code></li><li class=\"L4\"><code><span class=\"pln\">    css</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">cssName</span><span class=\"pun\">,</span><span class=\"pln\">cssVal</span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">cssName</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> </span><span class=\"pun\">!</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">(</span><span class=\"pln\">cssName</span><span class=\"pun\">))</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">isString</span><span class=\"pun\">(</span><span class=\"pln\">cssName</span><span class=\"pun\">)){</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> $</span><span class=\"pun\">.</span><span class=\"pln\">getStyle</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">],</span><span class=\"pln\">cssName</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">style</span><span class=\"pun\">[</span><span class=\"pln\">cssName</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> cssVal</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"pln\">css </span><span class=\"kwd\">in</span><span class=\"pln\"> cssName</span><span class=\"pun\">){</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">style</span><span class=\"pun\">[</span><span class=\"pln\">css</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> attrName</span><span class=\"pun\">[</span><span class=\"pln\">css</span><span class=\"pun\">];</span></code></li><li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//获取或者设置自定义属性</span></code></li><li class=\"L8\"><code><span class=\"pln\">    data</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">dataName</span><span class=\"pun\">,</span><span class=\"pln\">dataVal</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">dataset</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arguments</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">dataset</span><span class=\"pun\">[</span><span class=\"pln\">dataName</span><span class=\"pun\">];</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">this</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">dataset</span><span class=\"pun\">[</span><span class=\"pln\">dataName</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> dataVal</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code><span class=\"pun\">});</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"com\">// 给jQuery实例添加事件方法</span></code></li><li class=\"L6\"><code><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">extend</span><span class=\"pun\">({</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">//添加一个事件</span></code></li><li class=\"L9\"><code><span class=\"pln\">    on</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L1\"><code><span class=\"pln\">            $</span><span class=\"pun\">.</span><span class=\"pln\">addEvent</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"com\">//删除一个事件</span></code></li><li class=\"L8\"><code><span class=\"pln\">    off</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span></code></li><li class=\"L0\"><code><span class=\"pln\">            $</span><span class=\"pun\">.</span><span class=\"pln\">removeEvent</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">fn</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">});</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code><span class=\"pun\">});</span></code></li></ol></pre><p>}( window ));`</p>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (20, 2, 'vue+element upload上传带参数(已解决)', '汪苗', 'http://oss.wangmiaozero.cn/wechat/fd85cb3e4004489380a501e233e6304c.png', 'http://oss.wangmiaozero.cn/wechat/fd85cb3e4004489380a501e233e6304c.png', 'web前端', 1031, '2018-06-21 19:46:21', '```javascript\r\n<el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">保存</el-button>\r\n```\r\n\r\n```javascript\r\n <el-upload\r\n    class=\"upload-demo\"\r\n    ref=\"upload\"\r\n    :action=\"action()\"\r\n    :on-preview=\"handlePreview\"\r\n    :before-upload=\"beforeUpload\"  \r\n    :data=\"uploadData\"    \r\n    :on-error = \"error\"\r\n    :on-success=\"successResave\"\r\n    :on-remove=\"handleRemove\"\r\n    :file-list=\"fileList\"\r\n    :auto-upload=\"false\">\r\n    <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\r\n    <!-- <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button> -->\r\n    <!-- <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div> -->\r\n    </el-upload>\r\n```\r\ndata\r\n```javascript\r\nuploaddata:null,\r\n```\r\n\r\n```javascript\r\naction(){\r\n       return this.portC+\"uplodResultsScore\"\r\n     },\r\n     //上传\r\n     submitUpload() {\r\n\r\n        this.$refs.upload.submit();\r\n      },\r\n      handleRemove(file, fileList) {\r\n        console.log(file, fileList);\r\n      },\r\n      handlePreview(file) {\r\n\r\n        console.log(file);\r\n      },\r\n      beforeUpload (file) {     \r\n          \r\n         this.uploadData = {dstype:this.proType,name:this.mobanname,dsmark:this.value5,};\r\n             console.log(this.uploadData)\r\n            let promise = new Promise((resolve) => {\r\n                this.$nextTick(function () {\r\n                    resolve(true);\r\n                });\r\n            });\r\n            return promise; //通过返回一个promis对象解决\r\n     },\r\n     //上传成功钩子\r\n     successResave(response, file, fileList){\r\n           console.log(response)\r\n           if(response.code==10001){\r\n              alert(\"保存成功\")  \r\n               this.proType=\"\";\r\n               this.mobanname=\"\";\r\n               this.value5=\"\";\r\n               this.$router.push(\"/moban\")\r\n           }\r\n     },\r\n    //失败钩子\r\n     error(response, file, fileList){\r\n           console.log(response)\r\n     },\r\n     //选择家化实效\r\n      selectType(val){\r\n         console.log(val)\r\n         if(val==1){\r\n             this.$router.push(\"/new\")\r\n         }else{\r\n             this.$router.push(\"/new1\")\r\n         }\r\n      },\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pun\">&lt;</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">button style</span><span class=\"pun\">=</span><span class=\"str\">\"margin-left: 10px;\"</span><span class=\"pln\"> size</span><span class=\"pun\">=</span><span class=\"str\">\"small\"</span><span class=\"pln\"> type</span><span class=\"pun\">=</span><span class=\"str\">\"success\"</span><span class=\"pln\"> </span><span class=\"lit\">@click</span><span class=\"pun\">=</span><span class=\"str\">\"submitUpload\"</span><span class=\"pun\">&gt;保存&lt;/</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">button</span><span class=\"pun\">&gt;</span></code></li></ol></pre>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">upload</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"upload-demo\"</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">    ref</span><span class=\"pun\">=</span><span class=\"str\">\"upload\"</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">action</span><span class=\"pun\">=</span><span class=\"str\">\"action()\"</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">on</span><span class=\"pun\">-</span><span class=\"pln\">preview</span><span class=\"pun\">=</span><span class=\"str\">\"handlePreview\"</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">before</span><span class=\"pun\">-</span><span class=\"pln\">upload</span><span class=\"pun\">=</span><span class=\"str\">\"beforeUpload\"</span><span class=\"pln\">  </span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">data</span><span class=\"pun\">=</span><span class=\"str\">\"uploadData\"</span><span class=\"pln\">    </span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">on</span><span class=\"pun\">-</span><span class=\"pln\">error </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"error\"</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">on</span><span class=\"pun\">-</span><span class=\"pln\">success</span><span class=\"pun\">=</span><span class=\"str\">\"successResave\"</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">on</span><span class=\"pun\">-</span><span class=\"pln\">remove</span><span class=\"pun\">=</span><span class=\"str\">\"handleRemove\"</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"pln\">file</span><span class=\"pun\">-</span><span class=\"pln\">list</span><span class=\"pun\">=</span><span class=\"str\">\"fileList\"</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">:</span><span class=\"kwd\">auto</span><span class=\"pun\">-</span><span class=\"pln\">upload</span><span class=\"pun\">=</span><span class=\"str\">\"false\"</span><span class=\"pun\">&gt;</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">button slot</span><span class=\"pun\">=</span><span class=\"str\">\"trigger\"</span><span class=\"pln\"> size</span><span class=\"pun\">=</span><span class=\"str\">\"small\"</span><span class=\"pln\"> type</span><span class=\"pun\">=</span><span class=\"str\">\"primary\"</span><span class=\"pun\">&gt;选取文件&lt;/</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">button</span><span class=\"pun\">&gt;</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">&lt;!--</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">button style</span><span class=\"pun\">=</span><span class=\"str\">\"margin-left: 10px;\"</span><span class=\"pln\"> size</span><span class=\"pun\">=</span><span class=\"str\">\"small\"</span><span class=\"pln\"> type</span><span class=\"pun\">=</span><span class=\"str\">\"success\"</span><span class=\"pln\"> </span><span class=\"lit\">@click</span><span class=\"pun\">=</span><span class=\"str\">\"submitUpload\"</span><span class=\"pun\">&gt;上传到服务器&lt;/</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">button</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">--&gt;</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">&lt;!--</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">div slot</span><span class=\"pun\">=</span><span class=\"str\">\"tip\"</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pun\">=</span><span class=\"str\">\"el-upload__tip\"</span><span class=\"pun\">&gt;只能上传</span><span class=\"pln\">jpg</span><span class=\"pun\">/</span><span class=\"pln\">png</span><span class=\"pun\">文件，且不超过</span><span class=\"lit\">500kb</span><span class=\"pun\">&lt;/</span><span class=\"pln\">div</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">--&gt;</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"pun\">&lt;/</span><span class=\"pln\">el</span><span class=\"pun\">-</span><span class=\"pln\">upload</span><span class=\"pun\">&gt;</span></code></li></ol></pre>\r\n<p>data</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">uploaddata</span><span class=\"pun\">:</span><span class=\"kwd\">null</span><span class=\"pun\">,</span></code></li></ol></pre>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">action</span><span class=\"pun\">(){</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">       </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">portC</span><span class=\"pun\">+</span><span class=\"str\">\"uplodResultsScore\"</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"pun\">},</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"com\">//上传</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">     submitUpload</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">$refs</span><span class=\"pun\">.</span><span class=\"pln\">upload</span><span class=\"pun\">.</span><span class=\"pln\">submit</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">      handleRemove</span><span class=\"pun\">(</span><span class=\"pln\">file</span><span class=\"pun\">,</span><span class=\"pln\"> fileList</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">        console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">file</span><span class=\"pun\">,</span><span class=\"pln\"> fileList</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">      handlePreview</span><span class=\"pun\">(</span><span class=\"pln\">file</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">        console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">file</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">      beforeUpload </span><span class=\"pun\">(</span><span class=\"pln\">file</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">     </span></code></li><li class=\"L6\"><code class=\"lang-javascript\"></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">         </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">uploadData </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">dstype</span><span class=\"pun\">:</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">proType</span><span class=\"pun\">,</span><span class=\"pln\">name</span><span class=\"pun\">:</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">mobanname</span><span class=\"pun\">,</span><span class=\"pln\">dsmark</span><span class=\"pun\">:</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">value5</span><span class=\"pun\">,};</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">             console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">uploadData</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">            let promise </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Promise</span><span class=\"pun\">((</span><span class=\"pln\">resolve</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">$nextTick</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">                    resolve</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">                </span><span class=\"pun\">});</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> promise</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">//通过返回一个promis对象解决</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"pun\">},</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"com\">//上传成功钩子</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">     successResave</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">,</span><span class=\"pln\"> file</span><span class=\"pun\">,</span><span class=\"pln\"> fileList</span><span class=\"pun\">){</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">           console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">           </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">code</span><span class=\"pun\">==</span><span class=\"lit\">10001</span><span class=\"pun\">){</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">              alert</span><span class=\"pun\">(</span><span class=\"str\">\"保存成功\"</span><span class=\"pun\">)</span><span class=\"pln\">  </span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">               </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">proType</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">               </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">mobanname</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">               </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">value5</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">               </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">$router</span><span class=\"pun\">.</span><span class=\"pln\">push</span><span class=\"pun\">(</span><span class=\"str\">\"/moban\"</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">           </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">    </span><span class=\"com\">//失败钩子</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">     error</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">,</span><span class=\"pln\"> file</span><span class=\"pun\">,</span><span class=\"pln\"> fileList</span><span class=\"pun\">){</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">           console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"pun\">},</span></code></li><li class=\"L1\"><code class=\"lang-javascript\"><span class=\"pln\">     </span><span class=\"com\">//选择家化实效</span></code></li><li class=\"L2\"><code class=\"lang-javascript\"><span class=\"pln\">      selectType</span><span class=\"pun\">(</span><span class=\"pln\">val</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code class=\"lang-javascript\"><span class=\"pln\">         console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">val</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code class=\"lang-javascript\"><span class=\"pln\">         </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">val</span><span class=\"pun\">==</span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code class=\"lang-javascript\"><span class=\"pln\">             </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">$router</span><span class=\"pun\">.</span><span class=\"pln\">push</span><span class=\"pun\">(</span><span class=\"str\">\"/new\"</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code class=\"lang-javascript\"><span class=\"pln\">         </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-javascript\"><span class=\"pln\">             </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">$router</span><span class=\"pun\">.</span><span class=\"pln\">push</span><span class=\"pun\">(</span><span class=\"str\">\"/new1\"</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code class=\"lang-javascript\"><span class=\"pln\">         </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-javascript\"><span class=\"pln\">      </span><span class=\"pun\">},</span></code></li></ol></pre>\r\n', 1, '17615848207');
INSERT INTO `articles` VALUES (21, 2, 'JS Math.sin() 与 Math.cos() 用法', '汪苗', 'http://oss.wangmiaozero.cn/wechat/ccc6a36f40c3e81c80b75628e1f0783b.png', 'http://oss.wangmiaozero.cn/wechat/ccc6a36f40c3e81c80b75628e1f0783b.png', 'Math.sin(x)      x 的正玄值。返回值在 -1.0 到 1.0 之间；  Math.cos() 函数返回一个数值的余弦值。', 1629, '2018-06-22 19:46:21', '```\r\n1.关于Math.sin(x)以及math.cos(X)\r\nMath.sin(x)      x 的正玄值。返回值在 -1.0 到 1.0 之间；\r\n\r\n \r\n\r\nMath.cos(x)    x 的余弦值。返回的是 -1.0 到 1.0 之间的数；\r\n\r\n这两个函数中的X 都是指的“弧度”而非“角度”，弧度的计算公式为： 2*PI/360*角度；\r\n\r\n30° 角度 的弧度 = 2*PI/360*30\r\n\r\n \r\n\r\n2.如何得到圆上每个点的坐标？\r\n解决思路：根据三角形的正玄、余弦来得值；\r\n\r\n假设一个圆的圆心坐标是(a,b)，半径为r，\r\n\r\n则圆上每个点的X坐标=a + Math.sin(2*Math.PI / 360) * r ；Y坐标=b + Math.cos(2*Math.PI / 360) * r ；\r\n\r\n \r\n\r\n3.如何求时钟的秒针转动一圈的轨迹？\r\n假设秒针的初始值（起点）为12点钟方向，圆心的坐标为（a,b)。\r\n\r\n解决思路：一分钟为60秒，一个圆为360°，所以平均每秒的转动角度为 360°/60 = 6°；\r\n\r\n \r\n\r\nfor(var times=0; times<60; times++) {\r\n\r\n      var hudu = (2*Math.PI / 360) * 6 * times;\r\n\r\n       var X = a + Math.sin(hudu) * r;\r\n\r\n       var Y = b - Math.cos(hudu) * r    //  注意此处是“-”号，因为我们要得到的Y是相对于（0,0）而言的。\r\n\r\n}\r\n```\r\n', '<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"lit\">1.</span><span class=\"pun\">关于</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">sin</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)以及</span><span class=\"pln\">math</span><span class=\"pun\">.</span><span class=\"pln\">cos</span><span class=\"pun\">(</span><span class=\"pln\">X</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">sin</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\">      x </span><span class=\"pun\">的正玄值。返回值在</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1.0</span><span class=\"pln\"> </span><span class=\"pun\">到</span><span class=\"pln\"> </span><span class=\"lit\">1.0</span><span class=\"pln\"> </span><span class=\"pun\">之间；</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">cos</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\">    x </span><span class=\"pun\">的余弦值。返回的是</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1.0</span><span class=\"pln\"> </span><span class=\"pun\">到</span><span class=\"pln\"> </span><span class=\"lit\">1.0</span><span class=\"pln\"> </span><span class=\"pun\">之间的数；</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pun\">这两个函数中的</span><span class=\"pln\">X </span><span class=\"pun\">都是指的“弧度”而非“角度”，弧度的计算公式为：</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">*</span><span class=\"pln\">PI</span><span class=\"pun\">/</span><span class=\"lit\">360</span><span class=\"pun\">*角度；</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"lit\">30</span><span class=\"pun\">°</span><span class=\"pln\"> </span><span class=\"pun\">角度</span><span class=\"pln\"> </span><span class=\"pun\">的弧度</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">*</span><span class=\"pln\">PI</span><span class=\"pun\">/</span><span class=\"lit\">360</span><span class=\"pun\">*</span><span class=\"lit\">30</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"lit\">2.</span><span class=\"pun\">如何得到圆上每个点的坐标？</span></code></li><li class=\"L4\"><code><span class=\"pun\">解决思路：根据三角形的正玄、余弦来得值；</span></code></li><li class=\"L5\"><code></code></li><li class=\"L6\"><code><span class=\"pun\">假设一个圆的圆心坐标是(</span><span class=\"pln\">a</span><span class=\"pun\">,</span><span class=\"pln\">b</span><span class=\"pun\">)，半径为</span><span class=\"pln\">r</span><span class=\"pun\">，</span></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code><span class=\"pun\">则圆上每个点的</span><span class=\"pln\">X</span><span class=\"pun\">坐标=</span><span class=\"pln\">a </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">sin</span><span class=\"pun\">(</span><span class=\"lit\">2</span><span class=\"pun\">*</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">PI </span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"lit\">360</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> r </span><span class=\"pun\">；</span><span class=\"pln\">Y</span><span class=\"pun\">坐标=</span><span class=\"pln\">b </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">cos</span><span class=\"pun\">(</span><span class=\"lit\">2</span><span class=\"pun\">*</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">PI </span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"lit\">360</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> r </span><span class=\"pun\">；</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code></code></li><li class=\"L2\"><code><span class=\"lit\">3.</span><span class=\"pun\">如何求时钟的秒针转动一圈的轨迹？</span></code></li><li class=\"L3\"><code><span class=\"pun\">假设秒针的初始值（起点）为</span><span class=\"lit\">12</span><span class=\"pun\">点钟方向，圆心的坐标为（</span><span class=\"pln\">a</span><span class=\"pun\">,</span><span class=\"pln\">b</span><span class=\"pun\">)。</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pun\">解决思路：一分钟为</span><span class=\"lit\">60</span><span class=\"pun\">秒，一个圆为</span><span class=\"lit\">360</span><span class=\"pun\">°，所以平均每秒的转动角度为</span><span class=\"pln\"> </span><span class=\"lit\">360</span><span class=\"pun\">°/</span><span class=\"lit\">60</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">6</span><span class=\"pun\">°；</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">var</span><span class=\"pln\"> times</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> times</span><span class=\"pun\">&lt;</span><span class=\"lit\">60</span><span class=\"pun\">;</span><span class=\"pln\"> times</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code></code></li><li class=\"L1\"><code><span class=\"pln\">      </span><span class=\"kwd\">var</span><span class=\"pln\"> hudu </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"lit\">2</span><span class=\"pun\">*</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">PI </span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"lit\">360</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">6</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> times</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code></code></li><li class=\"L3\"><code><span class=\"pln\">       </span><span class=\"kwd\">var</span><span class=\"pln\"> X </span><span class=\"pun\">=</span><span class=\"pln\"> a </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">sin</span><span class=\"pun\">(</span><span class=\"pln\">hudu</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> r</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">       </span><span class=\"kwd\">var</span><span class=\"pln\"> Y </span><span class=\"pun\">=</span><span class=\"pln\"> b </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">cos</span><span class=\"pun\">(</span><span class=\"pln\">hudu</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> r    </span><span class=\"com\">//  注意此处是“-”号，因为我们要得到的Y是相对于（0,0）而言的。</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pun\">}</span></code></li></ol></pre>', 1, '17615848207');
COMMIT;

-- ----------------------------
-- Table structure for articleType
-- ----------------------------
DROP TABLE IF EXISTS `articleType`;
CREATE TABLE `articleType` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '文章类型和用户选择的类型关联',
  `openid` varchar(28) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户openid',
  `typeName` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '类型名字',
  `isShow` int NOT NULL DEFAULT '0' COMMENT '是否显示0不显示1显示',
  `time` datetime DEFAULT NULL COMMENT '插入时间',
  `updateTime` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of articleType
-- ----------------------------
BEGIN;
INSERT INTO `articleType` VALUES (1, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'wechat', 1, '2019-04-17 23:19:13', NULL);
INSERT INTO `articleType` VALUES (2, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'javascript', 1, '2019-04-18 22:09:10', NULL);
INSERT INTO `articleType` VALUES (3, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'vue', 1, '2019-04-19 22:08:32', NULL);
INSERT INTO `articleType` VALUES (4, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'node.js', 1, '2019-04-20 21:07:51', NULL);
INSERT INTO `articleType` VALUES (5, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'webpack', 1, '2019-04-21 21:07:34', NULL);
INSERT INTO `articleType` VALUES (6, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '正则效验', 1, '2018-05-01 09:33:40', NULL);
INSERT INTO `articleType` VALUES (7, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'debug', 1, '2018-05-02 19:23:28', NULL);
INSERT INTO `articleType` VALUES (8, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '随笔', 1, '2018-05-03 19:19:43', NULL);
INSERT INTO `articleType` VALUES (9, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'react', 1, '2018-05-04 19:29:31', NULL);
INSERT INTO `articleType` VALUES (10, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '工具', 1, '2018-05-05 19:26:12', NULL);
INSERT INTO `articleType` VALUES (11, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'study', 1, '2018-05-05 19:26:12', NULL);
COMMIT;

-- ----------------------------
-- Table structure for code2Session
-- ----------------------------
DROP TABLE IF EXISTS `code2Session`;
CREATE TABLE `code2Session` (
  `appid` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '小程序 appId',
  `appSecret` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '小程序 appSecret',
  `grant_type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '授权类型，此处只需填写 authorization_code'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of code2Session
-- ----------------------------
BEGIN;
INSERT INTO `code2Session` VALUES ('', '', 'authorization_code');
COMMIT;

-- ----------------------------
-- Table structure for collect
-- ----------------------------
DROP TABLE IF EXISTS `collect`;
CREATE TABLE `collect` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `openid` varchar(28) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户openid',
  `articleID` int NOT NULL COMMENT '文章id',
  `isCollect` int NOT NULL DEFAULT '1' COMMENT '是否显示(0不显示,1显示)',
  `time` datetime DEFAULT NULL COMMENT '插入时间',
  `collectTypeID` varchar(28) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '用户自定义收藏的类型',
  `updateTime` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of collect
-- ----------------------------
BEGIN;
INSERT INTO `collect` VALUES (1, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 21, 1, '2019-10-30 17:22:46', '0', '2019-11-02 17:16:20');
INSERT INTO `collect` VALUES (2, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 19, 1, '2019-10-30 20:39:23', '0', '2019-10-31 10:51:35');
INSERT INTO `collect` VALUES (3, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 18, 1, '2019-10-30 20:43:04', '0', NULL);
INSERT INTO `collect` VALUES (4, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 20, 1, '2019-10-31 11:11:57', '0', NULL);
INSERT INTO `collect` VALUES (5, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 17, 1, '2019-11-13 14:16:24', '0', NULL);
INSERT INTO `collect` VALUES (6, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 16, 1, '2019-11-13 14:16:32', '0', NULL);
INSERT INTO `collect` VALUES (7, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 14, 1, '2019-11-13 14:16:43', '0', NULL);
INSERT INTO `collect` VALUES (8, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 13, 1, '2019-11-13 14:16:52', '0', NULL);
COMMIT;

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '评论id',
  `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '评论人userId',
  `user_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '评论人名称',
  `avatarurl` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '用户头像',
  `article_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '评论的文章id',
  `article_title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT '评论的文章标题',
  `parent_comment_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '-1' COMMENT '父评论id',
  `reply_comment_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT '被回复的评论id',
  `reply_comment_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT '被回复者的名称',
  `comment_level` tinyint NOT NULL DEFAULT '1' COMMENT '评论等级[ 1 一级评论 默认 ，2 二级评论]',
  `content` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '评论的内容',
  `status` tinyint NOT NULL DEFAULT '0' COMMENT '状态 (1 有效，0 逻辑删除)',
  `praise_num` int NOT NULL DEFAULT '0' COMMENT '点赞数',
  `top_status` tinyint NOT NULL DEFAULT '0' COMMENT '置顶状态[ 1 置顶，0 不置顶 默认 ]',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_article_id` (`article_id`) USING BTREE,
  KEY `idx_user_id` (`user_id`) USING BTREE,
  KEY `idx_create_time` (`create_time`) USING BTREE,
  KEY `idx_parent_comment_id` (`parent_comment_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=COMPACT COMMENT='文章评论表';

-- ----------------------------
-- Records of comment
-- ----------------------------
BEGIN;
INSERT INTO `comment` VALUES (1, 'aaa', '张三', 'http://oss.wangmiaozero.cn/wechat/avatarurl.jpg', '21', '标题党', '-1', '', '', 1, '一级评论文章-张三', 1, 0, 0, '2019-11-14 14:02:33');
INSERT INTO `comment` VALUES (2, 'bbb', '王小明', 'http://oss.wangmiaozero.cn/wechat/avatarurl.jpg', '21', '标题党', '1', '', '', 2, '回复一级评论-王小明', 1, 0, 0, '2019-11-14 14:02:33');
INSERT INTO `comment` VALUES (3, 'aaa', '张三', 'http://oss.wangmiaozero.cn/wechat/avatarurl.jpg', '21', '标题党', '1', '2', '王小明', 2, '回复二级评论-张三', 1, 0, 0, '2019-11-14 14:02:33');
INSERT INTO `comment` VALUES (4, 'ccc', '李四', 'http://oss.wangmiaozero.cn/wechat/avatarurl.jpg', '21', '标题党李四', '-1', '', '', 1, '一级评论文章-李四', 1, 0, 0, '2019-11-14 14:27:18');
INSERT INTO `comment` VALUES (5, 'ccc', '李四', 'http://oss.wangmiaozero.cn/wechat/avatarurl.jpg', '21', '标题党', '1', '', '', 2, '回复一级评论-李四', 1, 0, 0, '2019-11-14 14:30:21');
INSERT INTO `comment` VALUES (6, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '-1', '', '', 1, '22', 1, 0, 0, '2019-11-21 15:06:10');
INSERT INTO `comment` VALUES (7, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '6', '', '', 2, '2\'测试二级', 1, 0, 0, '2019-11-23 22:54:45');
INSERT INTO `comment` VALUES (8, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '6', '', '', 2, '2\'测试二级', 1, 0, 0, '2019-11-23 23:24:01');
INSERT INTO `comment` VALUES (9, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '6', '', '', 2, '测试二级', 1, 0, 0, '2019-11-23 23:44:38');
INSERT INTO `comment` VALUES (10, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '4', '', '', 2, '二级', 1, 0, 0, '2019-11-23 23:45:07');
INSERT INTO `comment` VALUES (11, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '20', 'vue+element upload上传带参数(已解决)', '-1', '', '', 1, '哈哈哈', 1, 0, 0, '2019-11-24 16:23:31');
INSERT INTO `comment` VALUES (12, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '20', 'vue+element upload上传带参数(已解决)', '11', '', '', 2, '二级', 1, 0, 0, '2019-11-24 16:23:47');
INSERT INTO `comment` VALUES (13, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '-1', '', '', 1, '2323', 1, 0, 0, '2019-11-24 18:32:24');
INSERT INTO `comment` VALUES (14, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '-1', '', '', 1, '2323', 1, 0, 0, '2019-11-24 18:32:28');
INSERT INTO `comment` VALUES (15, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '13', '', '', 2, '二级', 1, 0, 0, '2019-11-24 19:00:38');
INSERT INTO `comment` VALUES (16, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '13', '15', 'Seedling ', 2, '三级', 1, 0, 0, '2019-11-24 19:01:06');
INSERT INTO `comment` VALUES (17, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '13', '15', 'Seedling ', 2, '三级23333', 1, 0, 0, '2019-11-24 19:31:09');
INSERT INTO `comment` VALUES (18, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '13', '', '', 2, '二级二级', 1, 0, 0, '2019-11-24 19:33:12');
INSERT INTO `comment` VALUES (19, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '20', 'vue+element upload上传带参数(已解决)', '-1', '', '', 1, '一级', 1, 0, 0, '2019-11-24 20:19:07');
INSERT INTO `comment` VALUES (20, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '20', 'vue+element upload上传带参数(已解决)', '11', '', '', 2, '二级评论', 1, 0, 0, '2019-11-24 20:24:17');
INSERT INTO `comment` VALUES (21, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', '20', 'vue+element upload上传带参数(已解决)', '11', '12', 'Seedling ', 2, '三级@评论', 1, 0, 0, '2019-11-24 20:26:59');
INSERT INTO `comment` VALUES (22, 'oIcD15e5mnUKpMxjdl2mbc5waMR0', '陈', 'https://wx.qlogo.cn/mmopen/vi_32/k35xD9nAvFvQBat3Wlnney3ib03VQbfeyqutFn1VThKqhQEZPE2ibrDOGbIHwLHiaYzwo3u8I9zBKHVDJe5rJBWjA/132', '21', 'JS Math.sin() 与 Math.cos() 用法', '-1', '', '', 1, '111', 1, 0, 0, '2019-11-28 15:15:33');
INSERT INTO `comment` VALUES (23, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '兔子零', 'https://wx.qlogo.cn/mmopen/vi_32/icLicfovLhuA0RhFDaZMeUlRboaAibpo1HoooKXicNJt6zSB8Aq400f6VmkuYibIPD7ZVEXabJ8Pweqic2fOtbYaTWVg/132', '2', '前端微信授权两种方法', '-1', '', '', 1, 'Guhc', 1, 0, 0, '2019-11-28 18:13:58');
INSERT INTO `comment` VALUES (24, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '', 'http://oss.wangmiaozero.cn/wechat/avatarurl.jpg', '16', '访问助手', '-1', '', '', 1, '111', 1, 0, 0, '2019-11-28 23:25:24');
INSERT INTO `comment` VALUES (25, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '兔子零', 'https://wx.qlogo.cn/mmopen/vi_32/icLicfovLhuA0RhFDaZMeUlRboaAibpo1HoooKXicNJt6zSB8Aq400f6VmkuYibIPD7ZVEXabJ8Pweqic2fOtbYaTWVg/132', '19', 'js封装', '-1', '', '', 1, '111', 1, 0, 0, '2019-11-28 23:36:25');
INSERT INTO `comment` VALUES (26, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '兔子零', 'https://wx.qlogo.cn/mmopen/vi_32/icLicfovLhuA0RhFDaZMeUlRboaAibpo1HoooKXicNJt6zSB8Aq400f6VmkuYibIPD7ZVEXabJ8Pweqic2fOtbYaTWVg/132', '19', 'js封装', '25', '', '', 2, '222', 1, 0, 0, '2019-11-28 23:36:32');
INSERT INTO `comment` VALUES (29, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '兔子零', 'https://wx.qlogo.cn/mmopen/vi_32/icLicfovLhuA0RhFDaZMeUlRboaAibpo1HoooKXicNJt6zSB8Aq400f6VmkuYibIPD7ZVEXabJ8Pweqic2fOtbYaTWVg/132', '18', 'fetch请求', '-1', '', '', 1, '22', 1, 0, 0, '2019-11-29 17:49:22');
INSERT INTO `comment` VALUES (30, 'oIcD15dqVS97ZgXFL1RA_qmDmMmw', '郑佑瑶', 'https://wx.qlogo.cn/mmhead/J04YvyWlJjk1gcvkAYcicHul0mDcY4WRDBAp8G7cl3ek/132', '19', 'js封装', '-1', '', '', 1, '刁进平', 0, 0, 0, '2019-11-29 19:17:42');
COMMIT;

-- ----------------------------
-- Table structure for mask
-- ----------------------------
DROP TABLE IF EXISTS `mask`;
CREATE TABLE `mask` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `version` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '版本号',
  `status` int NOT NULL DEFAULT '0' COMMENT '0:不显示,1:显示',
  `time` datetime DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of mask
-- ----------------------------
BEGIN;
INSERT INTO `mask` VALUES (1, '1', 0, '2019-11-24 21:32:10');
COMMIT;

-- ----------------------------
-- Table structure for sign
-- ----------------------------
DROP TABLE IF EXISTS `sign`;
CREATE TABLE `sign` (
  `id` int NOT NULL AUTO_INCREMENT,
  `openid` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '用户openid',
  `time` datetime DEFAULT NULL COMMENT '签到时间(插入时间)',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of sign
-- ----------------------------
BEGIN;
INSERT INTO `sign` VALUES (1, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-11 16:54:51');
INSERT INTO `sign` VALUES (2, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-12 16:54:51');
INSERT INTO `sign` VALUES (3, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-13 17:27:53');
INSERT INTO `sign` VALUES (4, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-14 17:28:07');
INSERT INTO `sign` VALUES (5, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-15 17:28:07');
INSERT INTO `sign` VALUES (6, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-16 17:28:07');
INSERT INTO `sign` VALUES (7, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-17 17:28:07');
INSERT INTO `sign` VALUES (8, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-18 11:29:04');
INSERT INTO `sign` VALUES (9, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-19 20:56:09');
INSERT INTO `sign` VALUES (10, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-20 20:56:09');
INSERT INTO `sign` VALUES (11, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-21 09:26:11');
INSERT INTO `sign` VALUES (12, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-22 13:35:32');
INSERT INTO `sign` VALUES (13, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-23 12:16:58');
INSERT INTO `sign` VALUES (14, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-24 14:56:31');
INSERT INTO `sign` VALUES (15, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-28 14:58:29');
INSERT INTO `sign` VALUES (16, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-29 19:43:44');
INSERT INTO `sign` VALUES (17, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-30 11:38:24');
INSERT INTO `sign` VALUES (18, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-10-31 16:43:19');
INSERT INTO `sign` VALUES (19, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-01 10:23:17');
INSERT INTO `sign` VALUES (20, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-02 17:45:22');
INSERT INTO `sign` VALUES (21, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-05 20:53:45');
INSERT INTO `sign` VALUES (22, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-07 19:57:31');
INSERT INTO `sign` VALUES (23, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-13 09:11:52');
INSERT INTO `sign` VALUES (24, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-17 14:53:04');
INSERT INTO `sign` VALUES (25, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-23 22:57:15');
INSERT INTO `sign` VALUES (26, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-24 16:23:17');
INSERT INTO `sign` VALUES (27, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-28 00:35:50');
INSERT INTO `sign` VALUES (28, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '2019-11-28 14:05:39');
INSERT INTO `sign` VALUES (29, 'oIcD15fovu5DOOldzaLMjmPpQSEI', '2019-11-28 14:21:24');
INSERT INTO `sign` VALUES (30, 'oIcD15e5mnUKpMxjdl2mbc5waMR0', '2019-11-28 15:15:25');
INSERT INTO `sign` VALUES (31, 'oIcD15XLjW3hD-3KSPLaYZixWsA0', '2019-11-28 22:37:08');
INSERT INTO `sign` VALUES (32, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '2019-11-29 00:40:20');
INSERT INTO `sign` VALUES (33, 'oIcD15cui5cCBS4wQJeKQVUJPO_0', '2019-11-29 16:54:35');
INSERT INTO `sign` VALUES (34, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-11-29 21:23:04');
INSERT INTO `sign` VALUES (35, 'oIcD15QqsdxXDky4FKTE7ABa5lwE', '2019-11-29 23:39:55');
INSERT INTO `sign` VALUES (36, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '2019-11-30 13:53:02');
INSERT INTO `sign` VALUES (37, 'oIcD15TJ3sNojVZRIpr7hpRKY56o', '2019-11-30 14:39:39');
INSERT INTO `sign` VALUES (38, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', '2019-12-01 21:54:04');
COMMIT;

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `openid` varchar(28) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '小程序用户openid',
  `nickname` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '用户昵称',
  `avatarurl` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '用户头像',
  `gender` tinyint(1) DEFAULT '0' COMMENT '性别   0 男  1  女  2 人妖',
  `country` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '所在国家',
  `province` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '省份',
  `city` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '' COMMENT '城市',
  `language` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `ctime` datetime DEFAULT NULL COMMENT '创建时间',
  `mobile` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '手机类型',
  `telnum` char(13) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '手机号码',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

-- ----------------------------
-- Records of user
-- ----------------------------
BEGIN;
INSERT INTO `user` VALUES (1, 'oIcD15fWWJoWwtxvS_Ge07v6--xg', 'Seedling ', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoC4Ck8fb0RXStRxqSWezkuRQialbRYdvwpnrB7tgibm6dUicfKIm7DCzxJQRGD8zmgziaOovLiaQtNJw/132', 1, 'China', 'Hubei', 'Huanggang', 'zh_CN', '2018-07-11 00:00:00', '', '17615848207');
INSERT INTO `user` VALUES (2, 'oIcD15fovu5DOOldzaLMjmPpQSEI', '二白', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMOsCe9BHjupBQVicxnuIUPPrF9CwbEGgpz2GWl3ibbgL8lRVR7LFvj0kial7yLVaFY0X6PUSiaPzuxg/132', 1, 'China', 'Shanghai', 'Xuhui', 'zh_CN', '2019-11-28 00:00:00', '', '');
INSERT INTO `user` VALUES (3, 'oIcD15e5mnUKpMxjdl2mbc5waMR0', '陈', 'https://wx.qlogo.cn/mmopen/vi_32/k35xD9nAvFvQBat3Wlnney3ib03VQbfeyqutFn1VThKqhQEZPE2ibrDOGbIHwLHiaYzwo3u8I9zBKHVDJe5rJBWjA/132', 1, 'China', 'Shanghai', 'Songjiang', 'zh_CN', '2019-11-28 00:00:00', '', '');
INSERT INTO `user` VALUES (4, 'oIcD15XLjW3hD-3KSPLaYZixWsA0', 'Shine', 'https://wx.qlogo.cn/mmopen/vi_32/PUY9REth2iaCic735aic78UIU822xYuFcgYevoxXT00YmnDAX9ectiaWlp2YJnAnyvs8IGFiaA6r4l83LFsroIRVU1A/132', 0, 'Maldives', 'Male', '', 'zh_CN', '2019-11-28 00:00:00', '', '');
INSERT INTO `user` VALUES (21, 'oIcD15cui5cCBS4wQJeKQVUJPO_0', '蔡宗毅', 'https://wx.qlogo.cn/mmhead/tuODwpicfXG50OJ0nib7UY2IHNXm2G1qmH4RhkOwYrujU/132', 0, '', '', '', 'zh_CN', '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (20, 'oIcD15RkEQM5XLypI2qKJ0tj0E0Q', '辛福', 'https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELJoHlb4OQqA7pUa1TKhmfPmCbwwMxZiamSFutkYTOpstlFwyQTeDjkkjlj2EreicBYZ0rYcTMao1YA/132', 2, 'China', 'Anhui', 'Xuancheng', 'zh_CN', '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (19, 'oIcD15d1HzMlaHscS2lPp52haTM8', '', '', 0, NULL, NULL, '', NULL, '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (18, 'oIcD15R_ZonB03FpeFpbtAhzj3uQ', '兔子零', 'https://wx.qlogo.cn/mmopen/vi_32/icLicfovLhuA0RhFDaZMeUlRboaAibpo1HoooKXicNJt6zSB8Aq400f6VmkuYibIPD7ZVEXabJ8Pweqic2fOtbYaTWVg/132', 1, 'China', '', '', 'zh_CN', '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (22, 'oIcD15WaDu-iAyWuAr6tbwWBT3Sw', '', '', 0, NULL, NULL, '', NULL, '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (23, 'oIcD15QHXYMJvIRXt9-rFOxqdPX0', '满天星', 'https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELSo7bUzYOh7ib4cfADhu4O4GeicEedwPaeds5iaXqmH8vjUfvDTvcicarDMNJVOibAm19B3l5rlBXzNUQ/132', 2, '', 'Parana', '', 'zh_CN', '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (24, 'oIcD15dqVS97ZgXFL1RA_qmDmMmw', '郑佑瑶', 'https://wx.qlogo.cn/mmhead/J04YvyWlJjk1gcvkAYcicHul0mDcY4WRDBAp8G7cl3ek/132', 0, '', '', '', 'zh_CN', '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (25, 'oIcD15YUSaoaI_WCM-u-kYDEPHP4', '', '', 0, NULL, NULL, '', NULL, '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (26, 'oIcD15fcj6_MQaw54McEnSKEjQVY', '', '', 0, NULL, NULL, '', NULL, '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (27, 'oIcD15QqsdxXDky4FKTE7ABa5lwE', '神仙都没用', 'https://wx.qlogo.cn/mmopen/vi_32/ooViaLgQzOZBX8HlV5vXUnkzCy028fy5FcibzQiaYgzoLO6EbiadeclwBQTrIojy2lIrvrBUdgjHuK4qnFmmb6RfsA/132', 1, 'China', 'Fujian', 'Xiamen', 'zh_CN', '2019-11-29 00:00:00', '', NULL);
INSERT INTO `user` VALUES (28, 'oIcD15Tf_ySbrDDrwWTAfipUmsSc', '', '', 0, NULL, NULL, '', NULL, '2019-11-30 00:00:00', '', NULL);
INSERT INTO `user` VALUES (29, 'oIcD15bv_7YA74_pFm25FwU_vUl8', '', '', 0, NULL, NULL, '', NULL, '2019-11-30 00:00:00', '', NULL);
INSERT INTO `user` VALUES (32, 'oIcD15ds70IOLEOBTpXcZSujETLk', '夜雨声烦', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpFZm5lIWgoQjbd1WyLQvDtBic3mfCwC8Gcc7vzFicYvsuX3Dbs9PakGM2SwkJT2MAy5f4D2G0vDyw/132', 1, 'China', 'Liaoning', 'Anshan', 'zh_CN', '2019-11-30 00:00:00', '', NULL);
INSERT INTO `user` VALUES (31, 'oIcD15fZz6mneNGkjNjuzxmiFLb4', '', '', 0, NULL, NULL, '', NULL, '2019-11-30 00:00:00', '', NULL);
INSERT INTO `user` VALUES (33, 'oIcD15ZcQmXLGGYqq7QT0tZiJkZQ', '账号已注销', 'https://wx.qlogo.cn/mmopen/vi_32/yibuibuL1rMx0uKm3sJKrPw36ZHDdlHIrH0ROMY5yNWF96q5CxXY8EL9hSFIu1Y1AbLmuh0vqdK6ykianlCvje3icA/132', 1, 'China', 'Guangxi', 'Nanning', 'zh_CN', '2019-11-30 00:00:00', '', NULL);
INSERT INTO `user` VALUES (34, 'oIcD15TJ3sNojVZRIpr7hpRKY56o', 'Yi0nurs', 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZht8LogLUNA3vgnDwN1mGKDobSXT4mK2P4Zu6SSxmg8yy6NIxPMowzC2SQLcgNLicawbVKjHzbIA/132', 2, 'Japan', 'Iwate', '', 'zh_CN', '2019-11-30 00:00:00', '', NULL);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
